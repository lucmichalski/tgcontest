<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>RunFasttextClf (12 samples, 0.08%)</title><rect x="452.3" y="1941" width="1.0" height="15.0" fill="rgb(215,140,54)" rx="2" ry="2" />
<text  x="455.32" y="1951.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (110 samples, 0.76%)</title><rect x="81.3" y="2021" width="9.0" height="15.0" fill="rgb(247,167,47)" rx="2" ry="2" />
<text  x="84.32" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="229" width="0.5" height="15.0" fill="rgb(229,223,4)" rx="2" ry="2" />
<text  x="1185.75" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.10%)</title><rect x="456.1" y="1781" width="1.2" height="15.0" fill="rgb(236,78,49)" rx="2" ry="2" />
<text  x="459.07" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="981" width="0.1" height="15.0" fill="rgb(241,212,43)" rx="2" ry="2" />
<text  x="459.96" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="373" width="0.2" height="15.0" fill="rgb(230,87,14)" rx="2" ry="2" />
<text  x="459.80" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="456.1" y="1525" width="0.4" height="15.0" fill="rgb(206,95,52)" rx="2" ry="2" />
<text  x="459.15" y="1535.5" ></text>
</g>
<g >
<title>torch::jit::Object::find_method (2 samples, 0.01%)</title><rect x="474.6" y="1909" width="0.2" height="15.0" fill="rgb(252,38,12)" rx="2" ry="2" />
<text  x="477.65" y="1919.5" ></text>
</g>
<g >
<title>at::TypeDefault::fill__Scalar (8 samples, 0.06%)</title><rect x="68.7" y="85" width="0.6" height="15.0" fill="rgb(249,119,46)" rx="2" ry="2" />
<text  x="71.68" y="95.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (13 samples, 0.09%)</title><rect x="72.4" y="2005" width="1.1" height="15.0" fill="rgb(214,55,12)" rx="2" ry="2" />
<text  x="75.43" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="533" width="0.5" height="15.0" fill="rgb(210,126,31)" rx="2" ry="2" />
<text  x="1185.75" y="543.5" ></text>
</g>
<g >
<title>at::TypeDefault::fill__Scalar (12 samples, 0.08%)</title><rect x="67.6" y="69" width="1.0" height="15.0" fill="rgb(254,121,14)" rx="2" ry="2" />
<text  x="70.62" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (5 samples, 0.03%)</title><rect x="435.8" y="1941" width="0.4" height="15.0" fill="rgb(233,113,25)" rx="2" ry="2" />
<text  x="438.77" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="133" width="0.5" height="15.0" fill="rgb(228,144,26)" rx="2" ry="2" />
<text  x="1185.75" y="143.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="453.3" y="1941" width="0.2" height="15.0" fill="rgb(235,144,52)" rx="2" ry="2" />
<text  x="456.29" y="1951.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.03%)</title><rect x="684.4" y="2021" width="0.4" height="15.0" fill="rgb(239,109,45)" rx="2" ry="2" />
<text  x="687.44" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="456.5" y="1717" width="0.8" height="15.0" fill="rgb(253,183,7)" rx="2" ry="2" />
<text  x="459.47" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="165" width="0.7" height="15.0" fill="rgb(239,60,2)" rx="2" ry="2" />
<text  x="1186.72" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.1" y="1269" width="0.2" height="15.0" fill="rgb(212,115,28)" rx="2" ry="2" />
<text  x="460.13" y="1279.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::(anonymous namespace)::copy_ (9 samples, 0.06%)</title><rect x="471.1" y="1909" width="0.7" height="15.0" fill="rgb(228,50,6)" rx="2" ry="2" />
<text  x="474.06" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="757" width="0.7" height="15.0" fill="rgb(235,197,51)" rx="2" ry="2" />
<text  x="1186.72" y="767.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="965" width="7.5" height="15.0" fill="rgb(243,166,39)" rx="2" ry="2" />
<text  x="64.92" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1221" width="0.1" height="15.0" fill="rgb(213,132,4)" rx="2" ry="2" />
<text  x="459.96" y="1231.5" ></text>
</g>
<g >
<title>c10::TensorImpl::compute_contiguous (2 samples, 0.01%)</title><rect x="637.2" y="2005" width="0.2" height="15.0" fill="rgb(238,20,47)" rx="2" ry="2" />
<text  x="640.25" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1669" width="0.4" height="15.0" fill="rgb(227,97,36)" rx="2" ry="2" />
<text  x="446.68" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="245" width="0.7" height="15.0" fill="rgb(250,107,23)" rx="2" ry="2" />
<text  x="1186.72" y="255.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (355 samples, 2.45%)</title><rect x="787.5" y="2053" width="28.9" height="15.0" fill="rgb(243,95,43)" rx="2" ry="2" />
<text  x="790.46" y="2063.5" >fa..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.01%)</title><rect x="442.1" y="1941" width="0.2" height="15.0" fill="rgb(252,36,40)" rx="2" ry="2" />
<text  x="445.13" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1381" width="0.8" height="15.0" fill="rgb(220,161,6)" rx="2" ry="2" />
<text  x="1186.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="869" width="0.2" height="15.0" fill="rgb(233,144,53)" rx="2" ry="2" />
<text  x="1186.24" y="879.5" ></text>
</g>
<g >
<title>at::Tensor::options (2 samples, 0.01%)</title><rect x="735.2" y="1973" width="0.2" height="15.0" fill="rgb(209,8,50)" rx="2" ry="2" />
<text  x="738.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="853" width="0.7" height="15.0" fill="rgb(232,223,52)" rx="2" ry="2" />
<text  x="1186.72" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="485" width="0.2" height="15.0" fill="rgb(216,9,52)" rx="2" ry="2" />
<text  x="1186.24" y="495.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.01%)</title><rect x="469.3" y="1877" width="0.1" height="15.0" fill="rgb(214,180,6)" rx="2" ry="2" />
<text  x="472.27" y="1887.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::zeros (7 samples, 0.05%)</title><rect x="751.4" y="2021" width="0.6" height="15.0" fill="rgb(251,93,30)" rx="2" ry="2" />
<text  x="754.43" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.01%)</title><rect x="173.1" y="1925" width="0.2" height="15.0" fill="rgb(209,0,43)" rx="2" ry="2" />
<text  x="176.09" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (54 samples, 0.37%)</title><rect x="723.9" y="2037" width="4.4" height="15.0" fill="rgb(209,82,11)" rx="2" ry="2" />
<text  x="726.88" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (145 samples, 1.00%)</title><rect x="57.7" y="1973" width="11.8" height="15.0" fill="rgb(234,11,29)" rx="2" ry="2" />
<text  x="60.68" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1941" width="7.6" height="15.0" fill="rgb(228,217,41)" rx="2" ry="2" />
<text  x="64.92" y="1951.5" ></text>
</g>
<g >
<title>TNewsCluster::CalcImportance (13 samples, 0.09%)</title><rect x="442.0" y="1973" width="1.0" height="15.0" fill="rgb(244,130,45)" rx="2" ry="2" />
<text  x="444.97" y="1983.5" ></text>
</g>
<g >
<title>THTensor_resizeNd (2 samples, 0.01%)</title><rect x="472.9" y="1765" width="0.2" height="15.0" fill="rgb(244,43,10)" rx="2" ry="2" />
<text  x="475.94" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (12 samples, 0.08%)</title><rect x="1183.4" y="1925" width="1.0" height="15.0" fill="rgb(218,212,40)" rx="2" ry="2" />
<text  x="1186.40" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (52 samples, 0.36%)</title><rect x="632.0" y="2005" width="4.3" height="15.0" fill="rgb(232,205,21)" rx="2" ry="2" />
<text  x="635.03" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (5 samples, 0.03%)</title><rect x="438.1" y="1941" width="0.4" height="15.0" fill="rgb(206,119,50)" rx="2" ry="2" />
<text  x="441.05" y="1951.5" ></text>
</g>
<g >
<title>std::locale::locale (6 samples, 0.04%)</title><rect x="624.7" y="1941" width="0.5" height="15.0" fill="rgb(244,46,50)" rx="2" ry="2" />
<text  x="627.70" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="450.8" y="2005" width="0.2" height="15.0" fill="rgb(233,140,24)" rx="2" ry="2" />
<text  x="453.85" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="405" width="7.5" height="15.0" fill="rgb(213,61,54)" rx="2" ry="2" />
<text  x="64.92" y="415.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callUnboxed&lt;at::Tensor, at::Tensor const&amp;, long, long, long, long&gt; (24 samples, 0.17%)</title><rect x="468.9" y="1925" width="2.0" height="15.0" fill="rgb(248,85,45)" rx="2" ry="2" />
<text  x="471.94" y="1935.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.01%)</title><rect x="633.7" y="1973" width="0.2" height="15.0" fill="rgb(219,62,30)" rx="2" ry="2" />
<text  x="636.74" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (15 samples, 0.10%)</title><rect x="445.0" y="1925" width="1.2" height="15.0" fill="rgb(209,99,12)" rx="2" ry="2" />
<text  x="447.98" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="456.6" y="1605" width="0.7" height="15.0" fill="rgb(218,24,47)" rx="2" ry="2" />
<text  x="459.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.1" y="1285" width="0.2" height="15.0" fill="rgb(238,218,15)" rx="2" ry="2" />
<text  x="460.13" y="1295.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (2 samples, 0.01%)</title><rect x="46.6" y="2005" width="0.2" height="15.0" fill="rgb(240,53,35)" rx="2" ry="2" />
<text  x="49.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1141" width="0.1" height="15.0" fill="rgb(221,147,24)" rx="2" ry="2" />
<text  x="459.96" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="981" width="0.2" height="15.0" fill="rgb(213,131,49)" rx="2" ry="2" />
<text  x="1186.24" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="549" width="0.2" height="15.0" fill="rgb(252,77,7)" rx="2" ry="2" />
<text  x="1186.24" y="559.5" ></text>
</g>
<g >
<title>c10::TensorImpl::set_sizes_and_strides (2 samples, 0.01%)</title><rect x="473.1" y="1765" width="0.2" height="15.0" fill="rgb(248,182,37)" rx="2" ry="2" />
<text  x="476.10" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="734.4" y="2021" width="0.2" height="15.0" fill="rgb(215,3,9)" rx="2" ry="2" />
<text  x="737.40" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1173" width="7.5" height="15.0" fill="rgb(230,139,15)" rx="2" ry="2" />
<text  x="64.92" y="1183.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (60 samples, 0.41%)</title><rect x="1079.0" y="2053" width="4.9" height="15.0" fill="rgb(221,189,32)" rx="2" ry="2" />
<text  x="1081.99" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="448.6" y="1989" width="0.5" height="15.0" fill="rgb(237,138,49)" rx="2" ry="2" />
<text  x="451.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="443.7" y="1541" width="0.4" height="15.0" fill="rgb(220,23,42)" rx="2" ry="2" />
<text  x="446.68" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1077" width="7.5" height="15.0" fill="rgb(228,205,18)" rx="2" ry="2" />
<text  x="64.92" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1061" width="0.2" height="15.0" fill="rgb(230,36,20)" rx="2" ry="2" />
<text  x="459.80" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="229" width="0.7" height="15.0" fill="rgb(241,85,35)" rx="2" ry="2" />
<text  x="1186.72" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="485" width="0.5" height="15.0" fill="rgb(243,213,39)" rx="2" ry="2" />
<text  x="1185.75" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.7" y="37" width="0.2" height="15.0" fill="rgb(209,80,4)" rx="2" ry="2" />
<text  x="1186.72" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.08%)</title><rect x="1183.5" y="1893" width="0.9" height="15.0" fill="rgb(242,2,42)" rx="2" ry="2" />
<text  x="1186.48" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1717" width="7.5" height="15.0" fill="rgb(252,179,13)" rx="2" ry="2" />
<text  x="64.92" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="437" width="0.7" height="15.0" fill="rgb(227,48,36)" rx="2" ry="2" />
<text  x="1186.72" y="447.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (4 samples, 0.03%)</title><rect x="624.3" y="1941" width="0.3" height="15.0" fill="rgb(236,137,29)" rx="2" ry="2" />
<text  x="627.29" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="630.5" y="2021" width="0.2" height="15.0" fill="rgb(230,207,39)" rx="2" ry="2" />
<text  x="633.48" y="2031.5" ></text>
</g>
<g >
<title>[libtorch_cpu.so] (2 samples, 0.01%)</title><rect x="61.9" y="69" width="0.2" height="15.0" fill="rgb(245,222,43)" rx="2" ry="2" />
<text  x="64.92" y="79.5" ></text>
</g>
<g >
<title>[unknown] (899 samples, 6.21%)</title><rect x="55.0" y="2037" width="73.3" height="15.0" fill="rgb(244,0,27)" rx="2" ry="2" />
<text  x="57.99" y="2047.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="725" width="0.2" height="15.0" fill="rgb(223,195,9)" rx="2" ry="2" />
<text  x="1186.24" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="437" width="0.2" height="15.0" fill="rgb(215,135,11)" rx="2" ry="2" />
<text  x="459.80" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.02%)</title><rect x="47.1" y="2037" width="0.2" height="15.0" fill="rgb(218,78,25)" rx="2" ry="2" />
<text  x="50.08" y="2047.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (5 samples, 0.03%)</title><rect x="475.1" y="1893" width="0.4" height="15.0" fill="rgb(223,206,29)" rx="2" ry="2" />
<text  x="478.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1957" width="0.5" height="15.0" fill="rgb(209,205,19)" rx="2" ry="2" />
<text  x="1185.75" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.04%)</title><rect x="1183.9" y="37" width="0.5" height="15.0" fill="rgb(230,71,27)" rx="2" ry="2" />
<text  x="1186.89" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1029" width="0.1" height="15.0" fill="rgb(212,1,4)" rx="2" ry="2" />
<text  x="459.96" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1253" width="0.2" height="15.0" fill="rgb(237,22,12)" rx="2" ry="2" />
<text  x="459.80" y="1263.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (3 samples, 0.02%)</title><rect x="77.9" y="2021" width="0.2" height="15.0" fill="rgb(226,49,33)" rx="2" ry="2" />
<text  x="80.89" y="2031.5" ></text>
</g>
<g >
<title>at::TensorIterator::get_strides (3 samples, 0.02%)</title><rect x="745.3" y="2053" width="0.3" height="15.0" fill="rgb(232,21,32)" rx="2" ry="2" />
<text  x="748.32" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1717" width="0.4" height="15.0" fill="rgb(220,200,48)" rx="2" ry="2" />
<text  x="446.68" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1349" width="0.8" height="15.0" fill="rgb(222,129,36)" rx="2" ry="2" />
<text  x="1186.64" y="1359.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="451.1" y="2037" width="0.2" height="15.0" fill="rgb(213,128,39)" rx="2" ry="2" />
<text  x="454.09" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="533" width="0.2" height="15.0" fill="rgb(230,49,34)" rx="2" ry="2" />
<text  x="459.80" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;torch::autograd::generated::NormBackward1*, void  (2 samples, 0.01%)</title><rect x="722.0" y="2037" width="0.2" height="15.0" fill="rgb(207,139,20)" rx="2" ry="2" />
<text  x="725.01" y="2047.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.02%)</title><rect x="1165.1" y="2037" width="0.2" height="15.0" fill="rgb(208,183,17)" rx="2" ry="2" />
<text  x="1168.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="933" width="0.7" height="15.0" fill="rgb(246,138,38)" rx="2" ry="2" />
<text  x="1186.72" y="943.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1013" width="7.5" height="15.0" fill="rgb(236,80,32)" rx="2" ry="2" />
<text  x="64.92" y="1023.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.02%)</title><rect x="1185.4" y="2053" width="0.3" height="15.0" fill="rgb(214,24,43)" rx="2" ry="2" />
<text  x="1188.44" y="2063.5" ></text>
</g>
<g >
<title>torch::autograd::profiler::RecordFunction::~RecordFunction (2 samples, 0.01%)</title><rect x="735.9" y="2037" width="0.2" height="15.0" fill="rgb(229,72,25)" rx="2" ry="2" />
<text  x="738.95" y="2047.5" ></text>
</g>
<g >
<title>TNewsCluster::CalcImportance (217 samples, 1.50%)</title><rect x="425.4" y="1989" width="17.7" height="15.0" fill="rgb(238,83,24)" rx="2" ry="2" />
<text  x="428.42" y="1999.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::slice_Tensor (2 samples, 0.01%)</title><rect x="470.7" y="1909" width="0.2" height="15.0" fill="rgb(224,0,45)" rx="2" ry="2" />
<text  x="473.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="485" width="7.5" height="15.0" fill="rgb(250,148,51)" rx="2" ry="2" />
<text  x="64.92" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="965" width="0.2" height="15.0" fill="rgb(231,122,22)" rx="2" ry="2" />
<text  x="1186.24" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.03%)</title><rect x="456.1" y="1477" width="0.4" height="15.0" fill="rgb(213,14,18)" rx="2" ry="2" />
<text  x="459.15" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1717" width="0.5" height="15.0" fill="rgb(207,156,50)" rx="2" ry="2" />
<text  x="1185.75" y="1727.5" ></text>
</g>
<g >
<title>TEmbedder::CalcEmbedding (1,999 samples, 13.81%)</title><rect x="464.1" y="1957" width="162.9" height="15.0" fill="rgb(242,99,8)" rx="2" ry="2" />
<text  x="467.05" y="1967.5" >TEmbedder::CalcEmbedd..</text>
</g>
<g >
<title>[unknown] (91 samples, 0.63%)</title><rect x="61.9" y="117" width="7.4" height="15.0" fill="rgb(250,84,53)" rx="2" ry="2" />
<text  x="64.92" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="456.6" y="1413" width="0.7" height="15.0" fill="rgb(223,119,7)" rx="2" ry="2" />
<text  x="459.64" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="629" width="7.5" height="15.0" fill="rgb(234,221,49)" rx="2" ry="2" />
<text  x="64.92" y="639.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1429" width="7.5" height="15.0" fill="rgb(218,122,54)" rx="2" ry="2" />
<text  x="64.92" y="1439.5" ></text>
</g>
<g >
<title>torch::autograd::SavedVariable::operator= (2 samples, 0.01%)</title><rect x="635.7" y="1989" width="0.2" height="15.0" fill="rgb(232,108,16)" rx="2" ry="2" />
<text  x="638.70" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="293" width="7.5" height="15.0" fill="rgb(235,48,50)" rx="2" ry="2" />
<text  x="64.92" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17 samples, 0.12%)</title><rect x="455.9" y="1893" width="1.4" height="15.0" fill="rgb(217,148,27)" rx="2" ry="2" />
<text  x="458.90" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1301" width="0.8" height="15.0" fill="rgb(236,190,33)" rx="2" ry="2" />
<text  x="1186.64" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="645" width="0.7" height="15.0" fill="rgb(213,51,52)" rx="2" ry="2" />
<text  x="1186.72" y="655.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (5 samples, 0.03%)</title><rect x="172.5" y="1941" width="0.4" height="15.0" fill="rgb(224,97,37)" rx="2" ry="2" />
<text  x="175.52" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="325" width="0.5" height="15.0" fill="rgb(226,119,12)" rx="2" ry="2" />
<text  x="1185.75" y="335.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.08%)</title><rect x="476.1" y="1925" width="0.9" height="15.0" fill="rgb(247,89,33)" rx="2" ry="2" />
<text  x="479.12" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1093" width="0.2" height="15.0" fill="rgb(209,46,29)" rx="2" ry="2" />
<text  x="1186.24" y="1103.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor&amp;  (3 samples, 0.02%)</title><rect x="63.5" y="37" width="0.3" height="15.0" fill="rgb(222,150,52)" rx="2" ry="2" />
<text  x="66.55" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="629" width="0.5" height="15.0" fill="rgb(217,163,26)" rx="2" ry="2" />
<text  x="1185.75" y="639.5" ></text>
</g>
<g >
<title>c10::TensorImpl::requires_grad (2 samples, 0.01%)</title><rect x="641.6" y="2005" width="0.1" height="15.0" fill="rgb(208,220,35)" rx="2" ry="2" />
<text  x="644.57" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1541" width="0.2" height="15.0" fill="rgb(205,210,49)" rx="2" ry="2" />
<text  x="1186.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1733" width="0.5" height="15.0" fill="rgb(250,128,10)" rx="2" ry="2" />
<text  x="1185.75" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (158 samples, 1.09%)</title><rect x="171.9" y="1989" width="12.8" height="15.0" fill="rgb(240,182,35)" rx="2" ry="2" />
<text  x="174.86" y="1999.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (645 samples, 4.46%)</title><rect x="1083.9" y="2053" width="52.6" height="15.0" fill="rgb(212,211,38)" rx="2" ry="2" />
<text  x="1086.88" y="2063.5" >onmt:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1589" width="0.2" height="15.0" fill="rgb(206,98,39)" rx="2" ry="2" />
<text  x="1186.24" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="341" width="0.5" height="15.0" fill="rgb(222,125,52)" rx="2" ry="2" />
<text  x="1185.75" y="351.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 0.73%)</title><rect x="631.9" y="2021" width="8.6" height="15.0" fill="rgb(224,74,10)" rx="2" ry="2" />
<text  x="634.87" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1541" width="7.5" height="15.0" fill="rgb(205,78,7)" rx="2" ry="2" />
<text  x="64.92" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="197" width="7.5" height="15.0" fill="rgb(210,175,13)" rx="2" ry="2" />
<text  x="64.92" y="207.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="357" width="7.5" height="15.0" fill="rgb(244,114,48)" rx="2" ry="2" />
<text  x="64.92" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1141" width="0.5" height="15.0" fill="rgb(224,4,5)" rx="2" ry="2" />
<text  x="1185.75" y="1151.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (8 samples, 0.06%)</title><rect x="737.7" y="2053" width="0.6" height="15.0" fill="rgb(206,145,34)" rx="2" ry="2" />
<text  x="740.66" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1461" width="0.5" height="15.0" fill="rgb(207,212,0)" rx="2" ry="2" />
<text  x="1185.75" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (2 samples, 0.01%)</title><rect x="736.3" y="2005" width="0.1" height="15.0" fill="rgb(208,204,14)" rx="2" ry="2" />
<text  x="739.27" y="2015.5" ></text>
</g>
<g >
<title>torch::jit::InterpreterStateImpl::runImpl (42 samples, 0.29%)</title><rect x="1150.9" y="1957" width="3.4" height="15.0" fill="rgb(253,187,4)" rx="2" ry="2" />
<text  x="1153.88" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.08%)</title><rect x="1183.5" y="1797" width="0.9" height="15.0" fill="rgb(254,157,26)" rx="2" ry="2" />
<text  x="1186.48" y="1807.5" ></text>
</g>
<g >
<title>at::native::div (3 samples, 0.02%)</title><rect x="629.1" y="2021" width="0.2" height="15.0" fill="rgb(246,193,29)" rx="2" ry="2" />
<text  x="632.10" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="677" width="0.2" height="15.0" fill="rgb(253,90,54)" rx="2" ry="2" />
<text  x="459.80" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::emplace_back&lt;c10::IValue const&amp;&gt; (3 samples, 0.02%)</title><rect x="1150.4" y="1957" width="0.2" height="15.0" fill="rgb(231,67,48)" rx="2" ry="2" />
<text  x="1153.39" y="1967.5" ></text>
</g>
<g >
<title>torch::autograd::deleteNode (3 samples, 0.02%)</title><rect x="734.1" y="2037" width="0.2" height="15.0" fill="rgb(207,218,16)" rx="2" ry="2" />
<text  x="737.07" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1221" width="0.2" height="15.0" fill="rgb(251,59,45)" rx="2" ry="2" />
<text  x="459.80" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1445" width="7.5" height="15.0" fill="rgb(246,180,26)" rx="2" ry="2" />
<text  x="64.92" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1557" width="0.8" height="15.0" fill="rgb(235,69,29)" rx="2" ry="2" />
<text  x="1186.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="645" width="0.5" height="15.0" fill="rgb(214,24,42)" rx="2" ry="2" />
<text  x="1185.75" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="581" width="0.2" height="15.0" fill="rgb(253,205,6)" rx="2" ry="2" />
<text  x="1186.24" y="591.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (8 samples, 0.06%)</title><rect x="643.1" y="2037" width="0.7" height="15.0" fill="rgb(241,65,47)" rx="2" ry="2" />
<text  x="646.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.9" y="1397" width="0.2" height="15.0" fill="rgb(210,217,4)" rx="2" ry="2" />
<text  x="446.92" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="805" width="7.5" height="15.0" fill="rgb(234,154,22)" rx="2" ry="2" />
<text  x="64.92" y="815.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.03%)</title><rect x="449.1" y="1989" width="0.4" height="15.0" fill="rgb(239,0,53)" rx="2" ry="2" />
<text  x="452.14" y="1999.5" ></text>
</g>
<g >
<title>cfree (9 samples, 0.06%)</title><rect x="642.2" y="2037" width="0.8" height="15.0" fill="rgb(243,210,44)" rx="2" ry="2" />
<text  x="645.22" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (8 samples, 0.06%)</title><rect x="611.9" y="1941" width="0.7" height="15.0" fill="rgb(231,72,11)" rx="2" ry="2" />
<text  x="614.90" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;std::optional&lt;TDbDocument&gt;  (2 samples, 0.01%)</title><rect x="47.7" y="1989" width="0.1" height="15.0" fill="rgb(205,119,7)" rx="2" ry="2" />
<text  x="50.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1333" width="0.2" height="15.0" fill="rgb(210,28,16)" rx="2" ry="2" />
<text  x="1186.24" y="1343.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (14 samples, 0.10%)</title><rect x="1032.3" y="2053" width="1.1" height="15.0" fill="rgb(239,31,28)" rx="2" ry="2" />
<text  x="1035.29" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Loss::findKBest (3 samples, 0.02%)</title><rect x="869.0" y="2053" width="0.2" height="15.0" fill="rgb(229,133,20)" rx="2" ry="2" />
<text  x="871.96" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (417 samples, 2.88%)</title><rect x="10.2" y="2053" width="34.0" height="15.0" fill="rgb(210,111,40)" rx="2" ry="2" />
<text  x="13.24" y="2063.5" >[l..</text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (549 samples, 3.79%)</title><rect x="817.4" y="2053" width="44.7" height="15.0" fill="rgb(216,169,36)" rx="2" ry="2" />
<text  x="820.37" y="2063.5" >fast..</text>
</g>
<g >
<title>at::TensorIterator::build (10 samples, 0.07%)</title><rect x="70.8" y="1989" width="0.8" height="15.0" fill="rgb(218,14,3)" rx="2" ry="2" />
<text  x="73.80" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="421" width="7.5" height="15.0" fill="rgb(227,107,22)" rx="2" ry="2" />
<text  x="64.92" y="431.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1397" width="7.5" height="15.0" fill="rgb(249,145,17)" rx="2" ry="2" />
<text  x="64.92" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (15 samples, 0.10%)</title><rect x="1183.2" y="2053" width="1.2" height="15.0" fill="rgb(226,58,11)" rx="2" ry="2" />
<text  x="1186.15" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1605" width="0.4" height="15.0" fill="rgb(209,30,10)" rx="2" ry="2" />
<text  x="459.07" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.06%)</title><rect x="631.1" y="2021" width="0.6" height="15.0" fill="rgb(249,26,11)" rx="2" ry="2" />
<text  x="634.05" y="2031.5" ></text>
</g>
<g >
<title>c10::impl::InlineDeviceGuard&lt;c10::impl::VirtualGuardImpl&gt;::InlineDeviceGuard (3 samples, 0.02%)</title><rect x="753.6" y="2021" width="0.2" height="15.0" fill="rgb(227,159,45)" rx="2" ry="2" />
<text  x="756.55" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.08%)</title><rect x="1183.5" y="1813" width="0.9" height="15.0" fill="rgb(235,93,10)" rx="2" ry="2" />
<text  x="1186.48" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="456.6" y="1477" width="0.7" height="15.0" fill="rgb(222,117,31)" rx="2" ry="2" />
<text  x="459.55" y="1487.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (3 samples, 0.02%)</title><rect x="671.0" y="2037" width="0.2" height="15.0" fill="rgb(226,145,6)" rx="2" ry="2" />
<text  x="673.99" y="2047.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (6 samples, 0.04%)</title><rect x="636.8" y="2005" width="0.4" height="15.0" fill="rgb(223,206,0)" rx="2" ry="2" />
<text  x="639.76" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.03%)</title><rect x="731.1" y="2021" width="0.3" height="15.0" fill="rgb(252,218,44)" rx="2" ry="2" />
<text  x="734.06" y="2031.5" ></text>
</g>
<g >
<title>torch::jit::Module::forward (2 samples, 0.01%)</title><rect x="474.6" y="1925" width="0.2" height="15.0" fill="rgb(211,119,48)" rx="2" ry="2" />
<text  x="477.65" y="1935.5" ></text>
</g>
<g >
<title>at::Tensor::is_view (3 samples, 0.02%)</title><rect x="469.8" y="1877" width="0.3" height="15.0" fill="rgb(214,176,18)" rx="2" ry="2" />
<text  x="472.84" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="997" width="7.5" height="15.0" fill="rgb(207,189,23)" rx="2" ry="2" />
<text  x="64.92" y="1007.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor  (27 samples, 0.19%)</title><rect x="1151.5" y="1941" width="2.2" height="15.0" fill="rgb(207,99,25)" rx="2" ry="2" />
<text  x="1154.53" y="1951.5" ></text>
</g>
<g >
<title>torch::autograd::impl::gradient_edge (4 samples, 0.03%)</title><rect x="735.6" y="2037" width="0.3" height="15.0" fill="rgb(227,149,32)" rx="2" ry="2" />
<text  x="738.62" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="456.6" y="1509" width="0.7" height="15.0" fill="rgb(216,75,28)" rx="2" ry="2" />
<text  x="459.55" y="1519.5" ></text>
</g>
<g >
<title>at::TensorIterator::nullary_op (12 samples, 0.08%)</title><rect x="67.6" y="53" width="1.0" height="15.0" fill="rgb(237,94,35)" rx="2" ry="2" />
<text  x="70.62" y="63.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDbDocument*, std::vector&lt;TDbDocument, std::allocator&lt;TDbDocument&gt; &gt; &gt;, TDbDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;TClusterer::Cluster (12 samples, 0.08%)</title><rect x="423.2" y="1973" width="1.0" height="15.0" fill="rgb(241,217,52)" rx="2" ry="2" />
<text  x="426.22" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1317" width="0.2" height="15.0" fill="rgb(234,162,29)" rx="2" ry="2" />
<text  x="459.80" y="1327.5" ></text>
</g>
<g >
<title>TAlexaAgencyRating::ScoreUrl (74 samples, 0.51%)</title><rect x="428.0" y="1941" width="6.1" height="15.0" fill="rgb(235,203,7)" rx="2" ry="2" />
<text  x="431.03" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1877" width="0.2" height="15.0" fill="rgb(228,204,37)" rx="2" ry="2" />
<text  x="1186.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="1029" width="0.7" height="15.0" fill="rgb(253,80,1)" rx="2" ry="2" />
<text  x="1186.72" y="1039.5" ></text>
</g>
<g >
<title>at::native::legacy::cpu::_th_addmm_out (2 samples, 0.01%)</title><rect x="67.5" y="69" width="0.1" height="15.0" fill="rgb(242,5,18)" rx="2" ry="2" />
<text  x="70.46" y="79.5" ></text>
</g>
<g >
<title>.omp_outlined. (517 samples, 3.57%)</title><rect x="128.3" y="2005" width="42.1" height="15.0" fill="rgb(205,224,50)" rx="2" ry="2" />
<text  x="131.26" y="2015.5" >.om..</text>
</g>
<g >
<title>std::locale::~locale (8 samples, 0.06%)</title><rect x="625.2" y="1941" width="0.6" height="15.0" fill="rgb(249,20,9)" rx="2" ry="2" />
<text  x="628.18" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="709" width="0.2" height="15.0" fill="rgb(211,31,54)" rx="2" ry="2" />
<text  x="1186.24" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="357" width="0.5" height="15.0" fill="rgb(241,10,28)" rx="2" ry="2" />
<text  x="1185.75" y="367.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1237" width="7.5" height="15.0" fill="rgb(235,163,43)" rx="2" ry="2" />
<text  x="64.92" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1189" width="0.2" height="15.0" fill="rgb(224,201,54)" rx="2" ry="2" />
<text  x="459.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="443.7" y="1509" width="0.4" height="15.0" fill="rgb(208,213,46)" rx="2" ry="2" />
<text  x="446.68" y="1519.5" ></text>
</g>
<g >
<title>nlohmann::detail::dtoa_impl::grisu2_digit_gen (7 samples, 0.05%)</title><rect x="1029.3" y="2053" width="0.5" height="15.0" fill="rgb(208,118,33)" rx="2" ry="2" />
<text  x="1032.28" y="2063.5" ></text>
</g>
<g >
<title>TClusterer::Cluster (2,923 samples, 20.19%)</title><rect x="186.0" y="2005" width="238.3" height="15.0" fill="rgb(225,117,50)" rx="2" ry="2" />
<text  x="189.05" y="2015.5" >TClusterer::Cluster</text>
</g>
<g >
<title>fasttext::Vector::mul (7 samples, 0.05%)</title><rect x="613.4" y="1941" width="0.6" height="15.0" fill="rgb(252,122,44)" rx="2" ry="2" />
<text  x="616.45" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.10%)</title><rect x="1183.2" y="1989" width="1.2" height="15.0" fill="rgb(245,34,17)" rx="2" ry="2" />
<text  x="1186.24" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.01%)</title><rect x="1182.8" y="37" width="0.2" height="15.0" fill="rgb(218,26,24)" rx="2" ry="2" />
<text  x="1185.83" y="47.5" ></text>
</g>
<g >
<title>TDbDocument::~TDbDocument (2 samples, 0.01%)</title><rect x="424.9" y="1989" width="0.2" height="15.0" fill="rgb(254,215,28)" rx="2" ry="2" />
<text  x="427.93" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1157" width="0.1" height="15.0" fill="rgb(219,133,5)" rx="2" ry="2" />
<text  x="459.96" y="1167.5" ></text>
</g>
<g >
<title>torch::from_blob (28 samples, 0.19%)</title><rect x="472.3" y="1925" width="2.3" height="15.0" fill="rgb(241,29,10)" rx="2" ry="2" />
<text  x="475.28" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.03%)</title><rect x="56.6" y="1989" width="0.3" height="15.0" fill="rgb(236,64,28)" rx="2" ry="2" />
<text  x="59.62" y="1999.5" ></text>
</g>
<g >
<title>c10::TensorType::TensorType (2 samples, 0.01%)</title><rect x="1149.2" y="1941" width="0.2" height="15.0" fill="rgb(230,109,37)" rx="2" ry="2" />
<text  x="1152.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.9" y="1381" width="0.2" height="15.0" fill="rgb(218,167,8)" rx="2" ry="2" />
<text  x="446.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="997" width="0.2" height="15.0" fill="rgb(228,61,30)" rx="2" ry="2" />
<text  x="1186.24" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="149" width="0.2" height="15.0" fill="rgb(218,210,39)" rx="2" ry="2" />
<text  x="1186.24" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="549" width="0.2" height="15.0" fill="rgb(213,173,0)" rx="2" ry="2" />
<text  x="459.80" y="559.5" ></text>
</g>
<g >
<title>malloc (82 samples, 0.57%)</title><rect x="1021.0" y="2053" width="6.7" height="15.0" fill="rgb(208,62,10)" rx="2" ry="2" />
<text  x="1024.04" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (10 samples, 0.07%)</title><rect x="1184.5" y="2053" width="0.8" height="15.0" fill="rgb(229,150,19)" rx="2" ry="2" />
<text  x="1187.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="133" width="0.7" height="15.0" fill="rgb(233,62,53)" rx="2" ry="2" />
<text  x="1186.72" y="143.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.01%)</title><rect x="684.8" y="2021" width="0.2" height="15.0" fill="rgb(241,80,24)" rx="2" ry="2" />
<text  x="687.84" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;tg::EEmbeddingKey, std::pair&lt;tg::EEmbeddingKey const, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;tg::EEmbeddingKey const, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;tg::EEmbeddingKey&gt;, std::hash&lt;tg::EEmbeddingKey&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;tg::EEmbeddingKey, std::pair&lt;tg::EEmbeddingKey const, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;tg::EEmbeddingKey const, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;tg::EEmbeddingKey&gt;, std::hash&lt;tg::EEmbeddingKey&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_assign (2 samples, 0.01%)</title><rect x="424.5" y="1957" width="0.2" height="15.0" fill="rgb(234,82,25)" rx="2" ry="2" />
<text  x="427.52" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (24 samples, 0.17%)</title><rect x="432.1" y="1925" width="2.0" height="15.0" fill="rgb(211,188,14)" rx="2" ry="2" />
<text  x="435.10" y="1935.5" ></text>
</g>
<g >
<title>TAlexaAgencyRating::Load (2 samples, 0.01%)</title><rect x="444.3" y="1989" width="0.2" height="15.0" fill="rgb(222,194,8)" rx="2" ry="2" />
<text  x="447.33" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="965" width="0.7" height="15.0" fill="rgb(218,107,3)" rx="2" ry="2" />
<text  x="1186.72" y="975.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="450.8" y="1797" width="0.2" height="15.0" fill="rgb(249,116,35)" rx="2" ry="2" />
<text  x="453.85" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="1093" width="0.7" height="15.0" fill="rgb(222,126,36)" rx="2" ry="2" />
<text  x="1186.72" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="457.0" y="1317" width="0.3" height="15.0" fill="rgb(220,48,4)" rx="2" ry="2" />
<text  x="459.96" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::autograd::Edge, std::allocator&lt;torch::autograd::Edge&gt; &gt;::_M_emplace_back_aux&lt;torch::autograd::Edge&gt; (2 samples, 0.01%)</title><rect x="732.1" y="2037" width="0.2" height="15.0" fill="rgb(206,17,42)" rx="2" ry="2" />
<text  x="735.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.11%)</title><rect x="456.0" y="1797" width="1.3" height="15.0" fill="rgb(208,118,50)" rx="2" ry="2" />
<text  x="458.98" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1269" width="7.5" height="15.0" fill="rgb(208,177,22)" rx="2" ry="2" />
<text  x="64.92" y="1279.5" ></text>
</g>
<g >
<title>at::empty (7 samples, 0.05%)</title><rect x="752.6" y="2021" width="0.5" height="15.0" fill="rgb(206,155,35)" rx="2" ry="2" />
<text  x="755.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="101" width="0.5" height="15.0" fill="rgb(241,97,22)" rx="2" ry="2" />
<text  x="1185.75" y="111.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.05%)</title><rect x="57.0" y="1973" width="0.6" height="15.0" fill="rgb(209,56,26)" rx="2" ry="2" />
<text  x="60.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1157" width="7.5" height="15.0" fill="rgb(223,169,46)" rx="2" ry="2" />
<text  x="64.92" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.9" y="1365" width="0.2" height="15.0" fill="rgb(220,220,10)" rx="2" ry="2" />
<text  x="446.92" y="1375.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="639.3" y="2005" width="0.1" height="15.0" fill="rgb(254,13,24)" rx="2" ry="2" />
<text  x="642.28" y="2015.5" ></text>
</g>
<g >
<title>kmp_flag_64::wait (160 samples, 1.11%)</title><rect x="1007.9" y="2053" width="13.1" height="15.0" fill="rgb(233,190,45)" rx="2" ry="2" />
<text  x="1010.92" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="456.1" y="1589" width="0.4" height="15.0" fill="rgb(234,175,3)" rx="2" ry="2" />
<text  x="459.07" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1493" width="0.4" height="15.0" fill="rgb(222,56,51)" rx="2" ry="2" />
<text  x="446.68" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1589" width="0.4" height="15.0" fill="rgb(233,212,35)" rx="2" ry="2" />
<text  x="446.68" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1733" width="7.5" height="15.0" fill="rgb(231,184,41)" rx="2" ry="2" />
<text  x="64.92" y="1743.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_insert_unique&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="442.8" y="1957" width="0.1" height="15.0" fill="rgb(222,82,41)" rx="2" ry="2" />
<text  x="445.78" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1285" width="0.1" height="15.0" fill="rgb(220,34,53)" rx="2" ry="2" />
<text  x="459.96" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.10%)</title><rect x="1183.2" y="1941" width="1.2" height="15.0" fill="rgb(223,215,36)" rx="2" ry="2" />
<text  x="1186.24" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="450.8" y="1925" width="0.2" height="15.0" fill="rgb(241,83,13)" rx="2" ry="2" />
<text  x="453.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="443.4" y="1765" width="0.7" height="15.0" fill="rgb(223,105,24)" rx="2" ry="2" />
<text  x="446.43" y="1775.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="449.6" y="1957" width="0.3" height="15.0" fill="rgb(212,217,3)" rx="2" ry="2" />
<text  x="452.63" y="1967.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::norm_kernel_tensor_iterator_impl (3 samples, 0.02%)</title><rect x="1152.4" y="1845" width="0.3" height="15.0" fill="rgb(206,61,26)" rx="2" ry="2" />
<text  x="1155.43" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1589" width="7.5" height="15.0" fill="rgb(250,73,9)" rx="2" ry="2" />
<text  x="64.92" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (25 samples, 0.17%)</title><rect x="97.4" y="2021" width="2.0" height="15.0" fill="rgb(214,99,2)" rx="2" ry="2" />
<text  x="100.37" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="709" width="0.1" height="15.0" fill="rgb(245,32,28)" rx="2" ry="2" />
<text  x="459.96" y="719.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="477.4" y="1941" width="0.4" height="15.0" fill="rgb(227,61,8)" rx="2" ry="2" />
<text  x="480.42" y="1951.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="441.6" y="1957" width="0.3" height="15.0" fill="rgb(243,73,25)" rx="2" ry="2" />
<text  x="444.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="741" width="0.1" height="15.0" fill="rgb(207,206,37)" rx="2" ry="2" />
<text  x="459.96" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.3" y="1365" width="0.2" height="15.0" fill="rgb(250,79,46)" rx="2" ry="2" />
<text  x="459.31" y="1375.5" ></text>
</g>
<g >
<title>at::native::copy_ (21 samples, 0.15%)</title><rect x="746.1" y="2053" width="1.7" height="15.0" fill="rgb(222,132,19)" rx="2" ry="2" />
<text  x="749.05" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="453" width="0.5" height="15.0" fill="rgb(254,61,25)" rx="2" ry="2" />
<text  x="1185.75" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1653" width="0.7" height="15.0" fill="rgb(219,93,17)" rx="2" ry="2" />
<text  x="459.55" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1509" width="0.2" height="15.0" fill="rgb(250,224,21)" rx="2" ry="2" />
<text  x="446.51" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.03%)</title><rect x="46.6" y="2037" width="0.3" height="15.0" fill="rgb(242,25,49)" rx="2" ry="2" />
<text  x="49.59" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="449.6" y="1925" width="0.3" height="15.0" fill="rgb(213,109,7)" rx="2" ry="2" />
<text  x="452.63" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1045" width="0.1" height="15.0" fill="rgb(222,94,3)" rx="2" ry="2" />
<text  x="459.96" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="453" width="7.5" height="15.0" fill="rgb(245,162,12)" rx="2" ry="2" />
<text  x="64.92" y="463.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="661" width="7.5" height="15.0" fill="rgb(206,68,50)" rx="2" ry="2" />
<text  x="64.92" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="997" width="0.1" height="15.0" fill="rgb(253,38,15)" rx="2" ry="2" />
<text  x="459.96" y="1007.5" ></text>
</g>
<g >
<title>torch::autograd::impl::grad_accumulator (5 samples, 0.03%)</title><rect x="127.8" y="2021" width="0.4" height="15.0" fill="rgb(226,17,20)" rx="2" ry="2" />
<text  x="130.77" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="456.2" y="1397" width="0.3" height="15.0" fill="rgb(223,64,26)" rx="2" ry="2" />
<text  x="459.23" y="1407.5" ></text>
</g>
<g >
<title>tableCache (2 samples, 0.01%)</title><rect x="732.3" y="2037" width="0.1" height="15.0" fill="rgb(208,212,29)" rx="2" ry="2" />
<text  x="735.28" y="2047.5" ></text>
</g>
<g >
<title>__libc_start_main (3,444 samples, 23.79%)</title><rect x="170.4" y="2037" width="280.7" height="15.0" fill="rgb(218,35,2)" rx="2" ry="2" />
<text  x="173.40" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="837" width="0.2" height="15.0" fill="rgb(237,109,36)" rx="2" ry="2" />
<text  x="1186.24" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="517" width="0.5" height="15.0" fill="rgb(239,71,46)" rx="2" ry="2" />
<text  x="1185.75" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (2 samples, 0.01%)</title><rect x="442.8" y="1941" width="0.1" height="15.0" fill="rgb(254,109,46)" rx="2" ry="2" />
<text  x="445.78" y="1951.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::add_kernel (2 samples, 0.01%)</title><rect x="1151.6" y="1845" width="0.2" height="15.0" fill="rgb(242,207,50)" rx="2" ry="2" />
<text  x="1154.61" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1525" width="0.7" height="15.0" fill="rgb(221,142,44)" rx="2" ry="2" />
<text  x="459.55" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1845" width="7.6" height="15.0" fill="rgb(241,156,24)" rx="2" ry="2" />
<text  x="64.92" y="1855.5" ></text>
</g>
<g >
<title>torch::jit::Object::find_method (5 samples, 0.03%)</title><rect x="1147.0" y="2021" width="0.5" height="15.0" fill="rgb(252,172,16)" rx="2" ry="2" />
<text  x="1150.05" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;std::optional&lt;TDbDocument&gt;  (4 samples, 0.03%)</title><rect x="47.5" y="2021" width="0.3" height="15.0" fill="rgb(249,31,10)" rx="2" ry="2" />
<text  x="50.49" y="2031.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (2 samples, 0.01%)</title><rect x="627.3" y="1957" width="0.2" height="15.0" fill="rgb(225,33,53)" rx="2" ry="2" />
<text  x="630.30" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1477" width="7.5" height="15.0" fill="rgb(239,214,37)" rx="2" ry="2" />
<text  x="64.92" y="1487.5" ></text>
</g>
<g >
<title>torch::autograd::gatherFunctions (2 samples, 0.01%)</title><rect x="722.3" y="2005" width="0.2" height="15.0" fill="rgb(231,161,9)" rx="2" ry="2" />
<text  x="725.34" y="2015.5" ></text>
</g>
<g >
<title>TAlexaAgencyRating::GetCountryShare (4 samples, 0.03%)</title><rect x="442.0" y="1957" width="0.3" height="15.0" fill="rgb(220,26,28)" rx="2" ry="2" />
<text  x="444.97" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1685" width="0.2" height="15.0" fill="rgb(208,126,24)" rx="2" ry="2" />
<text  x="1186.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="693" width="0.7" height="15.0" fill="rgb(233,79,32)" rx="2" ry="2" />
<text  x="1186.72" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="456.5" y="1733" width="0.8" height="15.0" fill="rgb(251,196,41)" rx="2" ry="2" />
<text  x="459.47" y="1743.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::mm (3 samples, 0.02%)</title><rect x="733.4" y="2037" width="0.3" height="15.0" fill="rgb(219,24,11)" rx="2" ry="2" />
<text  x="736.42" y="2047.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (27 samples, 0.19%)</title><rect x="675.1" y="2037" width="2.2" height="15.0" fill="rgb(230,126,43)" rx="2" ry="2" />
<text  x="678.15" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.11%)</title><rect x="456.0" y="1845" width="1.3" height="15.0" fill="rgb(208,176,0)" rx="2" ry="2" />
<text  x="458.98" y="1855.5" ></text>
</g>
<g >
<title>c10::GetCurrentNUMANode (2 samples, 0.01%)</title><rect x="630.9" y="2037" width="0.2" height="15.0" fill="rgb(218,157,42)" rx="2" ry="2" />
<text  x="633.89" y="2047.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::t (3 samples, 0.02%)</title><rect x="733.7" y="2037" width="0.3" height="15.0" fill="rgb(241,196,44)" rx="2" ry="2" />
<text  x="736.75" y="2047.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (2 samples, 0.01%)</title><rect x="631.3" y="1989" width="0.2" height="15.0" fill="rgb(228,194,13)" rx="2" ry="2" />
<text  x="634.30" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.03%)</title><rect x="1165.3" y="2037" width="0.3" height="15.0" fill="rgb(217,210,24)" rx="2" ry="2" />
<text  x="1168.30" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="725" width="7.5" height="15.0" fill="rgb(208,27,15)" rx="2" ry="2" />
<text  x="64.92" y="735.5" ></text>
</g>
<g >
<title>at::CPUType::div_Tensor (4 samples, 0.03%)</title><rect x="629.0" y="2037" width="0.3" height="15.0" fill="rgb(226,31,36)" rx="2" ry="2" />
<text  x="632.02" y="2047.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::add_Tensor (2 samples, 0.01%)</title><rect x="1153.3" y="1925" width="0.2" height="15.0" fill="rgb(231,105,24)" rx="2" ry="2" />
<text  x="1156.32" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1029" width="7.5" height="15.0" fill="rgb(233,136,46)" rx="2" ry="2" />
<text  x="64.92" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.08%)</title><rect x="1183.5" y="1845" width="0.9" height="15.0" fill="rgb(233,187,33)" rx="2" ry="2" />
<text  x="1186.48" y="1855.5" ></text>
</g>
<g >
<title>at::native::as_strided_tensorimpl (3 samples, 0.02%)</title><rect x="639.4" y="1989" width="0.3" height="15.0" fill="rgb(245,34,47)" rx="2" ry="2" />
<text  x="642.45" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="325" width="7.5" height="15.0" fill="rgb(233,163,6)" rx="2" ry="2" />
<text  x="64.92" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1493" width="0.2" height="15.0" fill="rgb(213,20,15)" rx="2" ry="2" />
<text  x="1186.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="821" width="0.2" height="15.0" fill="rgb(250,98,19)" rx="2" ry="2" />
<text  x="1186.24" y="831.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.01%)</title><rect x="422.4" y="1957" width="0.2" height="15.0" fill="rgb(246,140,46)" rx="2" ry="2" />
<text  x="425.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="773" width="0.2" height="15.0" fill="rgb(205,8,51)" rx="2" ry="2" />
<text  x="459.80" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="789" width="0.7" height="15.0" fill="rgb(242,184,52)" rx="2" ry="2" />
<text  x="1186.72" y="799.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="1164.8" y="2037" width="0.3" height="15.0" fill="rgb(216,182,27)" rx="2" ry="2" />
<text  x="1167.82" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (7 samples, 0.05%)</title><rect x="1165.7" y="2053" width="0.6" height="15.0" fill="rgb(211,63,47)" rx="2" ry="2" />
<text  x="1168.71" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="456.1" y="1621" width="0.4" height="15.0" fill="rgb(244,51,31)" rx="2" ry="2" />
<text  x="459.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="443.8" y="1461" width="0.3" height="15.0" fill="rgb(233,144,30)" rx="2" ry="2" />
<text  x="446.84" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1573" width="0.2" height="15.0" fill="rgb(224,27,51)" rx="2" ry="2" />
<text  x="446.51" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1173" width="0.8" height="15.0" fill="rgb(250,33,5)" rx="2" ry="2" />
<text  x="1186.64" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="757" width="0.1" height="15.0" fill="rgb(251,89,0)" rx="2" ry="2" />
<text  x="459.96" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="789" width="0.5" height="15.0" fill="rgb(221,75,46)" rx="2" ry="2" />
<text  x="1185.75" y="799.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.08%)</title><rect x="625.8" y="1941" width="0.9" height="15.0" fill="rgb(242,125,19)" rx="2" ry="2" />
<text  x="628.84" y="1951.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (2 samples, 0.01%)</title><rect x="751.3" y="2005" width="0.1" height="15.0" fill="rgb(235,121,6)" rx="2" ry="2" />
<text  x="754.27" y="2015.5" ></text>
</g>
<g >
<title>std::future&lt;std::optional&lt;TDbDocument&gt; &gt;::get (5 samples, 0.03%)</title><rect x="185.2" y="1989" width="0.4" height="15.0" fill="rgb(240,74,8)" rx="2" ry="2" />
<text  x="188.23" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1797" width="0.2" height="15.0" fill="rgb(226,133,16)" rx="2" ry="2" />
<text  x="1186.24" y="1807.5" ></text>
</g>
<g >
<title>torch::autograd::impl::get_autograd_meta (2 samples, 0.01%)</title><rect x="127.4" y="2005" width="0.2" height="15.0" fill="rgb(212,34,42)" rx="2" ry="2" />
<text  x="130.45" y="2015.5" ></text>
</g>
<g >
<title>memcmp@plt (14 samples, 0.10%)</title><rect x="1027.8" y="2053" width="1.2" height="15.0" fill="rgb(238,98,3)" rx="2" ry="2" />
<text  x="1030.81" y="2063.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::{lambda (2 samples, 0.01%)</title><rect x="1150.7" y="1957" width="0.2" height="15.0" fill="rgb(222,14,50)" rx="2" ry="2" />
<text  x="1153.72" y="1967.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1973" width="0.2" height="15.0" fill="rgb(226,97,43)" rx="2" ry="2" />
<text  x="453.85" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1221" width="0.8" height="15.0" fill="rgb(252,18,29)" rx="2" ry="2" />
<text  x="1186.64" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="725" width="0.2" height="15.0" fill="rgb(242,163,12)" rx="2" ry="2" />
<text  x="459.80" y="735.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::operator[]&lt;char const&gt; (10 samples, 0.07%)</title><rect x="448.6" y="2005" width="0.9" height="15.0" fill="rgb(239,159,3)" rx="2" ry="2" />
<text  x="451.65" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1749" width="7.5" height="15.0" fill="rgb(208,211,31)" rx="2" ry="2" />
<text  x="64.92" y="1759.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callUnboxedWithDispatchKey&lt;at::Tensor&amp;, at::Tensor&amp;, c10::Storage, long, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt; &gt; (11 samples, 0.08%)</title><rect x="472.7" y="1845" width="0.9" height="15.0" fill="rgb(242,47,22)" rx="2" ry="2" />
<text  x="475.69" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="597" width="0.2" height="15.0" fill="rgb(244,119,26)" rx="2" ry="2" />
<text  x="1186.24" y="607.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (4 samples, 0.03%)</title><rect x="752.0" y="2021" width="0.3" height="15.0" fill="rgb(219,39,9)" rx="2" ry="2" />
<text  x="755.00" y="2031.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (2,168 samples, 14.97%)</title><rect x="451.7" y="2021" width="176.7" height="15.0" fill="rgb(230,65,44)" rx="2" ry="2" />
<text  x="454.66" y="2031.5" >std::__future_base::_S..</text>
</g>
<g >
<title>at::native::copy_impl (18 samples, 0.12%)</title><rect x="746.1" y="2037" width="1.5" height="15.0" fill="rgb(224,152,30)" rx="2" ry="2" />
<text  x="749.13" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="735.1" y="2005" width="0.3" height="15.0" fill="rgb(239,41,39)" rx="2" ry="2" />
<text  x="738.13" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="738.3" y="2053" width="0.2" height="15.0" fill="rgb(222,95,23)" rx="2" ry="2" />
<text  x="741.31" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="341" width="0.7" height="15.0" fill="rgb(252,173,13)" rx="2" ry="2" />
<text  x="1186.72" y="351.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (35 samples, 0.24%)</title><rect x="671.3" y="2037" width="2.9" height="15.0" fill="rgb(253,41,1)" rx="2" ry="2" />
<text  x="674.32" y="2047.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callUnboxed&lt;at::Tensor&amp;, at::Tensor&amp;, c10::Storage, long, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt; &gt; (11 samples, 0.08%)</title><rect x="472.7" y="1861" width="0.9" height="15.0" fill="rgb(216,225,31)" rx="2" ry="2" />
<text  x="475.69" y="1871.5" ></text>
</g>
<g >
<title>c10::IValue::toTensor (2 samples, 0.01%)</title><rect x="76.0" y="2005" width="0.2" height="15.0" fill="rgb(209,124,38)" rx="2" ry="2" />
<text  x="79.02" y="2015.5" ></text>
</g>
<g >
<title>c10::ClassType::isSubtypeOfExt (3 samples, 0.02%)</title><rect x="630.5" y="2037" width="0.2" height="15.0" fill="rgb(254,167,15)" rx="2" ry="2" />
<text  x="633.48" y="2047.5" ></text>
</g>
<g >
<title>at::TypeDefault::zeros (2 samples, 0.01%)</title><rect x="752.3" y="2021" width="0.2" height="15.0" fill="rgb(244,205,47)" rx="2" ry="2" />
<text  x="755.33" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1445" width="0.2" height="15.0" fill="rgb(222,221,51)" rx="2" ry="2" />
<text  x="1186.24" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="837" width="0.1" height="15.0" fill="rgb(240,152,22)" rx="2" ry="2" />
<text  x="459.96" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="453" width="0.2" height="15.0" fill="rgb(243,139,23)" rx="2" ry="2" />
<text  x="1186.24" y="463.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1605" width="7.5" height="15.0" fill="rgb(223,185,20)" rx="2" ry="2" />
<text  x="64.92" y="1615.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (8 samples, 0.06%)</title><rect x="440.6" y="1925" width="0.6" height="15.0" fill="rgb(216,52,16)" rx="2" ry="2" />
<text  x="443.58" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (23 samples, 0.16%)</title><rect x="430.2" y="1925" width="1.9" height="15.0" fill="rgb(220,43,37)" rx="2" ry="2" />
<text  x="433.23" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1493" width="0.2" height="15.0" fill="rgb(220,207,33)" rx="2" ry="2" />
<text  x="446.51" y="1503.5" ></text>
</g>
<g >
<title>at::CPUType::add_Tensor (3 samples, 0.02%)</title><rect x="1151.5" y="1909" width="0.3" height="15.0" fill="rgb(218,160,19)" rx="2" ry="2" />
<text  x="1154.53" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (22 samples, 0.15%)</title><rect x="446.9" y="2005" width="1.7" height="15.0" fill="rgb(232,140,10)" rx="2" ry="2" />
<text  x="449.86" y="2015.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (11 samples, 0.08%)</title><rect x="476.1" y="1909" width="0.9" height="15.0" fill="rgb(244,17,28)" rx="2" ry="2" />
<text  x="479.12" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="917" width="7.5" height="15.0" fill="rgb(244,37,49)" rx="2" ry="2" />
<text  x="64.92" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (7 samples, 0.05%)</title><rect x="673.6" y="2021" width="0.6" height="15.0" fill="rgb(220,2,26)" rx="2" ry="2" />
<text  x="676.60" y="2031.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (2,905 samples, 20.06%)</title><rect x="186.4" y="1989" width="236.7" height="15.0" fill="rgb(229,159,33)" rx="2" ry="2" />
<text  x="189.37" y="1999.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>THFloatTensor_setStorage (5 samples, 0.03%)</title><rect x="472.9" y="1781" width="0.4" height="15.0" fill="rgb(220,14,46)" rx="2" ry="2" />
<text  x="475.86" y="1791.5" ></text>
</g>
<g >
<title>c10::TensorImpl::numel (2 samples, 0.01%)</title><rect x="747.6" y="2037" width="0.2" height="15.0" fill="rgb(215,23,1)" rx="2" ry="2" />
<text  x="750.60" y="2047.5" ></text>
</g>
<g >
<title>c10::detail::make_boxed_from_unboxed_functor&lt;c10::detail::WrapKernelFunction_&lt;long  (4 samples, 0.03%)</title><rect x="75.9" y="2021" width="0.4" height="15.0" fill="rgb(237,8,37)" rx="2" ry="2" />
<text  x="78.94" y="2031.5" ></text>
</g>
<g >
<title>TSummarizer::TSummarizer (2 samples, 0.01%)</title><rect x="444.3" y="2005" width="0.2" height="15.0" fill="rgb(251,151,8)" rx="2" ry="2" />
<text  x="447.33" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1701" width="0.2" height="15.0" fill="rgb(231,20,49)" rx="2" ry="2" />
<text  x="1186.24" y="1711.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable_differentiable_view (2 samples, 0.01%)</title><rect x="636.0" y="1989" width="0.2" height="15.0" fill="rgb(215,48,8)" rx="2" ry="2" />
<text  x="639.02" y="1999.5" ></text>
</g>
<g >
<title>torch::autograd::generated::SqueezeBackward1::~SqueezeBackward1 (3 samples, 0.02%)</title><rect x="735.1" y="2037" width="0.3" height="15.0" fill="rgb(222,149,4)" rx="2" ry="2" />
<text  x="738.13" y="2047.5" ></text>
</g>
<g >
<title>mkl_blas__sgemm (3 samples, 0.02%)</title><rect x="638.9" y="2005" width="0.2" height="15.0" fill="rgb(232,2,5)" rx="2" ry="2" />
<text  x="641.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1109" width="0.2" height="15.0" fill="rgb(205,55,23)" rx="2" ry="2" />
<text  x="1186.24" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1189" width="0.5" height="15.0" fill="rgb(239,165,41)" rx="2" ry="2" />
<text  x="1185.75" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1509" width="0.2" height="15.0" fill="rgb(218,83,50)" rx="2" ry="2" />
<text  x="1186.24" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="357" width="0.7" height="15.0" fill="rgb(245,220,51)" rx="2" ry="2" />
<text  x="1186.72" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="805" width="0.7" height="15.0" fill="rgb(229,34,19)" rx="2" ry="2" />
<text  x="1186.72" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1301" width="0.2" height="15.0" fill="rgb(252,48,29)" rx="2" ry="2" />
<text  x="1186.24" y="1311.5" ></text>
</g>
<g >
<title>at::TensorIterator::analyze_memory_format (2 samples, 0.01%)</title><rect x="67.6" y="37" width="0.2" height="15.0" fill="rgb(246,192,0)" rx="2" ry="2" />
<text  x="70.62" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="389" width="0.2" height="15.0" fill="rgb(252,219,17)" rx="2" ry="2" />
<text  x="459.80" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="837" width="0.5" height="15.0" fill="rgb(253,146,0)" rx="2" ry="2" />
<text  x="1185.75" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="933" width="0.5" height="15.0" fill="rgb(228,32,45)" rx="2" ry="2" />
<text  x="1185.75" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1157" width="0.2" height="15.0" fill="rgb(247,64,47)" rx="2" ry="2" />
<text  x="459.80" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1125" width="0.1" height="15.0" fill="rgb(237,207,46)" rx="2" ry="2" />
<text  x="459.96" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="501" width="0.5" height="15.0" fill="rgb(215,90,50)" rx="2" ry="2" />
<text  x="1185.75" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="613" width="0.7" height="15.0" fill="rgb(236,78,36)" rx="2" ry="2" />
<text  x="1186.72" y="623.5" ></text>
</g>
<g >
<title>torch::autograd::SavedVariable::SavedVariable (2 samples, 0.01%)</title><rect x="640.3" y="1989" width="0.2" height="15.0" fill="rgb(250,147,52)" rx="2" ry="2" />
<text  x="643.34" y="1999.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (37 samples, 0.26%)</title><rect x="90.3" y="2021" width="3.0" height="15.0" fill="rgb(230,204,14)" rx="2" ry="2" />
<text  x="93.28" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1109" width="7.5" height="15.0" fill="rgb(211,137,54)" rx="2" ry="2" />
<text  x="64.92" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="373" width="0.7" height="15.0" fill="rgb(240,93,48)" rx="2" ry="2" />
<text  x="1186.72" y="383.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (2 samples, 0.01%)</title><rect x="453.9" y="1941" width="0.1" height="15.0" fill="rgb(209,171,32)" rx="2" ry="2" />
<text  x="456.87" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (3 samples, 0.02%)</title><rect x="449.6" y="1909" width="0.3" height="15.0" fill="rgb(246,95,6)" rx="2" ry="2" />
<text  x="452.63" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="965" width="0.1" height="15.0" fill="rgb(232,81,36)" rx="2" ry="2" />
<text  x="459.96" y="975.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.03%)</title><rect x="721.4" y="2037" width="0.3" height="15.0" fill="rgb(243,106,14)" rx="2" ry="2" />
<text  x="724.36" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="869" width="0.1" height="15.0" fill="rgb(221,94,8)" rx="2" ry="2" />
<text  x="459.96" y="879.5" ></text>
</g>
<g >
<title>torch::autograd::AccumulateGrad::AccumulateGrad (3 samples, 0.02%)</title><rect x="127.9" y="2005" width="0.3" height="15.0" fill="rgb(217,134,15)" rx="2" ry="2" />
<text  x="130.93" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.08%)</title><rect x="1183.5" y="1877" width="0.9" height="15.0" fill="rgb(205,193,17)" rx="2" ry="2" />
<text  x="1186.48" y="1887.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::(anonymous namespace)::is_leaf (2 samples, 0.01%)</title><rect x="127.4" y="2021" width="0.2" height="15.0" fill="rgb(229,46,19)" rx="2" ry="2" />
<text  x="130.45" y="2031.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (2 samples, 0.01%)</title><rect x="751.8" y="2005" width="0.1" height="15.0" fill="rgb(251,76,10)" rx="2" ry="2" />
<text  x="754.76" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="901" width="0.7" height="15.0" fill="rgb(205,165,42)" rx="2" ry="2" />
<text  x="1186.72" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="805" width="0.1" height="15.0" fill="rgb(240,1,20)" rx="2" ry="2" />
<text  x="459.96" y="815.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;at::OperandInfo&gt;::emplace_back&lt;at::Tensor const&amp;&gt; (4 samples, 0.03%)</title><rect x="747.2" y="2021" width="0.3" height="15.0" fill="rgb(229,156,42)" rx="2" ry="2" />
<text  x="750.19" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="443.8" y="1445" width="0.3" height="15.0" fill="rgb(222,31,43)" rx="2" ry="2" />
<text  x="446.84" y="1455.5" ></text>
</g>
<g >
<title>torch::autograd::profiler::(anonymous namespace)::manager (2 samples, 0.01%)</title><rect x="470.5" y="1893" width="0.2" height="15.0" fill="rgb(254,136,19)" rx="2" ry="2" />
<text  x="473.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1557" width="0.2" height="15.0" fill="rgb(239,174,32)" rx="2" ry="2" />
<text  x="1186.24" y="1567.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (20 samples, 0.14%)</title><rect x="1136.5" y="2053" width="1.6" height="15.0" fill="rgb(236,138,20)" rx="2" ry="2" />
<text  x="1139.45" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (20 samples, 0.14%)</title><rect x="63.8" y="37" width="1.6" height="15.0" fill="rgb(209,148,34)" rx="2" ry="2" />
<text  x="66.79" y="47.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="445.2" y="1893" width="0.3" height="15.0" fill="rgb(250,44,0)" rx="2" ry="2" />
<text  x="448.23" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="373" width="7.5" height="15.0" fill="rgb(230,165,45)" rx="2" ry="2" />
<text  x="64.92" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1109" width="0.5" height="15.0" fill="rgb(207,212,13)" rx="2" ry="2" />
<text  x="1185.75" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1701" width="7.5" height="15.0" fill="rgb(245,72,51)" rx="2" ry="2" />
<text  x="64.92" y="1711.5" ></text>
</g>
<g >
<title>at::TensorIterator::permute_dimensions (2 samples, 0.01%)</title><rect x="629.6" y="2021" width="0.1" height="15.0" fill="rgb(211,214,42)" rx="2" ry="2" />
<text  x="632.59" y="2031.5" ></text>
</g>
<g >
<title>at::TensorIterator::build (4 samples, 0.03%)</title><rect x="748.2" y="2005" width="0.3" height="15.0" fill="rgb(220,85,31)" rx="2" ry="2" />
<text  x="751.17" y="2015.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (17 samples, 0.12%)</title><rect x="1029.8" y="2053" width="1.4" height="15.0" fill="rgb(235,167,10)" rx="2" ry="2" />
<text  x="1032.85" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="456.1" y="1461" width="0.4" height="15.0" fill="rgb(225,173,21)" rx="2" ry="2" />
<text  x="459.15" y="1471.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="626.7" y="1941" width="0.3" height="15.0" fill="rgb(237,50,28)" rx="2" ry="2" />
<text  x="629.73" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="869" width="7.5" height="15.0" fill="rgb(221,112,51)" rx="2" ry="2" />
<text  x="64.92" y="879.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1061" width="7.5" height="15.0" fill="rgb(229,3,53)" rx="2" ry="2" />
<text  x="64.92" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1269" width="0.5" height="15.0" fill="rgb(214,191,8)" rx="2" ry="2" />
<text  x="1185.75" y="1279.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;std::optional&lt;TDbDocument&gt; &gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_state&lt;std::_Bind&lt;std::optional&lt;TDbDocument&gt;  (2,166 samples, 14.96%)</title><rect x="451.8" y="1989" width="176.6" height="15.0" fill="rgb(242,154,48)" rx="2" ry="2" />
<text  x="454.83" y="1999.5" >std::__future_base::_T..</text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="245" width="7.5" height="15.0" fill="rgb(214,193,32)" rx="2" ry="2" />
<text  x="64.92" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="456.5" y="1685" width="0.8" height="15.0" fill="rgb(220,72,26)" rx="2" ry="2" />
<text  x="459.47" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (3 samples, 0.02%)</title><rect x="610.4" y="1941" width="0.2" height="15.0" fill="rgb(241,193,5)" rx="2" ry="2" />
<text  x="613.35" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1621" width="0.4" height="15.0" fill="rgb(227,155,40)" rx="2" ry="2" />
<text  x="446.68" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1205" width="0.2" height="15.0" fill="rgb(211,100,19)" rx="2" ry="2" />
<text  x="1186.24" y="1215.5" ></text>
</g>
<g >
<title>torch::autograd::DifferentiableViewMeta::DifferentiableViewMeta (2 samples, 0.01%)</title><rect x="641.2" y="1973" width="0.2" height="15.0" fill="rgb(225,68,22)" rx="2" ry="2" />
<text  x="644.24" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="389" width="7.5" height="15.0" fill="rgb(247,227,27)" rx="2" ry="2" />
<text  x="64.92" y="399.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1189" width="7.5" height="15.0" fill="rgb(238,216,41)" rx="2" ry="2" />
<text  x="64.92" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1621" width="0.8" height="15.0" fill="rgb(214,29,32)" rx="2" ry="2" />
<text  x="1186.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1221" width="0.2" height="15.0" fill="rgb(224,168,33)" rx="2" ry="2" />
<text  x="1186.24" y="1231.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (2 samples, 0.01%)</title><rect x="643.0" y="2037" width="0.1" height="15.0" fill="rgb(216,175,11)" rx="2" ry="2" />
<text  x="645.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1445" width="0.8" height="15.0" fill="rgb(230,158,19)" rx="2" ry="2" />
<text  x="1186.64" y="1455.5" ></text>
</g>
<g >
<title>c10::impl::tls_local_dispatch_key_set (2 samples, 0.01%)</title><rect x="750.9" y="2053" width="0.1" height="15.0" fill="rgb(230,98,16)" rx="2" ry="2" />
<text  x="753.86" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.03%)</title><rect x="456.1" y="1445" width="0.4" height="15.0" fill="rgb(208,19,2)" rx="2" ry="2" />
<text  x="459.15" y="1455.5" ></text>
</g>
<g >
<title>at::native::DispatchStub&lt;void  (2 samples, 0.01%)</title><rect x="1151.6" y="1877" width="0.2" height="15.0" fill="rgb(207,125,17)" rx="2" ry="2" />
<text  x="1154.61" y="1887.5" ></text>
</g>
<g >
<title>__kmp_hardware_timestamp (69 samples, 0.48%)</title><rect x="738.5" y="2053" width="5.6" height="15.0" fill="rgb(226,44,34)" rx="2" ry="2" />
<text  x="741.47" y="2063.5" ></text>
</g>
<g >
<title>TAnnotator::AnnotateDocument (2,157 samples, 14.90%)</title><rect x="452.2" y="1973" width="175.8" height="15.0" fill="rgb(230,220,5)" rx="2" ry="2" />
<text  x="455.24" y="1983.5" >TAnnotator::AnnotateDo..</text>
</g>
<g >
<title>torch::autograd::VariableType::squeeze_dim (2 samples, 0.01%)</title><rect x="468.3" y="1909" width="0.2" height="15.0" fill="rgb(235,212,18)" rx="2" ry="2" />
<text  x="471.29" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1237" width="0.5" height="15.0" fill="rgb(212,34,18)" rx="2" ry="2" />
<text  x="1185.75" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1669" width="0.2" height="15.0" fill="rgb(222,123,38)" rx="2" ry="2" />
<text  x="1186.24" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (8 samples, 0.06%)</title><rect x="447.8" y="1989" width="0.6" height="15.0" fill="rgb(246,108,54)" rx="2" ry="2" />
<text  x="450.75" y="1999.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_column_family.cc (8 samples, 0.06%)</title><rect x="736.7" y="2053" width="0.6" height="15.0" fill="rgb(237,139,35)" rx="2" ry="2" />
<text  x="739.68" y="2063.5" ></text>
</g>
<g >
<title>c10::impl::InlineDeviceGuard&lt;c10::impl::VirtualGuardImpl&gt;::InlineDeviceGuard (3 samples, 0.02%)</title><rect x="477.1" y="1925" width="0.2" height="15.0" fill="rgb(236,228,31)" rx="2" ry="2" />
<text  x="480.09" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 0.39%)</title><rect x="62.1" y="53" width="4.6" height="15.0" fill="rgb(206,198,35)" rx="2" ry="2" />
<text  x="65.08" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.08%)</title><rect x="1183.5" y="1749" width="0.9" height="15.0" fill="rgb(226,61,19)" rx="2" ry="2" />
<text  x="1186.48" y="1759.5" ></text>
</g>
<g >
<title>torch::autograd::DifferentiableViewMeta::DifferentiableViewMeta (2 samples, 0.01%)</title><rect x="636.0" y="1973" width="0.2" height="15.0" fill="rgb(235,27,23)" rx="2" ry="2" />
<text  x="639.02" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (26 samples, 0.18%)</title><rect x="420.1" y="1925" width="2.1" height="15.0" fill="rgb(234,208,23)" rx="2" ry="2" />
<text  x="423.12" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="773" width="0.2" height="15.0" fill="rgb(230,223,22)" rx="2" ry="2" />
<text  x="1186.24" y="783.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::{lambda (5 samples, 0.03%)</title><rect x="1153.9" y="1941" width="0.4" height="15.0" fill="rgb(223,157,40)" rx="2" ry="2" />
<text  x="1156.89" y="1951.5" ></text>
</g>
<g >
<title>at::TensorIterator::foreach_reduced_elt (2 samples, 0.01%)</title><rect x="1152.4" y="1829" width="0.2" height="15.0" fill="rgb(230,36,30)" rx="2" ry="2" />
<text  x="1155.43" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1653" width="7.5" height="15.0" fill="rgb(253,147,1)" rx="2" ry="2" />
<text  x="64.92" y="1663.5" ></text>
</g>
<g >
<title>at::AutoNonVariableTypeMode::AutoNonVariableTypeMode (3 samples, 0.02%)</title><rect x="749.6" y="2037" width="0.2" height="15.0" fill="rgb(211,94,43)" rx="2" ry="2" />
<text  x="752.56" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1701" width="0.2" height="15.0" fill="rgb(207,19,18)" rx="2" ry="2" />
<text  x="446.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1317" width="0.8" height="15.0" fill="rgb(217,10,48)" rx="2" ry="2" />
<text  x="1186.64" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (12 samples, 0.08%)</title><rect x="722.5" y="2037" width="1.0" height="15.0" fill="rgb(206,131,33)" rx="2" ry="2" />
<text  x="725.50" y="2047.5" ></text>
</g>
<g >
<title>at::TensorIterator::reduce_op (7 samples, 0.05%)</title><rect x="748.2" y="2021" width="0.5" height="15.0" fill="rgb(221,197,50)" rx="2" ry="2" />
<text  x="751.17" y="2031.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (21 samples, 0.15%)</title><rect x="428.5" y="1925" width="1.7" height="15.0" fill="rgb(248,130,2)" rx="2" ry="2" />
<text  x="431.52" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1813" width="7.6" height="15.0" fill="rgb(251,182,54)" rx="2" ry="2" />
<text  x="64.92" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="709" width="0.5" height="15.0" fill="rgb(207,60,45)" rx="2" ry="2" />
<text  x="1185.75" y="719.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (26 samples, 0.18%)</title><rect x="444.7" y="2005" width="2.2" height="15.0" fill="rgb(213,99,35)" rx="2" ry="2" />
<text  x="447.74" y="2015.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor&amp;  (8 samples, 0.06%)</title><rect x="68.7" y="101" width="0.6" height="15.0" fill="rgb(246,195,33)" rx="2" ry="2" />
<text  x="71.68" y="111.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1205" width="7.5" height="15.0" fill="rgb(235,169,23)" rx="2" ry="2" />
<text  x="64.92" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="661" width="0.5" height="15.0" fill="rgb(219,226,5)" rx="2" ry="2" />
<text  x="1185.75" y="671.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.08%)</title><rect x="640.6" y="2005" width="0.9" height="15.0" fill="rgb(250,217,36)" rx="2" ry="2" />
<text  x="643.59" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1845" width="0.2" height="15.0" fill="rgb(233,140,26)" rx="2" ry="2" />
<text  x="453.85" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="885" width="0.2" height="15.0" fill="rgb(233,130,38)" rx="2" ry="2" />
<text  x="1186.24" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.10%)</title><rect x="1183.2" y="2037" width="1.2" height="15.0" fill="rgb(241,203,48)" rx="2" ry="2" />
<text  x="1186.15" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="613" width="0.2" height="15.0" fill="rgb(214,172,29)" rx="2" ry="2" />
<text  x="1186.24" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1125" width="0.5" height="15.0" fill="rgb(242,63,33)" rx="2" ry="2" />
<text  x="1185.75" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="456.1" y="1653" width="0.4" height="15.0" fill="rgb(215,181,13)" rx="2" ry="2" />
<text  x="459.07" y="1663.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_insert_unique&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (23 samples, 0.16%)</title><rect x="436.2" y="1941" width="1.9" height="15.0" fill="rgb(241,201,49)" rx="2" ry="2" />
<text  x="439.18" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="165" width="7.5" height="15.0" fill="rgb(205,144,53)" rx="2" ry="2" />
<text  x="64.92" y="175.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (4 samples, 0.03%)</title><rect x="816.4" y="2053" width="0.3" height="15.0" fill="rgb(245,106,38)" rx="2" ry="2" />
<text  x="819.39" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1733" width="0.2" height="15.0" fill="rgb(210,18,7)" rx="2" ry="2" />
<text  x="1186.24" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="440.8" y="1909" width="0.2" height="15.0" fill="rgb(242,86,8)" rx="2" ry="2" />
<text  x="443.82" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1125" width="0.8" height="15.0" fill="rgb(219,149,52)" rx="2" ry="2" />
<text  x="1186.64" y="1135.5" ></text>
</g>
<g >
<title>at::native::DispatchStub&lt;void  (4 samples, 0.03%)</title><rect x="1152.3" y="1861" width="0.4" height="15.0" fill="rgb(246,19,12)" rx="2" ry="2" />
<text  x="1155.35" y="1871.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (202 samples, 1.40%)</title><rect x="647.4" y="2037" width="16.4" height="15.0" fill="rgb(206,67,29)" rx="2" ry="2" />
<text  x="650.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="789" width="0.2" height="15.0" fill="rgb(243,175,44)" rx="2" ry="2" />
<text  x="1186.24" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="389" width="0.5" height="15.0" fill="rgb(248,203,15)" rx="2" ry="2" />
<text  x="1185.75" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.3" y="1317" width="0.2" height="15.0" fill="rgb(238,67,8)" rx="2" ry="2" />
<text  x="459.31" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1141" width="0.8" height="15.0" fill="rgb(209,155,12)" rx="2" ry="2" />
<text  x="1186.64" y="1151.5" ></text>
</g>
<g >
<title>at::TensorIterator::reorder_dimensions (2 samples, 0.01%)</title><rect x="629.6" y="2037" width="0.1" height="15.0" fill="rgb(248,211,1)" rx="2" ry="2" />
<text  x="632.59" y="2047.5" ></text>
</g>
<g >
<title>GetHost (20 samples, 0.14%)</title><rect x="455.7" y="1957" width="1.7" height="15.0" fill="rgb(209,223,51)" rx="2" ry="2" />
<text  x="458.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1925" width="0.5" height="15.0" fill="rgb(227,41,10)" rx="2" ry="2" />
<text  x="1185.75" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (34 samples, 0.23%)</title><rect x="59.1" y="1941" width="2.8" height="15.0" fill="rgb(228,50,9)" rx="2" ry="2" />
<text  x="62.15" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="165" width="0.2" height="15.0" fill="rgb(210,89,15)" rx="2" ry="2" />
<text  x="1186.24" y="175.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (14 samples, 0.10%)</title><rect x="669.8" y="2037" width="1.2" height="15.0" fill="rgb(217,16,23)" rx="2" ry="2" />
<text  x="672.85" y="2047.5" ></text>
</g>
<g >
<title>TSummarizer::Summarize (233 samples, 1.61%)</title><rect x="425.3" y="2005" width="19.0" height="15.0" fill="rgb(222,103,23)" rx="2" ry="2" />
<text  x="428.34" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="661" width="0.2" height="15.0" fill="rgb(227,48,7)" rx="2" ry="2" />
<text  x="1186.24" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.07%)</title><rect x="1183.6" y="1733" width="0.8" height="15.0" fill="rgb(247,24,33)" rx="2" ry="2" />
<text  x="1186.56" y="1743.5" ></text>
</g>
<g >
<title>ComputeDocumentNasty (4 samples, 0.03%)</title><rect x="451.8" y="1973" width="0.4" height="15.0" fill="rgb(248,126,2)" rx="2" ry="2" />
<text  x="454.83" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="732.6" y="2005" width="0.2" height="15.0" fill="rgb(236,57,15)" rx="2" ry="2" />
<text  x="735.61" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="149" width="7.5" height="15.0" fill="rgb(252,134,10)" rx="2" ry="2" />
<text  x="64.92" y="159.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1637" width="7.5" height="15.0" fill="rgb(226,73,33)" rx="2" ry="2" />
<text  x="64.92" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (25 samples, 0.17%)</title><rect x="124.1" y="2021" width="2.0" height="15.0" fill="rgb(214,1,39)" rx="2" ry="2" />
<text  x="127.10" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.05%)</title><rect x="632.2" y="1941" width="0.6" height="15.0" fill="rgb(250,6,47)" rx="2" ry="2" />
<text  x="635.19" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="949" width="0.5" height="15.0" fill="rgb(241,229,11)" rx="2" ry="2" />
<text  x="1185.75" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="1183.6" y="1685" width="0.8" height="15.0" fill="rgb(236,177,30)" rx="2" ry="2" />
<text  x="1186.56" y="1695.5" ></text>
</g>
<g >
<title>c10::KernelFunction::callUnboxed&lt;at::Tensor&amp;, at::Tensor&amp;, c10::Storage, long, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt; &gt; (11 samples, 0.08%)</title><rect x="472.7" y="1829" width="0.9" height="15.0" fill="rgb(211,103,50)" rx="2" ry="2" />
<text  x="475.69" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::~Dictionary (3 samples, 0.02%)</title><rect x="185.7" y="1989" width="0.3" height="15.0" fill="rgb(212,54,18)" rx="2" ry="2" />
<text  x="188.72" y="1999.5" ></text>
</g>
<g >
<title>TNewsCluster::Summarize (15 samples, 0.10%)</title><rect x="443.1" y="1989" width="1.2" height="15.0" fill="rgb(246,226,40)" rx="2" ry="2" />
<text  x="446.11" y="1999.5" ></text>
</g>
<g >
<title>cfree (15 samples, 0.10%)</title><rect x="76.4" y="2021" width="1.2" height="15.0" fill="rgb(248,215,50)" rx="2" ry="2" />
<text  x="79.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.08%)</title><rect x="1183.5" y="1765" width="0.9" height="15.0" fill="rgb(227,170,52)" rx="2" ry="2" />
<text  x="1186.48" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="533" width="0.2" height="15.0" fill="rgb(210,148,16)" rx="2" ry="2" />
<text  x="1186.24" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1989" width="0.5" height="15.0" fill="rgb(236,212,18)" rx="2" ry="2" />
<text  x="1185.75" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="443.4" y="1781" width="0.7" height="15.0" fill="rgb(247,170,46)" rx="2" ry="2" />
<text  x="446.43" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.04%)</title><rect x="456.8" y="1349" width="0.5" height="15.0" fill="rgb(235,132,6)" rx="2" ry="2" />
<text  x="459.80" y="1359.5" ></text>
</g>
<g >
<title>c10::KernelFunction::make_boxed_function&lt;&amp;(anonymous namespace)::variable_fallback_kernel&gt; (9 samples, 0.06%)</title><rect x="749.2" y="2053" width="0.7" height="15.0" fill="rgb(252,173,41)" rx="2" ry="2" />
<text  x="752.15" y="2063.5" ></text>
</g>
<g >
<title>TNewsCluster::TNewsCluster (7 samples, 0.05%)</title><rect x="424.4" y="2005" width="0.5" height="15.0" fill="rgb(214,147,18)" rx="2" ry="2" />
<text  x="427.36" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (4 samples, 0.03%)</title><rect x="184.8" y="1989" width="0.3" height="15.0" fill="rgb(212,22,43)" rx="2" ry="2" />
<text  x="187.82" y="1999.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (6 samples, 0.04%)</title><rect x="636.8" y="1989" width="0.4" height="15.0" fill="rgb(249,134,20)" rx="2" ry="2" />
<text  x="639.76" y="1999.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::checkAndNormalizeInputs (10 samples, 0.07%)</title><rect x="1149.0" y="1989" width="0.8" height="15.0" fill="rgb(211,115,46)" rx="2" ry="2" />
<text  x="1152.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1653" width="0.4" height="15.0" fill="rgb(224,93,1)" rx="2" ry="2" />
<text  x="446.68" y="1663.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="424.7" y="1973" width="0.2" height="15.0" fill="rgb(218,216,42)" rx="2" ry="2" />
<text  x="427.69" y="1983.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (15 samples, 0.10%)</title><rect x="610.7" y="1941" width="1.2" height="15.0" fill="rgb(205,193,12)" rx="2" ry="2" />
<text  x="613.68" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1701" width="0.4" height="15.0" fill="rgb(223,9,32)" rx="2" ry="2" />
<text  x="446.68" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="645" width="7.5" height="15.0" fill="rgb(253,101,23)" rx="2" ry="2" />
<text  x="64.92" y="655.5" ></text>
</g>
<g >
<title>__pthread_once_slow (2,173 samples, 15.01%)</title><rect x="451.3" y="2037" width="177.1" height="15.0" fill="rgb(210,14,54)" rx="2" ry="2" />
<text  x="454.26" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1653" width="0.5" height="15.0" fill="rgb(221,76,17)" rx="2" ry="2" />
<text  x="1185.75" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (8 samples, 0.06%)</title><rect x="78.1" y="2021" width="0.7" height="15.0" fill="rgb(232,117,22)" rx="2" ry="2" />
<text  x="81.14" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.03%)</title><rect x="456.1" y="1509" width="0.4" height="15.0" fill="rgb(242,47,52)" rx="2" ry="2" />
<text  x="459.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1205" width="0.1" height="15.0" fill="rgb(253,220,37)" rx="2" ry="2" />
<text  x="459.96" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (152 samples, 1.05%)</title><rect x="1166.6" y="2053" width="12.4" height="15.0" fill="rgb(240,91,13)" rx="2" ry="2" />
<text  x="1169.61" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (19 samples, 0.13%)</title><rect x="455.7" y="1941" width="1.6" height="15.0" fill="rgb(220,4,20)" rx="2" ry="2" />
<text  x="458.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="869" width="0.7" height="15.0" fill="rgb(221,160,5)" rx="2" ry="2" />
<text  x="1186.72" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="917" width="0.5" height="15.0" fill="rgb(242,220,44)" rx="2" ry="2" />
<text  x="1185.75" y="927.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="735.1" y="2021" width="0.3" height="15.0" fill="rgb(226,69,36)" rx="2" ry="2" />
<text  x="738.13" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="485" width="0.2" height="15.0" fill="rgb(221,94,47)" rx="2" ry="2" />
<text  x="459.80" y="495.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1925" width="7.6" height="15.0" fill="rgb(234,154,41)" rx="2" ry="2" />
<text  x="64.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="517" width="0.2" height="15.0" fill="rgb(205,14,11)" rx="2" ry="2" />
<text  x="459.80" y="527.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="721.2" y="2037" width="0.2" height="15.0" fill="rgb(254,142,16)" rx="2" ry="2" />
<text  x="724.19" y="2047.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::norm_ScalarOpt_dim (2 samples, 0.01%)</title><rect x="1153.5" y="1925" width="0.1" height="15.0" fill="rgb(247,154,34)" rx="2" ry="2" />
<text  x="1156.49" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="901" width="0.1" height="15.0" fill="rgb(220,186,47)" rx="2" ry="2" />
<text  x="459.96" y="911.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="627.0" y="1957" width="0.1" height="15.0" fill="rgb(226,23,45)" rx="2" ry="2" />
<text  x="629.98" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="149" width="0.5" height="15.0" fill="rgb(215,129,12)" rx="2" ry="2" />
<text  x="1185.75" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="293" width="0.5" height="15.0" fill="rgb(212,130,20)" rx="2" ry="2" />
<text  x="1185.75" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="949" width="0.1" height="15.0" fill="rgb(242,57,30)" rx="2" ry="2" />
<text  x="459.96" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1925" width="0.2" height="15.0" fill="rgb(249,58,39)" rx="2" ry="2" />
<text  x="1186.24" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="436.0" y="1909" width="0.2" height="15.0" fill="rgb(213,76,44)" rx="2" ry="2" />
<text  x="439.02" y="1919.5" ></text>
</g>
<g >
<title>TDocument::TDocument (6 samples, 0.04%)</title><rect x="171.0" y="1989" width="0.5" height="15.0" fill="rgb(228,7,1)" rx="2" ry="2" />
<text  x="173.97" y="1999.5" ></text>
</g>
<g >
<title>c10::TensorImpl::release_resources (4 samples, 0.03%)</title><rect x="637.8" y="2005" width="0.3" height="15.0" fill="rgb(231,43,4)" rx="2" ry="2" />
<text  x="640.82" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="443.7" y="1605" width="0.4" height="15.0" fill="rgb(208,203,4)" rx="2" ry="2" />
<text  x="446.68" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1525" width="7.5" height="15.0" fill="rgb(221,189,11)" rx="2" ry="2" />
<text  x="64.92" y="1535.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1957" width="0.2" height="15.0" fill="rgb(252,121,27)" rx="2" ry="2" />
<text  x="453.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1301" width="7.5" height="15.0" fill="rgb(232,180,45)" rx="2" ry="2" />
<text  x="64.92" y="1311.5" ></text>
</g>
<g >
<title>rocksdb::PessimisticTransactionDB::SingleDelete (79 samples, 0.55%)</title><rect x="1148.5" y="2053" width="6.5" height="15.0" fill="rgb(209,39,6)" rx="2" ry="2" />
<text  x="1151.51" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="709" width="0.2" height="15.0" fill="rgb(221,50,23)" rx="2" ry="2" />
<text  x="459.80" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="629" width="0.2" height="15.0" fill="rgb(252,15,24)" rx="2" ry="2" />
<text  x="1186.24" y="639.5" ></text>
</g>
<g >
<title>TDbDocument::operator= (5 samples, 0.03%)</title><rect x="423.7" y="1941" width="0.4" height="15.0" fill="rgb(248,16,25)" rx="2" ry="2" />
<text  x="426.71" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="456.1" y="1429" width="0.4" height="15.0" fill="rgb(254,152,7)" rx="2" ry="2" />
<text  x="459.15" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.9" y="1429" width="0.2" height="15.0" fill="rgb(246,164,26)" rx="2" ry="2" />
<text  x="446.92" y="1439.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (21 samples, 0.15%)</title><rect x="1067.1" y="2053" width="1.7" height="15.0" fill="rgb(244,85,32)" rx="2" ry="2" />
<text  x="1070.09" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="789" width="0.2" height="15.0" fill="rgb(228,14,28)" rx="2" ry="2" />
<text  x="459.80" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="213" width="0.7" height="15.0" fill="rgb(229,47,43)" rx="2" ry="2" />
<text  x="1186.72" y="223.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (67 samples, 0.46%)</title><rect x="1073.5" y="2053" width="5.5" height="15.0" fill="rgb(212,172,17)" rx="2" ry="2" />
<text  x="1076.53" y="2063.5" ></text>
</g>
<g >
<title>TAnnotator::PreprocessText (81 samples, 0.56%)</title><rect x="457.5" y="1957" width="6.6" height="15.0" fill="rgb(221,194,28)" rx="2" ry="2" />
<text  x="460.45" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1221" width="0.5" height="15.0" fill="rgb(230,25,38)" rx="2" ry="2" />
<text  x="1185.75" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="443.3" y="1925" width="0.8" height="15.0" fill="rgb(246,12,11)" rx="2" ry="2" />
<text  x="446.27" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (33 samples, 0.23%)</title><rect x="728.3" y="2037" width="2.7" height="15.0" fill="rgb(205,162,50)" rx="2" ry="2" />
<text  x="731.29" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.3" y="1381" width="0.2" height="15.0" fill="rgb(253,94,16)" rx="2" ry="2" />
<text  x="459.31" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="565" width="0.2" height="15.0" fill="rgb(227,183,44)" rx="2" ry="2" />
<text  x="459.80" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="869" width="0.2" height="15.0" fill="rgb(212,12,37)" rx="2" ry="2" />
<text  x="459.80" y="879.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (17 samples, 0.12%)</title><rect x="46.5" y="2053" width="1.4" height="15.0" fill="rgb(222,188,42)" rx="2" ry="2" />
<text  x="49.51" y="2063.5" ></text>
</g>
<g >
<title>at::native::make_reduction (9 samples, 0.06%)</title><rect x="748.1" y="2037" width="0.7" height="15.0" fill="rgb(244,161,45)" rx="2" ry="2" />
<text  x="751.09" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (69 samples, 0.48%)</title><rect x="179.0" y="1925" width="5.6" height="15.0" fill="rgb(230,165,16)" rx="2" ry="2" />
<text  x="181.96" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1621" width="7.5" height="15.0" fill="rgb(208,139,10)" rx="2" ry="2" />
<text  x="64.92" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1429" width="0.2" height="15.0" fill="rgb(216,129,52)" rx="2" ry="2" />
<text  x="1186.24" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (8 samples, 0.06%)</title><rect x="437.4" y="1925" width="0.7" height="15.0" fill="rgb(241,12,50)" rx="2" ry="2" />
<text  x="440.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="645" width="0.2" height="15.0" fill="rgb(211,56,23)" rx="2" ry="2" />
<text  x="1186.24" y="655.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="741" width="7.5" height="15.0" fill="rgb(223,10,38)" rx="2" ry="2" />
<text  x="64.92" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.02%)</title><rect x="442.5" y="1941" width="0.2" height="15.0" fill="rgb(228,7,30)" rx="2" ry="2" />
<text  x="445.45" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="1013" width="0.7" height="15.0" fill="rgb(238,73,41)" rx="2" ry="2" />
<text  x="1186.72" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="853" width="0.2" height="15.0" fill="rgb(244,100,14)" rx="2" ry="2" />
<text  x="459.80" y="863.5" ></text>
</g>
<g >
<title>torch::zeros (7 samples, 0.05%)</title><rect x="474.9" y="1925" width="0.6" height="15.0" fill="rgb(229,102,54)" rx="2" ry="2" />
<text  x="477.89" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="805" width="0.2" height="15.0" fill="rgb(238,39,36)" rx="2" ry="2" />
<text  x="1186.24" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="757" width="0.2" height="15.0" fill="rgb(219,48,14)" rx="2" ry="2" />
<text  x="459.80" y="767.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (5 samples, 0.03%)</title><rect x="1031.8" y="2053" width="0.4" height="15.0" fill="rgb(243,22,18)" rx="2" ry="2" />
<text  x="1034.80" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (11 samples, 0.08%)</title><rect x="427.1" y="1925" width="0.9" height="15.0" fill="rgb(219,64,14)" rx="2" ry="2" />
<text  x="430.13" y="1935.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (4 samples, 0.03%)</title><rect x="478.1" y="1941" width="0.3" height="15.0" fill="rgb(207,224,5)" rx="2" ry="2" />
<text  x="481.07" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1173" width="0.2" height="15.0" fill="rgb(246,27,22)" rx="2" ry="2" />
<text  x="1186.24" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.03%)</title><rect x="457.0" y="1301" width="0.3" height="15.0" fill="rgb(216,128,1)" rx="2" ry="2" />
<text  x="459.96" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (44 samples, 0.30%)</title><rect x="460.1" y="1925" width="3.5" height="15.0" fill="rgb(212,137,10)" rx="2" ry="2" />
<text  x="463.06" y="1935.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::unsqueeze (4 samples, 0.03%)</title><rect x="468.5" y="1909" width="0.3" height="15.0" fill="rgb(216,193,35)" rx="2" ry="2" />
<text  x="471.45" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (2 samples, 0.01%)</title><rect x="1187.6" y="2053" width="0.2" height="15.0" fill="rgb(237,31,48)" rx="2" ry="2" />
<text  x="1190.64" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (15 samples, 0.10%)</title><rect x="65.5" y="37" width="1.2" height="15.0" fill="rgb(218,85,29)" rx="2" ry="2" />
<text  x="68.50" y="47.5" ></text>
</g>
<g >
<title>all (14,478 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(208,78,46)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="917" width="0.2" height="15.0" fill="rgb(250,224,51)" rx="2" ry="2" />
<text  x="459.80" y="927.5" ></text>
</g>
<g >
<title>at::TensorIterator::compute_names (2 samples, 0.01%)</title><rect x="632.6" y="1909" width="0.2" height="15.0" fill="rgb(220,204,45)" rx="2" ry="2" />
<text  x="635.60" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="997" width="0.7" height="15.0" fill="rgb(231,111,21)" rx="2" ry="2" />
<text  x="1186.72" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1477" width="0.2" height="15.0" fill="rgb(236,57,29)" rx="2" ry="2" />
<text  x="1186.24" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1493" width="0.5" height="15.0" fill="rgb(240,70,28)" rx="2" ry="2" />
<text  x="1185.75" y="1503.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (4 samples, 0.03%)</title><rect x="633.0" y="1989" width="0.3" height="15.0" fill="rgb(218,96,13)" rx="2" ry="2" />
<text  x="636.01" y="1999.5" ></text>
</g>
<g >
<title>at::(anonymous namespace)::empty_memory_format (3 samples, 0.02%)</title><rect x="751.2" y="2021" width="0.2" height="15.0" fill="rgb(224,89,51)" rx="2" ry="2" />
<text  x="754.19" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1813" width="0.5" height="15.0" fill="rgb(229,175,29)" rx="2" ry="2" />
<text  x="1185.75" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1413" width="0.8" height="15.0" fill="rgb(225,138,15)" rx="2" ry="2" />
<text  x="1186.64" y="1423.5" ></text>
</g>
<g >
<title>tgnews (14,478 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(225,24,20)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="981" width="0.2" height="15.0" fill="rgb(213,41,54)" rx="2" ry="2" />
<text  x="459.80" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2 samples, 0.01%)</title><rect x="441.2" y="1925" width="0.2" height="15.0" fill="rgb(241,177,22)" rx="2" ry="2" />
<text  x="444.23" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="325" width="0.7" height="15.0" fill="rgb(227,112,16)" rx="2" ry="2" />
<text  x="1186.72" y="335.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (123 samples, 0.85%)</title><rect x="614.0" y="1941" width="10.0" height="15.0" fill="rgb(242,91,24)" rx="2" ry="2" />
<text  x="617.02" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="2037" width="0.5" height="15.0" fill="rgb(207,207,9)" rx="2" ry="2" />
<text  x="1185.75" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="449.6" y="1941" width="0.3" height="15.0" fill="rgb(212,179,5)" rx="2" ry="2" />
<text  x="452.63" y="1951.5" ></text>
</g>
<g >
<title>malloc (31 samples, 0.21%)</title><rect x="664.1" y="2037" width="2.5" height="15.0" fill="rgb(248,190,12)" rx="2" ry="2" />
<text  x="667.06" y="2047.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::contiguous (2 samples, 0.01%)</title><rect x="468.0" y="1909" width="0.1" height="15.0" fill="rgb(230,41,16)" rx="2" ry="2" />
<text  x="470.97" y="1919.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (2 samples, 0.01%)</title><rect x="633.2" y="1973" width="0.1" height="15.0" fill="rgb(221,84,11)" rx="2" ry="2" />
<text  x="636.17" y="1983.5" ></text>
</g>
<g >
<title>at::detail::make_tensor&lt;c10::TensorImpl, c10::intrusive_ptr&lt;c10::StorageImpl, c10::detail::intrusive_target_default_null_type&lt;c10::StorageImpl&gt; &gt;, c10::DispatchKey&gt; (2 samples, 0.01%)</title><rect x="629.9" y="2037" width="0.2" height="15.0" fill="rgb(236,161,44)" rx="2" ry="2" />
<text  x="632.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="1061" width="0.7" height="15.0" fill="rgb(208,168,43)" rx="2" ry="2" />
<text  x="1186.72" y="1071.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (3 samples, 0.02%)</title><rect x="1185.8" y="2053" width="0.2" height="15.0" fill="rgb(208,92,2)" rx="2" ry="2" />
<text  x="1188.76" y="2063.5" ></text>
</g>
<g >
<title>c10::TensorImpl::shallow_copy_and_detach (7 samples, 0.05%)</title><rect x="638.1" y="2005" width="0.6" height="15.0" fill="rgb(222,184,0)" rx="2" ry="2" />
<text  x="641.14" y="2015.5" ></text>
</g>
<g >
<title>at::TensorIterator::compute_types (2 samples, 0.01%)</title><rect x="68.2" y="37" width="0.2" height="15.0" fill="rgb(208,19,6)" rx="2" ry="2" />
<text  x="71.19" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1829" width="0.2" height="15.0" fill="rgb(241,16,46)" rx="2" ry="2" />
<text  x="1186.24" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1269" width="0.8" height="15.0" fill="rgb(235,133,47)" rx="2" ry="2" />
<text  x="1186.64" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (3 samples, 0.02%)</title><rect x="1166.4" y="2053" width="0.2" height="15.0" fill="rgb(245,176,13)" rx="2" ry="2" />
<text  x="1169.36" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.08%)</title><rect x="1183.4" y="1909" width="1.0" height="15.0" fill="rgb(210,37,31)" rx="2" ry="2" />
<text  x="1186.40" y="1919.5" ></text>
</g>
<g >
<title>cfree (118 samples, 0.82%)</title><rect x="753.8" y="2053" width="9.6" height="15.0" fill="rgb(205,59,38)" rx="2" ry="2" />
<text  x="756.80" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="773" width="0.1" height="15.0" fill="rgb(241,207,1)" rx="2" ry="2" />
<text  x="459.96" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="613" width="0.5" height="15.0" fill="rgb(236,158,25)" rx="2" ry="2" />
<text  x="1185.75" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1653" width="0.8" height="15.0" fill="rgb(244,72,33)" rx="2" ry="2" />
<text  x="1186.64" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.08%)</title><rect x="1183.5" y="1861" width="0.9" height="15.0" fill="rgb(222,44,3)" rx="2" ry="2" />
<text  x="1186.48" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (19 samples, 0.13%)</title><rect x="1179.0" y="2053" width="1.5" height="15.0" fill="rgb(254,164,37)" rx="2" ry="2" />
<text  x="1182.00" y="2063.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::CalcEmbedding (139 samples, 0.96%)</title><rect x="464.1" y="1941" width="11.4" height="15.0" fill="rgb(246,225,22)" rx="2" ry="2" />
<text  x="467.13" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1669" width="0.2" height="15.0" fill="rgb(248,24,45)" rx="2" ry="2" />
<text  x="446.51" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="677" width="0.7" height="15.0" fill="rgb(223,203,39)" rx="2" ry="2" />
<text  x="1186.72" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="373" width="0.2" height="15.0" fill="rgb(213,2,29)" rx="2" ry="2" />
<text  x="1186.24" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.02%)</title><rect x="467.6" y="1925" width="0.2" height="15.0" fill="rgb(218,205,14)" rx="2" ry="2" />
<text  x="470.56" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="453" width="0.2" height="15.0" fill="rgb(233,194,3)" rx="2" ry="2" />
<text  x="459.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="789" width="0.1" height="15.0" fill="rgb(221,97,12)" rx="2" ry="2" />
<text  x="459.96" y="799.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1285" width="7.5" height="15.0" fill="rgb(213,101,54)" rx="2" ry="2" />
<text  x="64.92" y="1295.5" ></text>
</g>
<g >
<title>torch::jit::GraphFunction::operator (73 samples, 0.50%)</title><rect x="1149.0" y="2005" width="6.0" height="15.0" fill="rgb(224,81,39)" rx="2" ry="2" />
<text  x="1152.00" y="2015.5" ></text>
</g>
<g >
<title>expf32x (2 samples, 0.01%)</title><rect x="763.4" y="2053" width="0.2" height="15.0" fill="rgb(208,201,39)" rx="2" ry="2" />
<text  x="766.41" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (11 samples, 0.08%)</title><rect x="612.6" y="1941" width="0.8" height="15.0" fill="rgb(230,112,40)" rx="2" ry="2" />
<text  x="615.55" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="661" width="0.2" height="15.0" fill="rgb(218,135,27)" rx="2" ry="2" />
<text  x="459.80" y="671.5" ></text>
</g>
<g >
<title>at::native::DispatchStub&lt;void  (2 samples, 0.01%)</title><rect x="629.2" y="2005" width="0.1" height="15.0" fill="rgb(213,98,45)" rx="2" ry="2" />
<text  x="632.18" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="443.4" y="1733" width="0.3" height="15.0" fill="rgb(226,43,4)" rx="2" ry="2" />
<text  x="446.43" y="1743.5" ></text>
</g>
<g >
<title>GetHost (10 samples, 0.07%)</title><rect x="443.3" y="1957" width="0.8" height="15.0" fill="rgb(236,129,8)" rx="2" ry="2" />
<text  x="446.27" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="309" width="0.7" height="15.0" fill="rgb(237,14,54)" rx="2" ry="2" />
<text  x="1186.72" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1797" width="0.5" height="15.0" fill="rgb(209,21,51)" rx="2" ry="2" />
<text  x="1185.75" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="949" width="0.2" height="15.0" fill="rgb(231,37,16)" rx="2" ry="2" />
<text  x="1186.24" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="456.6" y="1541" width="0.7" height="15.0" fill="rgb(240,70,43)" rx="2" ry="2" />
<text  x="459.55" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1877" width="7.6" height="15.0" fill="rgb(236,184,53)" rx="2" ry="2" />
<text  x="64.92" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.11%)</title><rect x="456.0" y="1861" width="1.3" height="15.0" fill="rgb(234,98,25)" rx="2" ry="2" />
<text  x="458.98" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1173" width="0.5" height="15.0" fill="rgb(250,185,33)" rx="2" ry="2" />
<text  x="1185.75" y="1183.5" ></text>
</g>
<g >
<title>at::TensorIterator::binary_op (7 samples, 0.05%)</title><rect x="632.2" y="1925" width="0.6" height="15.0" fill="rgb(252,204,28)" rx="2" ry="2" />
<text  x="635.19" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="549" width="0.5" height="15.0" fill="rgb(239,222,14)" rx="2" ry="2" />
<text  x="1185.75" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="885" width="0.7" height="15.0" fill="rgb(223,186,30)" rx="2" ry="2" />
<text  x="1186.72" y="895.5" ></text>
</g>
<g >
<title>torch::jit::(anonymous namespace)::{lambda (4 samples, 0.03%)</title><rect x="640.2" y="2005" width="0.3" height="15.0" fill="rgb(207,34,25)" rx="2" ry="2" />
<text  x="643.18" y="2015.5" ></text>
</g>
<g >
<title>at::TensorIterator::analyze_memory_format (4 samples, 0.03%)</title><rect x="70.5" y="2005" width="0.3" height="15.0" fill="rgb(226,32,22)" rx="2" ry="2" />
<text  x="73.48" y="2015.5" ></text>
</g>
<g >
<title>c10::function_ref&lt;void  (2 samples, 0.01%)</title><rect x="750.6" y="2037" width="0.2" height="15.0" fill="rgb(223,229,2)" rx="2" ry="2" />
<text  x="753.62" y="2047.5" ></text>
</g>
<g >
<title>at::TensorIterator::compute_shape (2 samples, 0.01%)</title><rect x="748.2" y="1989" width="0.1" height="15.0" fill="rgb(225,142,15)" rx="2" ry="2" />
<text  x="751.17" y="1999.5" ></text>
</g>
<g >
<title>torch::jit::GraphFunction::ensure_defined (3 samples, 0.02%)</title><rect x="1148.7" y="2005" width="0.2" height="15.0" fill="rgb(238,140,46)" rx="2" ry="2" />
<text  x="1151.68" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.05%)</title><rect x="456.7" y="1365" width="0.6" height="15.0" fill="rgb(249,60,44)" rx="2" ry="2" />
<text  x="459.72" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1317" width="0.2" height="15.0" fill="rgb(249,39,0)" rx="2" ry="2" />
<text  x="1186.24" y="1327.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor  (22 samples, 0.15%)</title><rect x="468.9" y="1909" width="1.8" height="15.0" fill="rgb(250,125,53)" rx="2" ry="2" />
<text  x="471.94" y="1919.5" ></text>
</g>
<g >
<title>at::native::add (3 samples, 0.02%)</title><rect x="1151.5" y="1893" width="0.3" height="15.0" fill="rgb(232,216,8)" rx="2" ry="2" />
<text  x="1154.53" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="949" width="0.2" height="15.0" fill="rgb(237,157,43)" rx="2" ry="2" />
<text  x="459.80" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1141" width="0.2" height="15.0" fill="rgb(232,110,12)" rx="2" ry="2" />
<text  x="1186.24" y="1151.5" ></text>
</g>
<g >
<title>nlohmann::detail::dtoa_impl::grisu2_digit_gen (3 samples, 0.02%)</title><rect x="445.0" y="1909" width="0.2" height="15.0" fill="rgb(232,56,8)" rx="2" ry="2" />
<text  x="447.98" y="1919.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (19 samples, 0.13%)</title><rect x="729.4" y="2005" width="1.6" height="15.0" fill="rgb(215,134,40)" rx="2" ry="2" />
<text  x="732.43" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1285" width="0.8" height="15.0" fill="rgb(226,66,39)" rx="2" ry="2" />
<text  x="1186.64" y="1295.5" ></text>
</g>
<g >
<title>torch::jit::getProfilingMode (2 samples, 0.01%)</title><rect x="1154.7" y="1989" width="0.2" height="15.0" fill="rgb(208,121,23)" rx="2" ry="2" />
<text  x="1157.71" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::add (5 samples, 0.03%)</title><rect x="172.1" y="1941" width="0.4" height="15.0" fill="rgb(239,228,54)" rx="2" ry="2" />
<text  x="175.11" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="261" width="0.2" height="15.0" fill="rgb(220,195,28)" rx="2" ry="2" />
<text  x="1186.24" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17 samples, 0.12%)</title><rect x="455.9" y="1909" width="1.4" height="15.0" fill="rgb(235,72,40)" rx="2" ry="2" />
<text  x="458.90" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="197" width="0.7" height="15.0" fill="rgb(227,226,8)" rx="2" ry="2" />
<text  x="1186.72" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1765" width="0.5" height="15.0" fill="rgb(254,208,3)" rx="2" ry="2" />
<text  x="1185.75" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="450.8" y="1909" width="0.2" height="15.0" fill="rgb(223,14,36)" rx="2" ry="2" />
<text  x="453.85" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="597" width="0.2" height="15.0" fill="rgb(238,220,14)" rx="2" ry="2" />
<text  x="459.80" y="607.5" ></text>
</g>
<g >
<title>at::TypeDefault::slice_Tensor (6 samples, 0.04%)</title><rect x="469.0" y="1893" width="0.5" height="15.0" fill="rgb(213,163,20)" rx="2" ry="2" />
<text  x="472.02" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.07%)</title><rect x="1183.6" y="1701" width="0.8" height="15.0" fill="rgb(245,144,40)" rx="2" ry="2" />
<text  x="1186.56" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="981" width="0.5" height="15.0" fill="rgb(243,0,33)" rx="2" ry="2" />
<text  x="1185.75" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1909" width="0.5" height="15.0" fill="rgb(239,128,40)" rx="2" ry="2" />
<text  x="1185.75" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1077" width="0.1" height="15.0" fill="rgb(242,148,44)" rx="2" ry="2" />
<text  x="459.96" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1205" width="0.2" height="15.0" fill="rgb(222,133,45)" rx="2" ry="2" />
<text  x="459.80" y="1215.5" ></text>
</g>
<g >
<title>THTensor_setStorageNd (2 samples, 0.01%)</title><rect x="631.1" y="2005" width="0.1" height="15.0" fill="rgb(217,37,23)" rx="2" ry="2" />
<text  x="634.05" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="469" width="0.2" height="15.0" fill="rgb(221,229,49)" rx="2" ry="2" />
<text  x="459.80" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1253" width="0.5" height="15.0" fill="rgb(207,147,50)" rx="2" ry="2" />
<text  x="1185.75" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1109" width="0.1" height="15.0" fill="rgb(209,220,51)" rx="2" ry="2" />
<text  x="459.96" y="1119.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (9 samples, 0.06%)</title><rect x="79.3" y="2021" width="0.7" height="15.0" fill="rgb(221,222,40)" rx="2" ry="2" />
<text  x="82.28" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="277" width="0.2" height="15.0" fill="rgb(209,209,15)" rx="2" ry="2" />
<text  x="1186.24" y="287.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.06%)</title><rect x="632.0" y="1989" width="0.8" height="15.0" fill="rgb(219,122,25)" rx="2" ry="2" />
<text  x="635.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.3" y="1349" width="0.2" height="15.0" fill="rgb(208,202,39)" rx="2" ry="2" />
<text  x="459.31" y="1359.5" ></text>
</g>
<g >
<title>torch::autograd::generated::MmBackward::~MmBackward (5 samples, 0.03%)</title><rect x="734.6" y="2037" width="0.5" height="15.0" fill="rgb(240,127,3)" rx="2" ry="2" />
<text  x="737.64" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1829" width="0.2" height="15.0" fill="rgb(206,21,7)" rx="2" ry="2" />
<text  x="453.85" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1269" width="0.1" height="15.0" fill="rgb(221,160,42)" rx="2" ry="2" />
<text  x="459.96" y="1279.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (106 samples, 0.73%)</title><rect x="631.9" y="2037" width="8.6" height="15.0" fill="rgb(253,17,41)" rx="2" ry="2" />
<text  x="634.87" y="2047.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,608 samples, 11.11%)</title><rect x="479.3" y="1941" width="131.1" height="15.0" fill="rgb(252,134,28)" rx="2" ry="2" />
<text  x="482.29" y="1951.5" >fasttext::DenseM..</text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="837" width="7.5" height="15.0" fill="rgb(211,197,5)" rx="2" ry="2" />
<text  x="64.92" y="847.5" ></text>
</g>
<g >
<title>at::native::contiguous (2 samples, 0.01%)</title><rect x="630.3" y="2037" width="0.2" height="15.0" fill="rgb(206,10,40)" rx="2" ry="2" />
<text  x="633.32" y="2047.5" ></text>
</g>
<g >
<title>c10::KernelFunction::getFunctor_ (2 samples, 0.01%)</title><rect x="753.1" y="2021" width="0.2" height="15.0" fill="rgb(235,155,32)" rx="2" ry="2" />
<text  x="756.14" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="565" width="0.7" height="15.0" fill="rgb(227,110,0)" rx="2" ry="2" />
<text  x="1186.72" y="575.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (8 samples, 0.06%)</title><rect x="449.5" y="2005" width="0.6" height="15.0" fill="rgb(253,116,48)" rx="2" ry="2" />
<text  x="452.46" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="2005" width="0.5" height="15.0" fill="rgb(213,167,4)" rx="2" ry="2" />
<text  x="1185.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1525" width="0.8" height="15.0" fill="rgb(237,36,40)" rx="2" ry="2" />
<text  x="1186.64" y="1535.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (2 samples, 0.01%)</title><rect x="749.6" y="2021" width="0.1" height="15.0" fill="rgb(206,51,0)" rx="2" ry="2" />
<text  x="752.56" y="2031.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.06%)</title><rect x="1146.7" y="2053" width="0.8" height="15.0" fill="rgb(235,37,16)" rx="2" ry="2" />
<text  x="1149.72" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.04%)</title><rect x="732.6" y="2021" width="0.5" height="15.0" fill="rgb(205,9,44)" rx="2" ry="2" />
<text  x="735.61" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="456.6" y="1397" width="0.7" height="15.0" fill="rgb(235,149,5)" rx="2" ry="2" />
<text  x="459.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1509" width="0.5" height="15.0" fill="rgb(245,57,47)" rx="2" ry="2" />
<text  x="1185.75" y="1519.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (18 samples, 0.12%)</title><rect x="57.7" y="1957" width="1.4" height="15.0" fill="rgb(239,201,37)" rx="2" ry="2" />
<text  x="60.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="757" width="0.5" height="15.0" fill="rgb(225,169,41)" rx="2" ry="2" />
<text  x="1185.75" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.03%)</title><rect x="449.5" y="1973" width="0.4" height="15.0" fill="rgb(245,77,4)" rx="2" ry="2" />
<text  x="452.55" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="437" width="0.5" height="15.0" fill="rgb(218,192,7)" rx="2" ry="2" />
<text  x="1185.75" y="447.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (86 samples, 0.59%)</title><rect x="1000.2" y="2053" width="7.0" height="15.0" fill="rgb(224,163,28)" rx="2" ry="2" />
<text  x="1003.18" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="293" width="0.2" height="15.0" fill="rgb(217,177,35)" rx="2" ry="2" />
<text  x="1186.24" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="309" width="0.2" height="15.0" fill="rgb(245,114,26)" rx="2" ry="2" />
<text  x="1186.24" y="319.5" ></text>
</g>
<g >
<title>at::TensorIterator::build (6 samples, 0.04%)</title><rect x="746.4" y="2021" width="0.5" height="15.0" fill="rgb(208,192,32)" rx="2" ry="2" />
<text  x="749.38" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.04%)</title><rect x="736.2" y="2021" width="0.5" height="15.0" fill="rgb(241,188,6)" rx="2" ry="2" />
<text  x="739.19" y="2031.5" ></text>
</g>
<g >
<title>at::namedinference::propagate_names_if_nonempty (3 samples, 0.02%)</title><rect x="630.1" y="2037" width="0.2" height="15.0" fill="rgb(237,6,24)" rx="2" ry="2" />
<text  x="633.07" y="2047.5" ></text>
</g>
<g >
<title>rocksdb::JobContext::~JobContext (2 samples, 0.01%)</title><rect x="1148.3" y="2053" width="0.1" height="15.0" fill="rgb(229,227,37)" rx="2" ry="2" />
<text  x="1151.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1413" width="0.2" height="15.0" fill="rgb(251,186,54)" rx="2" ry="2" />
<text  x="1186.24" y="1423.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.01%)</title><rect x="171.3" y="1941" width="0.2" height="15.0" fill="rgb(232,36,10)" rx="2" ry="2" />
<text  x="174.29" y="1951.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (2 samples, 0.01%)</title><rect x="631.7" y="2021" width="0.2" height="15.0" fill="rgb(209,149,44)" rx="2" ry="2" />
<text  x="634.70" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1317" width="0.5" height="15.0" fill="rgb(245,191,14)" rx="2" ry="2" />
<text  x="1185.75" y="1327.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (4 samples, 0.03%)</title><rect x="731.1" y="2037" width="0.3" height="15.0" fill="rgb(242,77,48)" rx="2" ry="2" />
<text  x="734.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1013" width="0.2" height="15.0" fill="rgb(228,162,47)" rx="2" ry="2" />
<text  x="459.80" y="1023.5" ></text>
</g>
<g >
<title>at::native::as_strided_tensorimpl (3 samples, 0.02%)</title><rect x="633.9" y="1989" width="0.2" height="15.0" fill="rgb(227,133,5)" rx="2" ry="2" />
<text  x="636.91" y="1999.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (2 samples, 0.01%)</title><rect x="749.6" y="2005" width="0.1" height="15.0" fill="rgb(242,228,23)" rx="2" ry="2" />
<text  x="752.56" y="2015.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (8 samples, 0.06%)</title><rect x="763.6" y="2053" width="0.6" height="15.0" fill="rgb(241,120,32)" rx="2" ry="2" />
<text  x="766.58" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1589" width="0.7" height="15.0" fill="rgb(239,50,13)" rx="2" ry="2" />
<text  x="459.55" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1141" width="7.5" height="15.0" fill="rgb(207,43,49)" rx="2" ry="2" />
<text  x="64.92" y="1151.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_float (5 samples, 0.03%)</title><rect x="445.8" y="1909" width="0.4" height="15.0" fill="rgb(238,211,38)" rx="2" ry="2" />
<text  x="448.80" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.06%)</title><rect x="1146.8" y="2037" width="0.7" height="15.0" fill="rgb(243,217,36)" rx="2" ry="2" />
<text  x="1149.80" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1829" width="7.6" height="15.0" fill="rgb(241,37,53)" rx="2" ry="2" />
<text  x="64.92" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1525" width="0.5" height="15.0" fill="rgb(208,123,6)" rx="2" ry="2" />
<text  x="1185.75" y="1535.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.01%)</title><rect x="752.7" y="2005" width="0.2" height="15.0" fill="rgb(254,35,31)" rx="2" ry="2" />
<text  x="755.74" y="2015.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1765" width="0.2" height="15.0" fill="rgb(222,203,17)" rx="2" ry="2" />
<text  x="453.85" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.07%)</title><rect x="456.5" y="1749" width="0.8" height="15.0" fill="rgb(206,142,38)" rx="2" ry="2" />
<text  x="459.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="485" width="0.7" height="15.0" fill="rgb(227,118,3)" rx="2" ry="2" />
<text  x="1186.72" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1349" width="0.5" height="15.0" fill="rgb(213,169,9)" rx="2" ry="2" />
<text  x="1185.75" y="1359.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.02%)</title><rect x="171.6" y="1989" width="0.3" height="15.0" fill="rgb(235,17,12)" rx="2" ry="2" />
<text  x="174.62" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="456.6" y="1429" width="0.7" height="15.0" fill="rgb(209,25,24)" rx="2" ry="2" />
<text  x="459.64" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="229" width="0.2" height="15.0" fill="rgb(218,213,39)" rx="2" ry="2" />
<text  x="1186.24" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1141" width="0.2" height="15.0" fill="rgb(210,116,8)" rx="2" ry="2" />
<text  x="459.80" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="709" width="0.7" height="15.0" fill="rgb(208,150,44)" rx="2" ry="2" />
<text  x="1186.72" y="719.5" ></text>
</g>
<g >
<title>__sched_yield (8 samples, 0.06%)</title><rect x="744.1" y="2053" width="0.6" height="15.0" fill="rgb(228,33,30)" rx="2" ry="2" />
<text  x="747.10" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="469" width="0.7" height="15.0" fill="rgb(209,128,14)" rx="2" ry="2" />
<text  x="1186.72" y="479.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1461" width="7.5" height="15.0" fill="rgb(245,164,42)" rx="2" ry="2" />
<text  x="64.92" y="1471.5" ></text>
</g>
<g >
<title>at::native::make_reduction (14 samples, 0.10%)</title><rect x="747.8" y="2053" width="1.1" height="15.0" fill="rgb(209,179,24)" rx="2" ry="2" />
<text  x="750.76" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1861" width="7.6" height="15.0" fill="rgb(216,177,37)" rx="2" ry="2" />
<text  x="64.92" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="581" width="0.5" height="15.0" fill="rgb(233,220,27)" rx="2" ry="2" />
<text  x="1185.75" y="591.5" ></text>
</g>
<g >
<title>at::TensorIterator::check_mem_overlaps (2 samples, 0.01%)</title><rect x="745.0" y="2053" width="0.2" height="15.0" fill="rgb(224,145,12)" rx="2" ry="2" />
<text  x="747.99" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="444.5" y="2005" width="0.2" height="15.0" fill="rgb(249,83,40)" rx="2" ry="2" />
<text  x="447.49" y="2015.5" ></text>
</g>
<g >
<title>torch::autograd::impl::gradient_edge (2 samples, 0.01%)</title><rect x="69.7" y="1973" width="0.1" height="15.0" fill="rgb(235,114,44)" rx="2" ry="2" />
<text  x="72.66" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (13 samples, 0.09%)</title><rect x="685.3" y="2021" width="1.0" height="15.0" fill="rgb(239,15,29)" rx="2" ry="2" />
<text  x="688.25" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.10%)</title><rect x="456.1" y="1765" width="1.2" height="15.0" fill="rgb(218,209,24)" rx="2" ry="2" />
<text  x="459.07" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="197" width="0.2" height="15.0" fill="rgb(236,63,32)" rx="2" ry="2" />
<text  x="1186.24" y="207.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;long&gt;::operator= (2 samples, 0.01%)</title><rect x="71.4" y="1973" width="0.1" height="15.0" fill="rgb(243,147,24)" rx="2" ry="2" />
<text  x="74.37" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (139 samples, 0.96%)</title><rect x="173.3" y="1941" width="11.3" height="15.0" fill="rgb(220,146,20)" rx="2" ry="2" />
<text  x="176.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1333" width="0.5" height="15.0" fill="rgb(236,160,39)" rx="2" ry="2" />
<text  x="1185.75" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1381" width="7.5" height="15.0" fill="rgb(238,226,27)" rx="2" ry="2" />
<text  x="64.92" y="1391.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (2 samples, 0.01%)</title><rect x="71.9" y="2005" width="0.2" height="15.0" fill="rgb(210,150,35)" rx="2" ry="2" />
<text  x="74.94" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1637" width="0.2" height="15.0" fill="rgb(211,130,36)" rx="2" ry="2" />
<text  x="1186.24" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1685" width="0.2" height="15.0" fill="rgb(222,44,2)" rx="2" ry="2" />
<text  x="446.51" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1285" width="0.2" height="15.0" fill="rgb(253,139,17)" rx="2" ry="2" />
<text  x="459.80" y="1295.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="449.3" y="1957" width="0.2" height="15.0" fill="rgb(216,172,29)" rx="2" ry="2" />
<text  x="452.30" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1861" width="0.2" height="15.0" fill="rgb(219,1,37)" rx="2" ry="2" />
<text  x="1186.24" y="1871.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; &gt; (26 samples, 0.18%)</title><rect x="412.1" y="1941" width="2.2" height="15.0" fill="rgb(221,68,41)" rx="2" ry="2" />
<text  x="415.14" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="997" width="0.2" height="15.0" fill="rgb(215,23,34)" rx="2" ry="2" />
<text  x="459.80" y="1007.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::div_Tensor (2 samples, 0.01%)</title><rect x="733.3" y="2037" width="0.1" height="15.0" fill="rgb(231,53,18)" rx="2" ry="2" />
<text  x="736.26" y="2047.5" ></text>
</g>
<g >
<title>at::from_blob (19 samples, 0.13%)</title><rect x="472.5" y="1909" width="1.6" height="15.0" fill="rgb(244,157,47)" rx="2" ry="2" />
<text  x="475.53" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="469" width="7.5" height="15.0" fill="rgb(231,65,0)" rx="2" ry="2" />
<text  x="64.92" y="479.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1909" width="7.6" height="15.0" fill="rgb(217,183,19)" rx="2" ry="2" />
<text  x="64.92" y="1919.5" ></text>
</g>
<g >
<title>c10::UndefinedTensorImpl::~UndefinedTensorImpl (16 samples, 0.11%)</title><rect x="640.6" y="2037" width="1.3" height="15.0" fill="rgb(221,58,42)" rx="2" ry="2" />
<text  x="643.59" y="2047.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor  (18 samples, 0.12%)</title><rect x="1151.5" y="1925" width="1.5" height="15.0" fill="rgb(244,166,45)" rx="2" ry="2" />
<text  x="1154.53" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1461" width="0.8" height="15.0" fill="rgb(253,130,43)" rx="2" ry="2" />
<text  x="1186.64" y="1471.5" ></text>
</g>
<g >
<title>torch::autograd::AutogradMeta::~AutogradMeta (2 samples, 0.01%)</title><rect x="639.7" y="2005" width="0.2" height="15.0" fill="rgb(217,89,24)" rx="2" ry="2" />
<text  x="642.69" y="2015.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.02%)</title><rect x="425.1" y="1989" width="0.2" height="15.0" fill="rgb(217,131,36)" rx="2" ry="2" />
<text  x="428.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="61.9" y="53" width="0.2" height="15.0" fill="rgb(212,61,53)" rx="2" ry="2" />
<text  x="64.92" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="693" width="0.2" height="15.0" fill="rgb(214,68,13)" rx="2" ry="2" />
<text  x="459.80" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1509" width="0.8" height="15.0" fill="rgb(243,195,33)" rx="2" ry="2" />
<text  x="1186.64" y="1519.5" ></text>
</g>
<g >
<title>TDbDocument::TDbDocument (3 samples, 0.02%)</title><rect x="424.4" y="1973" width="0.3" height="15.0" fill="rgb(222,60,12)" rx="2" ry="2" />
<text  x="427.44" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1589" width="0.8" height="15.0" fill="rgb(250,126,12)" rx="2" ry="2" />
<text  x="1186.64" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1093" width="0.1" height="15.0" fill="rgb(232,107,44)" rx="2" ry="2" />
<text  x="459.96" y="1103.5" ></text>
</g>
<g >
<title>TNewsCluster::CalcFeatures (203 samples, 1.40%)</title><rect x="425.4" y="1973" width="16.6" height="15.0" fill="rgb(233,123,21)" rx="2" ry="2" />
<text  x="428.42" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1365" width="0.8" height="15.0" fill="rgb(244,161,50)" rx="2" ry="2" />
<text  x="1186.64" y="1375.5" ></text>
</g>
<g >
<title>torch::autograd::impl::set_gradient_edge (4 samples, 0.03%)</title><rect x="732.8" y="2005" width="0.3" height="15.0" fill="rgb(241,78,24)" rx="2" ry="2" />
<text  x="735.77" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="443.4" y="1893" width="0.7" height="15.0" fill="rgb(208,137,52)" rx="2" ry="2" />
<text  x="446.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="821" width="0.1" height="15.0" fill="rgb(225,175,33)" rx="2" ry="2" />
<text  x="459.96" y="831.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="449.7" y="1877" width="0.2" height="15.0" fill="rgb(209,32,53)" rx="2" ry="2" />
<text  x="452.71" y="1887.5" ></text>
</g>
<g >
<title>at::TensorIterator::nullary_op (8 samples, 0.06%)</title><rect x="68.7" y="69" width="0.6" height="15.0" fill="rgb(210,202,7)" rx="2" ry="2" />
<text  x="71.68" y="79.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (8 samples, 0.06%)</title><rect x="80.2" y="2021" width="0.6" height="15.0" fill="rgb(246,98,26)" rx="2" ry="2" />
<text  x="83.17" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="165" width="0.5" height="15.0" fill="rgb(221,95,23)" rx="2" ry="2" />
<text  x="1185.75" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="917" width="0.1" height="15.0" fill="rgb(251,196,8)" rx="2" ry="2" />
<text  x="459.96" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="53" width="0.2" height="15.0" fill="rgb(233,29,45)" rx="2" ry="2" />
<text  x="1186.24" y="63.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;c10::Type,  (2 samples, 0.01%)</title><rect x="1149.7" y="1973" width="0.1" height="15.0" fill="rgb(250,126,1)" rx="2" ry="2" />
<text  x="1152.66" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1605" width="0.2" height="15.0" fill="rgb(225,151,31)" rx="2" ry="2" />
<text  x="1186.24" y="1615.5" ></text>
</g>
<g >
<title>c10::TensorImpl::copy_tensor_metadata (2 samples, 0.01%)</title><rect x="637.5" y="2005" width="0.2" height="15.0" fill="rgb(242,114,14)" rx="2" ry="2" />
<text  x="640.49" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::write_characters (2 samples, 0.01%)</title><rect x="444.8" y="1925" width="0.2" height="15.0" fill="rgb(247,107,24)" rx="2" ry="2" />
<text  x="447.82" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (3 samples, 0.02%)</title><rect x="445.6" y="1909" width="0.2" height="15.0" fill="rgb(222,202,34)" rx="2" ry="2" />
<text  x="448.55" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.01%)</title><rect x="448.5" y="1989" width="0.1" height="15.0" fill="rgb(248,78,2)" rx="2" ry="2" />
<text  x="451.49" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="677" width="0.5" height="15.0" fill="rgb(214,38,36)" rx="2" ry="2" />
<text  x="1185.75" y="687.5" ></text>
</g>
<g >
<title>torch::jit::ProfilingGraphExecutorImpl::getPlanFor (3 samples, 0.02%)</title><rect x="1154.5" y="1989" width="0.2" height="15.0" fill="rgb(213,16,43)" rx="2" ry="2" />
<text  x="1157.46" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.10%)</title><rect x="1183.2" y="1973" width="1.2" height="15.0" fill="rgb(243,209,3)" rx="2" ry="2" />
<text  x="1186.24" y="1983.5" ></text>
</g>
<g >
<title>at::Tensor::options (3 samples, 0.02%)</title><rect x="744.7" y="2053" width="0.3" height="15.0" fill="rgb(243,112,6)" rx="2" ry="2" />
<text  x="747.75" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (12 samples, 0.08%)</title><rect x="434.1" y="1941" width="0.9" height="15.0" fill="rgb(254,17,13)" rx="2" ry="2" />
<text  x="437.06" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1381" width="0.5" height="15.0" fill="rgb(211,86,23)" rx="2" ry="2" />
<text  x="1185.75" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1557" width="7.5" height="15.0" fill="rgb(251,103,2)" rx="2" ry="2" />
<text  x="64.92" y="1567.5" ></text>
</g>
<g >
<title>tg::from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (3 samples, 0.02%)</title><rect x="454.2" y="1941" width="0.2" height="15.0" fill="rgb(247,157,18)" rx="2" ry="2" />
<text  x="457.19" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="613" width="7.5" height="15.0" fill="rgb(244,33,39)" rx="2" ry="2" />
<text  x="64.92" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1717" width="0.2" height="15.0" fill="rgb(215,55,5)" rx="2" ry="2" />
<text  x="1186.24" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="229" width="7.5" height="15.0" fill="rgb(250,35,33)" rx="2" ry="2" />
<text  x="64.92" y="239.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;at::OperandInfo&gt;::emplace_back&lt;at::Tensor const&amp;&gt; (2 samples, 0.01%)</title><rect x="71.6" y="1989" width="0.2" height="15.0" fill="rgb(214,72,10)" rx="2" ry="2" />
<text  x="74.62" y="1999.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (66 samples, 0.46%)</title><rect x="458.3" y="1941" width="5.3" height="15.0" fill="rgb(245,47,47)" rx="2" ry="2" />
<text  x="461.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1717" width="0.2" height="15.0" fill="rgb(223,37,50)" rx="2" ry="2" />
<text  x="446.51" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1189" width="0.2" height="15.0" fill="rgb(208,207,1)" rx="2" ry="2" />
<text  x="1186.24" y="1199.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="184.6" y="1941" width="0.1" height="15.0" fill="rgb(254,168,42)" rx="2" ry="2" />
<text  x="187.58" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (8,449 samples, 58.36%)</title><rect x="48.1" y="2053" width="688.6" height="15.0" fill="rgb(222,180,34)" rx="2" ry="2" />
<text  x="51.06" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="901" width="0.5" height="15.0" fill="rgb(241,97,27)" rx="2" ry="2" />
<text  x="1185.75" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1429" width="0.5" height="15.0" fill="rgb(205,63,4)" rx="2" ry="2" />
<text  x="1185.75" y="1439.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (26 samples, 0.18%)</title><rect x="444.7" y="1989" width="2.2" height="15.0" fill="rgb(246,109,10)" rx="2" ry="2" />
<text  x="447.74" y="1999.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.01%)</title><rect x="631.5" y="2005" width="0.1" height="15.0" fill="rgb(233,148,5)" rx="2" ry="2" />
<text  x="634.46" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1749" width="0.4" height="15.0" fill="rgb(233,129,51)" rx="2" ry="2" />
<text  x="459.07" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1605" width="0.2" height="15.0" fill="rgb(244,5,12)" rx="2" ry="2" />
<text  x="446.51" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="357" width="0.2" height="15.0" fill="rgb(225,197,19)" rx="2" ry="2" />
<text  x="1186.24" y="367.5" ></text>
</g>
<g >
<title>at::namedinference::propagate_names (2 samples, 0.01%)</title><rect x="747.8" y="2037" width="0.2" height="15.0" fill="rgb(240,165,2)" rx="2" ry="2" />
<text  x="750.85" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (5 samples, 0.03%)</title><rect x="73.7" y="2005" width="0.4" height="15.0" fill="rgb(219,184,14)" rx="2" ry="2" />
<text  x="76.74" y="2015.5" ></text>
</g>
<g >
<title>c10::impl::InlineDeviceGuard&lt;c10::impl::VirtualGuardImpl&gt;::InlineDeviceGuard (2 samples, 0.01%)</title><rect x="1152.8" y="1909" width="0.1" height="15.0" fill="rgb(251,13,0)" rx="2" ry="2" />
<text  x="1155.75" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (10 samples, 0.07%)</title><rect x="443.3" y="1941" width="0.8" height="15.0" fill="rgb(253,203,15)" rx="2" ry="2" />
<text  x="446.27" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="736.7" y="2037" width="0.1" height="15.0" fill="rgb(246,190,1)" rx="2" ry="2" />
<text  x="739.68" y="2047.5" ></text>
</g>
<g >
<title>TAlexaAgencyRating::GetCountryShare (28 samples, 0.19%)</title><rect x="425.7" y="1941" width="2.3" height="15.0" fill="rgb(228,22,16)" rx="2" ry="2" />
<text  x="428.75" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1541" width="0.4" height="15.0" fill="rgb(241,224,50)" rx="2" ry="2" />
<text  x="459.07" y="1551.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::add (33 samples, 0.23%)</title><rect x="176.3" y="1925" width="2.7" height="15.0" fill="rgb(233,87,24)" rx="2" ry="2" />
<text  x="179.27" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (157 samples, 1.08%)</title><rect x="57.0" y="1989" width="12.8" height="15.0" fill="rgb(217,116,6)" rx="2" ry="2" />
<text  x="60.03" y="1999.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (56 samples, 0.39%)</title><rect x="1069.0" y="2053" width="4.5" height="15.0" fill="rgb(250,37,28)" rx="2" ry="2" />
<text  x="1071.97" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;at::Tensor, std::allocator&lt;at::Tensor&gt; &gt;::~vector (2 samples, 0.01%)</title><rect x="731.5" y="2037" width="0.1" height="15.0" fill="rgb(244,212,26)" rx="2" ry="2" />
<text  x="734.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1813" width="0.2" height="15.0" fill="rgb(216,204,39)" rx="2" ry="2" />
<text  x="1186.24" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="443.4" y="1749" width="0.3" height="15.0" fill="rgb(215,2,35)" rx="2" ry="2" />
<text  x="446.43" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 0.47%)</title><rect x="61.9" y="85" width="5.6" height="15.0" fill="rgb(250,73,28)" rx="2" ry="2" />
<text  x="64.92" y="95.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor&amp;  (2 samples, 0.01%)</title><rect x="67.3" y="69" width="0.2" height="15.0" fill="rgb(215,142,3)" rx="2" ry="2" />
<text  x="70.30" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1461" width="0.2" height="15.0" fill="rgb(205,69,6)" rx="2" ry="2" />
<text  x="1186.24" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;torch::autograd::Edge, std::allocator&lt;torch::autograd::Edge&gt; &gt;::_M_emplace_back_aux&lt;torch::autograd::Edge&gt; (3 samples, 0.02%)</title><rect x="639.4" y="2005" width="0.3" height="15.0" fill="rgb(213,16,21)" rx="2" ry="2" />
<text  x="642.45" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1301" width="0.2" height="15.0" fill="rgb(254,111,50)" rx="2" ry="2" />
<text  x="459.80" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="789" width="7.5" height="15.0" fill="rgb(214,216,21)" rx="2" ry="2" />
<text  x="64.92" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="725" width="0.7" height="15.0" fill="rgb(223,164,0)" rx="2" ry="2" />
<text  x="1186.72" y="735.5" ></text>
</g>
<g >
<title>at::Tensor::squeeze (3 samples, 0.02%)</title><rect x="468.2" y="1925" width="0.3" height="15.0" fill="rgb(241,81,15)" rx="2" ry="2" />
<text  x="471.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.08%)</title><rect x="1183.5" y="1781" width="0.9" height="15.0" fill="rgb(232,206,25)" rx="2" ry="2" />
<text  x="1186.48" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (42 samples, 0.29%)</title><rect x="643.8" y="2037" width="3.5" height="15.0" fill="rgb(241,142,8)" rx="2" ry="2" />
<text  x="646.85" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="443.4" y="1797" width="0.7" height="15.0" fill="rgb(252,38,14)" rx="2" ry="2" />
<text  x="446.43" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1029" width="0.2" height="15.0" fill="rgb(235,89,13)" rx="2" ry="2" />
<text  x="459.80" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1061" width="0.1" height="15.0" fill="rgb(224,214,51)" rx="2" ry="2" />
<text  x="459.96" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="885" width="0.5" height="15.0" fill="rgb(211,134,2)" rx="2" ry="2" />
<text  x="1185.75" y="895.5" ></text>
</g>
<g >
<title>[unknown] (127 samples, 0.88%)</title><rect x="59.1" y="1957" width="10.4" height="15.0" fill="rgb(238,68,46)" rx="2" ry="2" />
<text  x="62.15" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1637" width="0.4" height="15.0" fill="rgb(243,15,4)" rx="2" ry="2" />
<text  x="459.07" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1477" width="0.8" height="15.0" fill="rgb(220,50,47)" rx="2" ry="2" />
<text  x="1186.64" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="456.5" y="1669" width="0.8" height="15.0" fill="rgb(243,10,38)" rx="2" ry="2" />
<text  x="459.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="597" width="0.5" height="15.0" fill="rgb(211,177,32)" rx="2" ry="2" />
<text  x="1185.75" y="607.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 0.64%)</title><rect x="61.9" y="1893" width="7.6" height="15.0" fill="rgb(221,9,4)" rx="2" ry="2" />
<text  x="64.92" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="443.4" y="1909" width="0.7" height="15.0" fill="rgb(211,74,14)" rx="2" ry="2" />
<text  x="446.35" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="456.6" y="1381" width="0.7" height="15.0" fill="rgb(247,65,38)" rx="2" ry="2" />
<text  x="459.64" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (5 samples, 0.03%)</title><rect x="463.6" y="1941" width="0.5" height="15.0" fill="rgb(216,164,31)" rx="2" ry="2" />
<text  x="466.65" y="1951.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="685.0" y="2021" width="0.3" height="15.0" fill="rgb(248,126,31)" rx="2" ry="2" />
<text  x="688.01" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1157" width="0.5" height="15.0" fill="rgb(210,173,23)" rx="2" ry="2" />
<text  x="1185.75" y="1167.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="449.7" y="1893" width="0.2" height="15.0" fill="rgb(221,104,22)" rx="2" ry="2" />
<text  x="452.71" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1877" width="0.5" height="15.0" fill="rgb(227,41,52)" rx="2" ry="2" />
<text  x="1185.75" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1621" width="0.2" height="15.0" fill="rgb(238,150,21)" rx="2" ry="2" />
<text  x="1186.24" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1189" width="0.8" height="15.0" fill="rgb(227,145,17)" rx="2" ry="2" />
<text  x="1186.64" y="1199.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (4 samples, 0.03%)</title><rect x="1031.2" y="2053" width="0.4" height="15.0" fill="rgb(245,160,1)" rx="2" ry="2" />
<text  x="1034.23" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="443.4" y="1845" width="0.7" height="15.0" fill="rgb(224,176,18)" rx="2" ry="2" />
<text  x="446.35" y="1855.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (105 samples, 0.73%)</title><rect x="1138.1" y="2053" width="8.5" height="15.0" fill="rgb(254,28,46)" rx="2" ry="2" />
<text  x="1141.08" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.11%)</title><rect x="476.1" y="1941" width="1.3" height="15.0" fill="rgb(245,49,47)" rx="2" ry="2" />
<text  x="479.12" y="1951.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1941" width="0.2" height="15.0" fill="rgb(233,48,39)" rx="2" ry="2" />
<text  x="453.85" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (158 samples, 1.09%)</title><rect x="171.9" y="1973" width="12.8" height="15.0" fill="rgb(248,153,43)" rx="2" ry="2" />
<text  x="174.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1237" width="0.8" height="15.0" fill="rgb(240,48,47)" rx="2" ry="2" />
<text  x="1186.64" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="85" width="0.7" height="15.0" fill="rgb(212,31,13)" rx="2" ry="2" />
<text  x="1186.72" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="181" width="0.7" height="15.0" fill="rgb(219,11,20)" rx="2" ry="2" />
<text  x="1186.72" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="533" width="0.7" height="15.0" fill="rgb(240,119,6)" rx="2" ry="2" />
<text  x="1186.72" y="543.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1365" width="7.5" height="15.0" fill="rgb(220,36,17)" rx="2" ry="2" />
<text  x="64.92" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="805" width="0.2" height="15.0" fill="rgb(206,49,52)" rx="2" ry="2" />
<text  x="459.80" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="213" width="0.2" height="15.0" fill="rgb(207,18,35)" rx="2" ry="2" />
<text  x="1186.24" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1989" width="0.2" height="15.0" fill="rgb(224,159,21)" rx="2" ry="2" />
<text  x="453.85" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1045" width="0.2" height="15.0" fill="rgb(239,13,18)" rx="2" ry="2" />
<text  x="459.80" y="1055.5" ></text>
</g>
<g >
<title>at::CPUType::empty_memory_format (2 samples, 0.01%)</title><rect x="629.3" y="2037" width="0.2" height="15.0" fill="rgb(232,160,6)" rx="2" ry="2" />
<text  x="632.34" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="293" width="0.7" height="15.0" fill="rgb(220,166,24)" rx="2" ry="2" />
<text  x="1186.72" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1733" width="0.4" height="15.0" fill="rgb(232,102,4)" rx="2" ry="2" />
<text  x="446.68" y="1743.5" ></text>
</g>
<g >
<title>torch::jit::InterpreterState::run (52 samples, 0.36%)</title><rect x="1150.1" y="1973" width="4.2" height="15.0" fill="rgb(237,96,41)" rx="2" ry="2" />
<text  x="1153.06" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (26 samples, 0.18%)</title><rect x="444.7" y="1957" width="2.2" height="15.0" fill="rgb(221,27,12)" rx="2" ry="2" />
<text  x="447.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="261" width="0.7" height="15.0" fill="rgb(231,194,51)" rx="2" ry="2" />
<text  x="1186.72" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (2 samples, 0.01%)</title><rect x="449.3" y="1973" width="0.2" height="15.0" fill="rgb(210,165,25)" rx="2" ry="2" />
<text  x="452.30" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1077" width="0.5" height="15.0" fill="rgb(248,208,54)" rx="2" ry="2" />
<text  x="1185.75" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1397" width="0.5" height="15.0" fill="rgb(214,167,25)" rx="2" ry="2" />
<text  x="1185.75" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (64 samples, 0.44%)</title><rect x="62.1" y="69" width="5.2" height="15.0" fill="rgb(245,148,4)" rx="2" ry="2" />
<text  x="65.08" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="933" width="0.2" height="15.0" fill="rgb(227,210,43)" rx="2" ry="2" />
<text  x="1186.24" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="441.5" y="1957" width="0.1" height="15.0" fill="rgb(205,43,18)" rx="2" ry="2" />
<text  x="444.48" y="1967.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (11 samples, 0.08%)</title><rect x="443.3" y="1973" width="0.9" height="15.0" fill="rgb(210,156,19)" rx="2" ry="2" />
<text  x="446.27" y="1983.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (5 samples, 0.03%)</title><rect x="627.5" y="1957" width="0.4" height="15.0" fill="rgb(219,185,23)" rx="2" ry="2" />
<text  x="630.47" y="1967.5" ></text>
</g>
<g >
<title>at::Tensor::contiguous (3 samples, 0.02%)</title><rect x="467.9" y="1925" width="0.2" height="15.0" fill="rgb(233,12,22)" rx="2" ry="2" />
<text  x="470.88" y="1935.5" ></text>
</g>
<g >
<title>TSlinkClustering::CalcDistances (203 samples, 1.40%)</title><rect x="405.7" y="1957" width="16.5" height="15.0" fill="rgb(217,77,27)" rx="2" ry="2" />
<text  x="408.70" y="1967.5" ></text>
</g>
<g >
<title>mkl_blas_xsgemv (31 samples, 0.21%)</title><rect x="666.9" y="2037" width="2.5" height="15.0" fill="rgb(234,133,5)" rx="2" ry="2" />
<text  x="669.91" y="2047.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (6 samples, 0.04%)</title><rect x="47.4" y="2037" width="0.5" height="15.0" fill="rgb(253,174,39)" rx="2" ry="2" />
<text  x="50.41" y="2047.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (6 samples, 0.04%)</title><rect x="736.2" y="2037" width="0.5" height="15.0" fill="rgb(247,54,46)" rx="2" ry="2" />
<text  x="739.19" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1765" width="7.5" height="15.0" fill="rgb(247,46,0)" rx="2" ry="2" />
<text  x="64.92" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="933" width="0.1" height="15.0" fill="rgb(233,47,0)" rx="2" ry="2" />
<text  x="459.96" y="943.5" ></text>
</g>
<g >
<title>at::native::mm_cpu_out (2 samples, 0.01%)</title><rect x="67.5" y="85" width="0.1" height="15.0" fill="rgb(232,189,29)" rx="2" ry="2" />
<text  x="70.46" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.7" y="1461" width="0.1" height="15.0" fill="rgb(254,28,47)" rx="2" ry="2" />
<text  x="446.68" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1829" width="0.5" height="15.0" fill="rgb(224,37,27)" rx="2" ry="2" />
<text  x="1185.75" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1797" width="7.5" height="15.0" fill="rgb(219,71,25)" rx="2" ry="2" />
<text  x="64.92" y="1807.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (4 samples, 0.03%)</title><rect x="172.9" y="1941" width="0.4" height="15.0" fill="rgb(222,35,27)" rx="2" ry="2" />
<text  x="175.92" y="1951.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (3 samples, 0.02%)</title><rect x="476.3" y="1893" width="0.2" height="15.0" fill="rgb(251,46,21)" rx="2" ry="2" />
<text  x="479.28" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (23 samples, 0.16%)</title><rect x="1180.8" y="2053" width="1.9" height="15.0" fill="rgb(251,109,26)" rx="2" ry="2" />
<text  x="1183.79" y="2063.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.01%)</title><rect x="185.5" y="1973" width="0.1" height="15.0" fill="rgb(207,14,8)" rx="2" ry="2" />
<text  x="188.48" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1125" width="0.2" height="15.0" fill="rgb(207,119,1)" rx="2" ry="2" />
<text  x="1186.24" y="1135.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.06%)</title><rect x="457.6" y="1941" width="0.7" height="15.0" fill="rgb(214,158,11)" rx="2" ry="2" />
<text  x="460.61" y="1951.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (13 samples, 0.09%)</title><rect x="999.1" y="2053" width="1.1" height="15.0" fill="rgb(237,198,12)" rx="2" ry="2" />
<text  x="1002.12" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="405" width="0.2" height="15.0" fill="rgb(215,15,24)" rx="2" ry="2" />
<text  x="459.80" y="415.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="581" width="7.5" height="15.0" fill="rgb(250,43,43)" rx="2" ry="2" />
<text  x="64.92" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1365" width="0.5" height="15.0" fill="rgb(230,75,46)" rx="2" ry="2" />
<text  x="1185.75" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="965" width="0.2" height="15.0" fill="rgb(238,37,36)" rx="2" ry="2" />
<text  x="459.80" y="975.5" ></text>
</g>
<g >
<title>torch::jit::GraphFunction::run (78 samples, 0.54%)</title><rect x="1148.6" y="2037" width="6.4" height="15.0" fill="rgb(239,155,43)" rx="2" ry="2" />
<text  x="1151.60" y="2047.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;TDbDocument*, std::vector&lt;TDbDocument, std::allocator&lt;TDbDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TClusterer::Cluster (2 samples, 0.01%)</title><rect x="423.4" y="1957" width="0.1" height="15.0" fill="rgb(224,223,17)" rx="2" ry="2" />
<text  x="426.38" y="1967.5" ></text>
</g>
<g >
<title>torch::jit::GraphFunction::check_single_output (2 samples, 0.01%)</title><rect x="1148.8" y="1989" width="0.1" height="15.0" fill="rgb(227,118,35)" rx="2" ry="2" />
<text  x="1151.76" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1365" width="0.2" height="15.0" fill="rgb(223,79,49)" rx="2" ry="2" />
<text  x="1186.24" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1237" width="0.2" height="15.0" fill="rgb(241,213,36)" rx="2" ry="2" />
<text  x="459.80" y="1247.5" ></text>
</g>
<g >
<title>_THArgCheck (3 samples, 0.02%)</title><rect x="737.3" y="2053" width="0.3" height="15.0" fill="rgb(230,14,38)" rx="2" ry="2" />
<text  x="740.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="933" width="0.2" height="15.0" fill="rgb(244,82,22)" rx="2" ry="2" />
<text  x="459.80" y="943.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.03%)</title><rect x="1029.0" y="2053" width="0.3" height="15.0" fill="rgb(207,229,53)" rx="2" ry="2" />
<text  x="1031.95" y="2063.5" ></text>
</g>
<g >
<title>__kmp_invoke_task_func (517 samples, 3.57%)</title><rect x="128.3" y="2037" width="42.1" height="15.0" fill="rgb(243,114,34)" rx="2" ry="2" />
<text  x="131.26" y="2047.5" >__k..</text>
</g>
<g >
<title>[unknown] (168 samples, 1.16%)</title><rect x="56.6" y="2005" width="13.7" height="15.0" fill="rgb(216,50,48)" rx="2" ry="2" />
<text  x="59.62" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="245" width="0.5" height="15.0" fill="rgb(214,150,32)" rx="2" ry="2" />
<text  x="1185.75" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1461" width="0.7" height="15.0" fill="rgb(225,168,12)" rx="2" ry="2" />
<text  x="459.55" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="581" width="0.2" height="15.0" fill="rgb(252,64,8)" rx="2" ry="2" />
<text  x="459.80" y="591.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (5 samples, 0.03%)</title><rect x="446.2" y="1925" width="0.4" height="15.0" fill="rgb(238,19,18)" rx="2" ry="2" />
<text  x="449.20" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.04%)</title><rect x="74.3" y="2021" width="0.5" height="15.0" fill="rgb(238,119,51)" rx="2" ry="2" />
<text  x="77.31" y="2031.5" ></text>
</g>
<g >
<title>at::native::zero_ (2 samples, 0.01%)</title><rect x="63.2" y="37" width="0.2" height="15.0" fill="rgb(213,78,9)" rx="2" ry="2" />
<text  x="66.22" y="47.5" ></text>
</g>
<g >
<title>c10::KernelFunction::callUnboxed&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor const&amp;, bool&gt; (12 samples, 0.08%)</title><rect x="470.9" y="1925" width="1.0" height="15.0" fill="rgb(227,195,36)" rx="2" ry="2" />
<text  x="473.90" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="885" width="7.5" height="15.0" fill="rgb(216,114,11)" rx="2" ry="2" />
<text  x="64.92" y="895.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor  (2 samples, 0.01%)</title><rect x="63.4" y="37" width="0.1" height="15.0" fill="rgb(220,69,49)" rx="2" ry="2" />
<text  x="66.38" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1477" width="0.2" height="15.0" fill="rgb(250,83,20)" rx="2" ry="2" />
<text  x="446.51" y="1487.5" ></text>
</g>
<g >
<title>TAnnotator::~TAnnotator (4 samples, 0.03%)</title><rect x="185.7" y="2005" width="0.3" height="15.0" fill="rgb(212,185,10)" rx="2" ry="2" />
<text  x="188.72" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (6 samples, 0.04%)</title><rect x="450.1" y="2005" width="0.5" height="15.0" fill="rgb(253,202,42)" rx="2" ry="2" />
<text  x="453.12" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="917" width="0.7" height="15.0" fill="rgb(249,26,13)" rx="2" ry="2" />
<text  x="1186.72" y="927.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (11 samples, 0.08%)</title><rect x="764.2" y="2053" width="0.9" height="15.0" fill="rgb(240,174,45)" rx="2" ry="2" />
<text  x="767.23" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1573" width="0.2" height="15.0" fill="rgb(211,21,7)" rx="2" ry="2" />
<text  x="1186.24" y="1583.5" ></text>
</g>
<g >
<title>at::native::(anonymous namespace)::add_kernel (2 samples, 0.01%)</title><rect x="1151.6" y="1861" width="0.2" height="15.0" fill="rgb(207,226,14)" rx="2" ry="2" />
<text  x="1154.61" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1125" width="0.2" height="15.0" fill="rgb(232,108,2)" rx="2" ry="2" />
<text  x="459.80" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="443.4" y="1877" width="0.7" height="15.0" fill="rgb(207,210,38)" rx="2" ry="2" />
<text  x="446.35" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (3 samples, 0.02%)</title><rect x="1007.5" y="2053" width="0.3" height="15.0" fill="rgb(230,103,52)" rx="2" ry="2" />
<text  x="1010.51" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1525" width="0.2" height="15.0" fill="rgb(243,118,3)" rx="2" ry="2" />
<text  x="446.51" y="1535.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor&amp;  (3 samples, 0.02%)</title><rect x="67.1" y="53" width="0.2" height="15.0" fill="rgb(208,151,19)" rx="2" ry="2" />
<text  x="70.05" y="63.5" ></text>
</g>
<g >
<title>at::CPUType::as_strided (2 samples, 0.01%)</title><rect x="62.1" y="37" width="0.1" height="15.0" fill="rgb(226,216,6)" rx="2" ry="2" />
<text  x="65.08" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="741" width="0.2" height="15.0" fill="rgb(215,64,9)" rx="2" ry="2" />
<text  x="1186.24" y="751.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="1185.4" y="2037" width="0.2" height="15.0" fill="rgb(214,119,10)" rx="2" ry="2" />
<text  x="1188.44" y="2047.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (2 samples, 0.01%)</title><rect x="80.0" y="2021" width="0.2" height="15.0" fill="rgb(217,51,43)" rx="2" ry="2" />
<text  x="83.01" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="693" width="7.5" height="15.0" fill="rgb(219,161,14)" rx="2" ry="2" />
<text  x="64.92" y="703.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="454.9" y="1941" width="0.3" height="15.0" fill="rgb(208,212,19)" rx="2" ry="2" />
<text  x="457.92" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="677" width="7.5" height="15.0" fill="rgb(215,110,28)" rx="2" ry="2" />
<text  x="64.92" y="687.5" ></text>
</g>
<g >
<title>at::native::as_strided_tensorimpl (3 samples, 0.02%)</title><rect x="640.7" y="1989" width="0.2" height="15.0" fill="rgb(217,93,41)" rx="2" ry="2" />
<text  x="643.67" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1861" width="0.2" height="15.0" fill="rgb(244,34,53)" rx="2" ry="2" />
<text  x="453.85" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1653" width="0.2" height="15.0" fill="rgb(221,3,14)" rx="2" ry="2" />
<text  x="446.51" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.02%)</title><rect x="176.0" y="1925" width="0.3" height="15.0" fill="rgb(231,98,53)" rx="2" ry="2" />
<text  x="179.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="853" width="0.2" height="15.0" fill="rgb(216,39,16)" rx="2" ry="2" />
<text  x="1186.24" y="863.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1093" width="7.5" height="15.0" fill="rgb(230,52,22)" rx="2" ry="2" />
<text  x="64.92" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1893" width="0.5" height="15.0" fill="rgb(225,203,28)" rx="2" ry="2" />
<text  x="1185.75" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1701" width="0.5" height="15.0" fill="rgb(221,25,38)" rx="2" ry="2" />
<text  x="1185.75" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="37" width="0.2" height="15.0" fill="rgb(210,164,21)" rx="2" ry="2" />
<text  x="1186.24" y="47.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1509" width="7.5" height="15.0" fill="rgb(208,138,3)" rx="2" ry="2" />
<text  x="64.92" y="1519.5" ></text>
</g>
<g >
<title>TDocument::FromJson (5 samples, 0.03%)</title><rect x="171.0" y="1973" width="0.5" height="15.0" fill="rgb(243,53,51)" rx="2" ry="2" />
<text  x="174.05" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="734.4" y="2005" width="0.2" height="15.0" fill="rgb(220,60,33)" rx="2" ry="2" />
<text  x="737.40" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="735.4" y="2005" width="0.2" height="15.0" fill="rgb(237,40,4)" rx="2" ry="2" />
<text  x="738.38" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="1182.8" y="53" width="0.4" height="15.0" fill="rgb(216,143,5)" rx="2" ry="2" />
<text  x="1185.83" y="63.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="123.4" y="2021" width="0.4" height="15.0" fill="rgb(236,49,23)" rx="2" ry="2" />
<text  x="126.37" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="565" width="0.5" height="15.0" fill="rgb(242,1,28)" rx="2" ry="2" />
<text  x="1185.75" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="853" width="0.1" height="15.0" fill="rgb(209,167,27)" rx="2" ry="2" />
<text  x="459.96" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="456.5" y="1701" width="0.8" height="15.0" fill="rgb(234,28,41)" rx="2" ry="2" />
<text  x="459.47" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1285" width="0.5" height="15.0" fill="rgb(212,106,31)" rx="2" ry="2" />
<text  x="1185.75" y="1295.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable_differentiable_view (2 samples, 0.01%)</title><rect x="732.6" y="1989" width="0.2" height="15.0" fill="rgb(207,201,23)" rx="2" ry="2" />
<text  x="735.61" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="101" width="0.7" height="15.0" fill="rgb(238,169,53)" rx="2" ry="2" />
<text  x="1186.72" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (5 samples, 0.03%)</title><rect x="723.5" y="2037" width="0.4" height="15.0" fill="rgb(246,49,14)" rx="2" ry="2" />
<text  x="726.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.11%)</title><rect x="456.0" y="1829" width="1.3" height="15.0" fill="rgb(226,141,10)" rx="2" ry="2" />
<text  x="458.98" y="1839.5" ></text>
</g>
<g >
<title>TNewsCluster::~TNewsCluster (5 samples, 0.03%)</title><rect x="424.9" y="2005" width="0.4" height="15.0" fill="rgb(219,96,21)" rx="2" ry="2" />
<text  x="427.93" y="2015.5" ></text>
</g>
<g >
<title>TNewsCluster::SortByWeights (2 samples, 0.01%)</title><rect x="444.2" y="1973" width="0.1" height="15.0" fill="rgb(209,50,30)" rx="2" ry="2" />
<text  x="447.17" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (85 samples, 0.59%)</title><rect x="48.1" y="2037" width="6.9" height="15.0" fill="rgb(230,11,20)" rx="2" ry="2" />
<text  x="51.06" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1493" width="7.5" height="15.0" fill="rgb(215,22,40)" rx="2" ry="2" />
<text  x="64.92" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="450.8" y="1781" width="0.2" height="15.0" fill="rgb(236,196,20)" rx="2" ry="2" />
<text  x="453.85" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="456.6" y="1573" width="0.7" height="15.0" fill="rgb(218,145,48)" rx="2" ry="2" />
<text  x="459.55" y="1583.5" ></text>
</g>
<g >
<title>at::native::norm (9 samples, 0.06%)</title><rect x="1151.9" y="1893" width="0.8" height="15.0" fill="rgb(246,65,47)" rx="2" ry="2" />
<text  x="1154.94" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (4 samples, 0.03%)</title><rect x="449.5" y="1989" width="0.4" height="15.0" fill="rgb(208,43,13)" rx="2" ry="2" />
<text  x="452.55" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="421" width="0.7" height="15.0" fill="rgb(242,154,52)" rx="2" ry="2" />
<text  x="1186.72" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.02%)</title><rect x="46.6" y="2021" width="0.2" height="15.0" fill="rgb(250,87,31)" rx="2" ry="2" />
<text  x="49.59" y="2031.5" ></text>
</g>
<g >
<title>at::getCPUAllocator (2 samples, 0.01%)</title><rect x="476.1" y="1893" width="0.2" height="15.0" fill="rgb(227,139,2)" rx="2" ry="2" />
<text  x="479.12" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="501" width="0.2" height="15.0" fill="rgb(229,80,50)" rx="2" ry="2" />
<text  x="1186.24" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="405" width="0.2" height="15.0" fill="rgb(236,192,23)" rx="2" ry="2" />
<text  x="1186.24" y="415.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (98 samples, 0.68%)</title><rect x="414.3" y="1941" width="7.9" height="15.0" fill="rgb(249,94,13)" rx="2" ry="2" />
<text  x="417.25" y="1951.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::ReFitLevel (2 samples, 0.01%)</title><rect x="1148.1" y="2053" width="0.2" height="15.0" fill="rgb(210,57,32)" rx="2" ry="2" />
<text  x="1151.11" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="389" width="0.7" height="15.0" fill="rgb(247,163,6)" rx="2" ry="2" />
<text  x="1186.72" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1861" width="0.5" height="15.0" fill="rgb(237,218,43)" rx="2" ry="2" />
<text  x="1185.75" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (126 samples, 0.87%)</title><rect x="1155.4" y="2053" width="10.2" height="15.0" fill="rgb(253,12,41)" rx="2" ry="2" />
<text  x="1158.36" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="501" width="0.7" height="15.0" fill="rgb(252,51,7)" rx="2" ry="2" />
<text  x="1186.72" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.3" y="1333" width="0.2" height="15.0" fill="rgb(209,184,50)" rx="2" ry="2" />
<text  x="459.31" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="645" width="0.2" height="15.0" fill="rgb(235,206,19)" rx="2" ry="2" />
<text  x="459.80" y="655.5" ></text>
</g>
<g >
<title>at::namedinference::propagate_names_if_nonempty (2 samples, 0.01%)</title><rect x="745.9" y="2053" width="0.2" height="15.0" fill="rgb(253,61,6)" rx="2" ry="2" />
<text  x="748.89" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="2021" width="0.5" height="15.0" fill="rgb(240,161,7)" rx="2" ry="2" />
<text  x="1185.75" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1045" width="7.5" height="15.0" fill="rgb(207,210,22)" rx="2" ry="2" />
<text  x="64.92" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1333" width="0.8" height="15.0" fill="rgb(230,183,37)" rx="2" ry="2" />
<text  x="1186.64" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.04%)</title><rect x="1182.7" y="2053" width="0.5" height="15.0" fill="rgb(205,161,26)" rx="2" ry="2" />
<text  x="1185.66" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1157" width="0.2" height="15.0" fill="rgb(242,207,11)" rx="2" ry="2" />
<text  x="1186.24" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (6 samples, 0.04%)</title><rect x="126.1" y="2021" width="0.5" height="15.0" fill="rgb(224,153,25)" rx="2" ry="2" />
<text  x="129.14" y="2031.5" ></text>
</g>
<g >
<title>mkl_blas_sgemm (4 samples, 0.03%)</title><rect x="666.6" y="2037" width="0.3" height="15.0" fill="rgb(208,117,37)" rx="2" ry="2" />
<text  x="669.59" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="533" width="7.5" height="15.0" fill="rgb(247,127,46)" rx="2" ry="2" />
<text  x="64.92" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="101" width="0.2" height="15.0" fill="rgb(241,85,31)" rx="2" ry="2" />
<text  x="1186.24" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.03%)</title><rect x="456.1" y="1413" width="0.4" height="15.0" fill="rgb(231,60,35)" rx="2" ry="2" />
<text  x="459.15" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="821" width="0.7" height="15.0" fill="rgb(206,217,42)" rx="2" ry="2" />
<text  x="1186.72" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1541" width="0.8" height="15.0" fill="rgb(207,215,53)" rx="2" ry="2" />
<text  x="1186.64" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="1045" width="0.7" height="15.0" fill="rgb(240,56,43)" rx="2" ry="2" />
<text  x="1186.72" y="1055.5" ></text>
</g>
<g >
<title>main (3,444 samples, 23.79%)</title><rect x="170.4" y="2021" width="280.7" height="15.0" fill="rgb(233,63,43)" rx="2" ry="2" />
<text  x="173.40" y="2031.5" >main</text>
</g>
<g >
<title>c10::IValue::type (4 samples, 0.03%)</title><rect x="1149.2" y="1957" width="0.3" height="15.0" fill="rgb(240,46,15)" rx="2" ry="2" />
<text  x="1152.17" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="373" width="0.5" height="15.0" fill="rgb(213,132,38)" rx="2" ry="2" />
<text  x="1185.75" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="917" width="0.2" height="15.0" fill="rgb(248,160,3)" rx="2" ry="2" />
<text  x="1186.24" y="927.5" ></text>
</g>
<g >
<title>c10::TensorImpl::requires_grad (3 samples, 0.02%)</title><rect x="471.3" y="1893" width="0.3" height="15.0" fill="rgb(239,143,20)" rx="2" ry="2" />
<text  x="474.31" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.11%)</title><rect x="640.6" y="2021" width="1.3" height="15.0" fill="rgb(253,213,43)" rx="2" ry="2" />
<text  x="643.59" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1573" width="0.8" height="15.0" fill="rgb(251,145,39)" rx="2" ry="2" />
<text  x="1186.64" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1429" width="0.8" height="15.0" fill="rgb(221,36,28)" rx="2" ry="2" />
<text  x="1186.64" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="549" width="0.7" height="15.0" fill="rgb(229,206,47)" rx="2" ry="2" />
<text  x="1186.72" y="559.5" ></text>
</g>
<g >
<title>at::CPUType::set__source_Storage_storage_offset (7 samples, 0.05%)</title><rect x="472.9" y="1797" width="0.5" height="15.0" fill="rgb(223,90,30)" rx="2" ry="2" />
<text  x="475.86" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="69" width="0.7" height="15.0" fill="rgb(228,12,45)" rx="2" ry="2" />
<text  x="1186.72" y="79.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (2 samples, 0.01%)</title><rect x="1068.8" y="2053" width="0.2" height="15.0" fill="rgb(227,170,24)" rx="2" ry="2" />
<text  x="1071.81" y="2063.5" ></text>
</g>
<g >
<title>posix_memalign (3 samples, 0.02%)</title><rect x="1147.5" y="2053" width="0.2" height="15.0" fill="rgb(209,105,23)" rx="2" ry="2" />
<text  x="1150.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1573" width="0.4" height="15.0" fill="rgb(220,66,40)" rx="2" ry="2" />
<text  x="459.07" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="549" width="7.5" height="15.0" fill="rgb(218,12,7)" rx="2" ry="2" />
<text  x="64.92" y="559.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="261" width="7.5" height="15.0" fill="rgb(227,203,2)" rx="2" ry="2" />
<text  x="64.92" y="271.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="440.4" y="1925" width="0.2" height="15.0" fill="rgb(230,88,9)" rx="2" ry="2" />
<text  x="443.42" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="421" width="0.2" height="15.0" fill="rgb(215,69,39)" rx="2" ry="2" />
<text  x="459.80" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1253" width="0.2" height="15.0" fill="rgb(245,122,13)" rx="2" ry="2" />
<text  x="1186.24" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="629" width="0.7" height="15.0" fill="rgb(237,76,31)" rx="2" ry="2" />
<text  x="1186.72" y="639.5" ></text>
</g>
<g >
<title>nlohmann::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::write_characters (3 samples, 0.02%)</title><rect x="445.2" y="1909" width="0.3" height="15.0" fill="rgb(218,90,39)" rx="2" ry="2" />
<text  x="448.23" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (5 samples, 0.03%)</title><rect x="1187.1" y="2053" width="0.4" height="15.0" fill="rgb(240,203,26)" rx="2" ry="2" />
<text  x="1190.07" y="2063.5" ></text>
</g>
<g >
<title>TAnnotator::AnnotateAll (182 samples, 1.26%)</title><rect x="170.9" y="2005" width="14.8" height="15.0" fill="rgb(206,77,3)" rx="2" ry="2" />
<text  x="173.89" y="2015.5" ></text>
</g>
<g >
<title>torch::autograd::DifferentiableViewMeta::requires_grad (6 samples, 0.04%)</title><rect x="732.6" y="2037" width="0.5" height="15.0" fill="rgb(236,8,45)" rx="2" ry="2" />
<text  x="735.61" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="613" width="0.2" height="15.0" fill="rgb(205,222,21)" rx="2" ry="2" />
<text  x="459.80" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1477" width="0.5" height="15.0" fill="rgb(209,49,47)" rx="2" ry="2" />
<text  x="1185.75" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1669" width="7.5" height="15.0" fill="rgb(221,84,46)" rx="2" ry="2" />
<text  x="64.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1749" width="0.5" height="15.0" fill="rgb(246,159,16)" rx="2" ry="2" />
<text  x="1185.75" y="1759.5" ></text>
</g>
<g >
<title>at::native::norm (10 samples, 0.07%)</title><rect x="1151.9" y="1909" width="0.8" height="15.0" fill="rgb(240,74,24)" rx="2" ry="2" />
<text  x="1154.86" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="117" width="0.2" height="15.0" fill="rgb(215,9,43)" rx="2" ry="2" />
<text  x="1186.24" y="127.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="446.0" y="1893" width="0.2" height="15.0" fill="rgb(217,137,15)" rx="2" ry="2" />
<text  x="449.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1669" width="0.5" height="15.0" fill="rgb(231,77,3)" rx="2" ry="2" />
<text  x="1185.75" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.04%)</title><rect x="456.8" y="1333" width="0.5" height="15.0" fill="rgb(231,31,13)" rx="2" ry="2" />
<text  x="459.80" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.07%)</title><rect x="1183.6" y="1717" width="0.8" height="15.0" fill="rgb(224,162,0)" rx="2" ry="2" />
<text  x="1186.56" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="133" width="0.2" height="15.0" fill="rgb(240,164,3)" rx="2" ry="2" />
<text  x="1186.24" y="143.5" ></text>
</g>
<g >
<title>at::native::setStrided (3 samples, 0.02%)</title><rect x="633.9" y="1973" width="0.2" height="15.0" fill="rgb(248,103,12)" rx="2" ry="2" />
<text  x="636.91" y="1983.5" ></text>
</g>
<g >
<title>caffe2::TypeMeta::_typeMetaDataInstance&lt;float&gt; (2 samples, 0.01%)</title><rect x="478.6" y="1941" width="0.1" height="15.0" fill="rgb(248,153,7)" rx="2" ry="2" />
<text  x="481.56" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1061" width="0.2" height="15.0" fill="rgb(243,9,54)" rx="2" ry="2" />
<text  x="1186.24" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1653" width="0.2" height="15.0" fill="rgb(241,161,24)" rx="2" ry="2" />
<text  x="1186.24" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1541" width="0.2" height="15.0" fill="rgb(234,34,32)" rx="2" ry="2" />
<text  x="446.51" y="1551.5" ></text>
</g>
<g >
<title>c10::StorageImpl::~StorageImpl (8 samples, 0.06%)</title><rect x="631.1" y="2037" width="0.6" height="15.0" fill="rgb(221,131,31)" rx="2" ry="2" />
<text  x="634.05" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="981" width="7.5" height="15.0" fill="rgb(225,177,37)" rx="2" ry="2" />
<text  x="64.92" y="991.5" ></text>
</g>
<g >
<title>at::native::mm_cpu_out (4 samples, 0.03%)</title><rect x="66.7" y="53" width="0.4" height="15.0" fill="rgb(227,183,37)" rx="2" ry="2" />
<text  x="69.73" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="69" width="0.2" height="15.0" fill="rgb(206,173,37)" rx="2" ry="2" />
<text  x="1186.24" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.9" y="1413" width="0.2" height="15.0" fill="rgb(242,224,3)" rx="2" ry="2" />
<text  x="446.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="853" width="0.5" height="15.0" fill="rgb(213,124,25)" rx="2" ry="2" />
<text  x="1185.75" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="443.4" y="1861" width="0.7" height="15.0" fill="rgb(216,57,20)" rx="2" ry="2" />
<text  x="446.35" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_float (2 samples, 0.01%)</title><rect x="446.6" y="1925" width="0.2" height="15.0" fill="rgb(219,115,9)" rx="2" ry="2" />
<text  x="449.61" y="1935.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="73.5" y="2005" width="0.2" height="15.0" fill="rgb(229,198,30)" rx="2" ry="2" />
<text  x="76.49" y="2015.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (28 samples, 0.19%)</title><rect x="44.2" y="2053" width="2.3" height="15.0" fill="rgb(236,3,16)" rx="2" ry="2" />
<text  x="47.23" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="1077" width="0.7" height="15.0" fill="rgb(244,80,31)" rx="2" ry="2" />
<text  x="1186.72" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1669" width="0.8" height="15.0" fill="rgb(230,64,27)" rx="2" ry="2" />
<text  x="1186.64" y="1679.5" ></text>
</g>
<g >
<title>TNewsCluster::AddDocument (2 samples, 0.01%)</title><rect x="186.5" y="1973" width="0.1" height="15.0" fill="rgb(205,121,14)" rx="2" ry="2" />
<text  x="189.45" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1605" width="0.8" height="15.0" fill="rgb(219,55,0)" rx="2" ry="2" />
<text  x="1186.64" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1045" width="0.5" height="15.0" fill="rgb(224,194,9)" rx="2" ry="2" />
<text  x="1185.75" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;void&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1813" width="0.2" height="15.0" fill="rgb(220,228,28)" rx="2" ry="2" />
<text  x="453.85" y="1823.5" ></text>
</g>
<g >
<title>torch::autograd::DifferentiableViewMeta::~DifferentiableViewMeta (4 samples, 0.03%)</title><rect x="639.9" y="2005" width="0.3" height="15.0" fill="rgb(239,200,9)" rx="2" ry="2" />
<text  x="642.85" y="2015.5" ></text>
</g>
<g >
<title>TAlexaAgencyRating::ScoreUrl (5 samples, 0.03%)</title><rect x="442.3" y="1957" width="0.4" height="15.0" fill="rgb(208,97,10)" rx="2" ry="2" />
<text  x="445.29" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="735.4" y="2021" width="0.2" height="15.0" fill="rgb(208,130,36)" rx="2" ry="2" />
<text  x="738.38" y="2031.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor&amp;  (12 samples, 0.08%)</title><rect x="67.6" y="85" width="1.0" height="15.0" fill="rgb(250,33,17)" rx="2" ry="2" />
<text  x="70.62" y="95.5" ></text>
</g>
<g >
<title>at::TensorIterator::compute_shape (2 samples, 0.01%)</title><rect x="71.0" y="1973" width="0.2" height="15.0" fill="rgb(232,122,37)" rx="2" ry="2" />
<text  x="74.05" y="1983.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (4 samples, 0.03%)</title><rect x="435.9" y="1925" width="0.3" height="15.0" fill="rgb(239,23,31)" rx="2" ry="2" />
<text  x="438.85" y="1935.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (413 samples, 2.85%)</title><rect x="1033.4" y="2053" width="33.7" height="15.0" fill="rgb(218,195,4)" rx="2" ry="2" />
<text  x="1036.43" y="2063.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="457.0" y="1189" width="0.1" height="15.0" fill="rgb(214,18,22)" rx="2" ry="2" />
<text  x="459.96" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="501" width="0.2" height="15.0" fill="rgb(205,176,26)" rx="2" ry="2" />
<text  x="459.80" y="511.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 0.57%)</title><rect x="61.9" y="101" width="6.7" height="15.0" fill="rgb(219,68,50)" rx="2" ry="2" />
<text  x="64.92" y="111.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (517 samples, 3.57%)</title><rect x="128.3" y="1989" width="42.1" height="15.0" fill="rgb(236,45,15)" rx="2" ry="2" />
<text  x="131.26" y="1999.5" >Eig..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1605" width="0.5" height="15.0" fill="rgb(220,70,30)" rx="2" ry="2" />
<text  x="1185.75" y="1615.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (517 samples, 3.57%)</title><rect x="128.3" y="1973" width="42.1" height="15.0" fill="rgb(240,13,2)" rx="2" ry="2" />
<text  x="131.26" y="1983.5" >Eig..</text>
</g>
<g >
<title>at::native::as_strided_tensorimpl (5 samples, 0.03%)</title><rect x="62.5" y="37" width="0.4" height="15.0" fill="rgb(246,28,28)" rx="2" ry="2" />
<text  x="65.49" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (15 samples, 0.10%)</title><rect x="1183.2" y="2021" width="1.2" height="15.0" fill="rgb(254,21,46)" rx="2" ry="2" />
<text  x="1186.15" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="405" width="0.7" height="15.0" fill="rgb(229,84,29)" rx="2" ry="2" />
<text  x="1186.72" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.10%)</title><rect x="1183.2" y="2005" width="1.2" height="15.0" fill="rgb(254,207,9)" rx="2" ry="2" />
<text  x="1186.15" y="2015.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor&amp;  (10 samples, 0.07%)</title><rect x="472.8" y="1813" width="0.8" height="15.0" fill="rgb(236,62,26)" rx="2" ry="2" />
<text  x="475.77" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1413" width="0.5" height="15.0" fill="rgb(236,166,4)" rx="2" ry="2" />
<text  x="1185.75" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="741" width="0.2" height="15.0" fill="rgb(223,142,37)" rx="2" ry="2" />
<text  x="459.80" y="751.5" ></text>
</g>
<g >
<title>torch::autograd::make_variable_differentiable_view (4 samples, 0.03%)</title><rect x="641.2" y="1989" width="0.3" height="15.0" fill="rgb(234,0,39)" rx="2" ry="2" />
<text  x="644.16" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (15 samples, 0.10%)</title><rect x="55.0" y="2021" width="1.2" height="15.0" fill="rgb(206,151,22)" rx="2" ry="2" />
<text  x="57.99" y="2031.5" ></text>
</g>
<g >
<title>torch::autograd::VariableHooks::grad_fn (7 samples, 0.05%)</title><rect x="632.2" y="1973" width="0.6" height="15.0" fill="rgb(238,184,26)" rx="2" ry="2" />
<text  x="635.19" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.03%)</title><rect x="728.3" y="2005" width="0.4" height="15.0" fill="rgb(215,25,41)" rx="2" ry="2" />
<text  x="731.29" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;torch::autograd::AccumulateGrad, std::allocator&lt;torch::autograd::AccumulateGrad&gt;,  (2 samples, 0.01%)</title><rect x="722.3" y="2037" width="0.2" height="15.0" fill="rgb(248,18,50)" rx="2" ry="2" />
<text  x="725.34" y="2047.5" ></text>
</g>
<g >
<title>TDbDocument::TDbDocument (4 samples, 0.03%)</title><rect x="186.0" y="1989" width="0.4" height="15.0" fill="rgb(250,88,48)" rx="2" ry="2" />
<text  x="189.05" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="117" width="0.7" height="15.0" fill="rgb(214,60,22)" rx="2" ry="2" />
<text  x="1186.72" y="127.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="949" width="7.5" height="15.0" fill="rgb(225,189,35)" rx="2" ry="2" />
<text  x="64.92" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="53" width="0.7" height="15.0" fill="rgb(205,38,31)" rx="2" ry="2" />
<text  x="1186.72" y="63.5" ></text>
</g>
<g >
<title>c10::function_ref&lt;void  (5 samples, 0.03%)</title><rect x="750.4" y="2053" width="0.4" height="15.0" fill="rgb(248,170,21)" rx="2" ry="2" />
<text  x="753.37" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1109" width="0.8" height="15.0" fill="rgb(236,222,3)" rx="2" ry="2" />
<text  x="1186.64" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="933" width="7.5" height="15.0" fill="rgb(218,123,42)" rx="2" ry="2" />
<text  x="64.92" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1557" width="0.2" height="15.0" fill="rgb(227,43,9)" rx="2" ry="2" />
<text  x="446.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1445" width="0.5" height="15.0" fill="rgb(230,71,27)" rx="2" ry="2" />
<text  x="1185.75" y="1455.5" ></text>
</g>
<g >
<title>torch::autograd::generated::DivBackward0::~DivBackward0 (4 samples, 0.03%)</title><rect x="734.3" y="2037" width="0.3" height="15.0" fill="rgb(227,13,18)" rx="2" ry="2" />
<text  x="737.32" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="133" width="7.5" height="15.0" fill="rgb(240,148,13)" rx="2" ry="2" />
<text  x="64.92" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1029" width="0.2" height="15.0" fill="rgb(249,173,49)" rx="2" ry="2" />
<text  x="1186.24" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="456.1" y="1685" width="0.4" height="15.0" fill="rgb(209,221,31)" rx="2" ry="2" />
<text  x="459.07" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1749" width="0.2" height="15.0" fill="rgb(224,204,32)" rx="2" ry="2" />
<text  x="1186.24" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1621" width="0.7" height="15.0" fill="rgb(235,201,51)" rx="2" ry="2" />
<text  x="459.55" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="597" width="0.7" height="15.0" fill="rgb(234,135,38)" rx="2" ry="2" />
<text  x="1186.72" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="261" width="0.5" height="15.0" fill="rgb(245,2,9)" rx="2" ry="2" />
<text  x="1185.75" y="271.5" ></text>
</g>
<g >
<title>DetectCategory (26 samples, 0.18%)</title><rect x="452.3" y="1957" width="2.1" height="15.0" fill="rgb(234,172,12)" rx="2" ry="2" />
<text  x="455.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="981" width="0.7" height="15.0" fill="rgb(217,192,46)" rx="2" ry="2" />
<text  x="1186.72" y="991.5" ></text>
</g>
<g >
<title>TNewsCluster::CalcImportance (195 samples, 1.35%)</title><rect x="425.5" y="1957" width="15.9" height="15.0" fill="rgb(208,155,23)" rx="2" ry="2" />
<text  x="428.50" y="1967.5" ></text>
</g>
<g >
<title>at::Tensor::tensor_data (3 samples, 0.02%)</title><rect x="633.4" y="1989" width="0.3" height="15.0" fill="rgb(252,180,1)" rx="2" ry="2" />
<text  x="636.42" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="213" width="7.5" height="15.0" fill="rgb(252,32,52)" rx="2" ry="2" />
<text  x="64.92" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1013" width="0.2" height="15.0" fill="rgb(229,141,38)" rx="2" ry="2" />
<text  x="1186.24" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1493" width="0.8" height="15.0" fill="rgb(232,95,27)" rx="2" ry="2" />
<text  x="1186.64" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (2 samples, 0.01%)</title><rect x="1150.2" y="1957" width="0.2" height="15.0" fill="rgb(243,11,37)" rx="2" ry="2" />
<text  x="1153.23" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="456.1" y="1557" width="0.4" height="15.0" fill="rgb(235,104,7)" rx="2" ry="2" />
<text  x="459.07" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="581" width="0.7" height="15.0" fill="rgb(249,63,28)" rx="2" ry="2" />
<text  x="1186.72" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.02%)</title><rect x="422.9" y="1973" width="0.2" height="15.0" fill="rgb(244,102,6)" rx="2" ry="2" />
<text  x="425.89" y="1983.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.01%)</title><rect x="476.8" y="1893" width="0.2" height="15.0" fill="rgb(244,39,42)" rx="2" ry="2" />
<text  x="479.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="773" width="0.7" height="15.0" fill="rgb(248,146,14)" rx="2" ry="2" />
<text  x="1186.72" y="783.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="773" width="7.5" height="15.0" fill="rgb(210,55,52)" rx="2" ry="2" />
<text  x="64.92" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="117" width="0.5" height="15.0" fill="rgb(223,99,6)" rx="2" ry="2" />
<text  x="1185.75" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.0" y="37" width="0.2" height="15.0" fill="rgb(234,203,7)" rx="2" ry="2" />
<text  x="1185.99" y="47.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1413" width="7.5" height="15.0" fill="rgb(231,178,6)" rx="2" ry="2" />
<text  x="64.92" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1397" width="0.8" height="15.0" fill="rgb(227,66,37)" rx="2" ry="2" />
<text  x="1186.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="197" width="0.5" height="15.0" fill="rgb(227,145,48)" rx="2" ry="2" />
<text  x="1185.75" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1525" width="0.4" height="15.0" fill="rgb(218,182,38)" rx="2" ry="2" />
<text  x="446.68" y="1535.5" ></text>
</g>
<g >
<title>at::Tensor::unsqueeze (5 samples, 0.03%)</title><rect x="468.5" y="1925" width="0.4" height="15.0" fill="rgb(250,106,3)" rx="2" ry="2" />
<text  x="471.45" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (4 samples, 0.03%)</title><rect x="97.0" y="2021" width="0.4" height="15.0" fill="rgb(251,217,36)" rx="2" ry="2" />
<text  x="100.05" y="2031.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::operator[] (36 samples, 0.25%)</title><rect x="438.5" y="1941" width="2.9" height="15.0" fill="rgb(238,30,46)" rx="2" ry="2" />
<text  x="441.46" y="1951.5" ></text>
</g>
<g >
<title>at::TensorIterator::build (5 samples, 0.03%)</title><rect x="632.2" y="1909" width="0.4" height="15.0" fill="rgb(253,99,46)" rx="2" ry="2" />
<text  x="635.19" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1269" width="0.2" height="15.0" fill="rgb(210,92,24)" rx="2" ry="2" />
<text  x="459.80" y="1279.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (3 samples, 0.02%)</title><rect x="1007.3" y="2053" width="0.2" height="15.0" fill="rgb(254,58,16)" rx="2" ry="2" />
<text  x="1010.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1349" width="0.2" height="15.0" fill="rgb(213,122,18)" rx="2" ry="2" />
<text  x="1186.24" y="1359.5" ></text>
</g>
<g >
<title>c10::OperatorHandle::callUnboxed&lt;at::Tensor&amp;, at::Tensor&amp;, c10::Storage, long, c10::ArrayRef&lt;long&gt;, c10::ArrayRef&lt;long&gt; &gt; (13 samples, 0.09%)</title><rect x="472.6" y="1877" width="1.1" height="15.0" fill="rgb(215,200,39)" rx="2" ry="2" />
<text  x="475.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="853" width="7.5" height="15.0" fill="rgb(227,84,24)" rx="2" ry="2" />
<text  x="64.92" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1061" width="0.5" height="15.0" fill="rgb(215,179,47)" rx="2" ry="2" />
<text  x="1185.75" y="1071.5" ></text>
</g>
<g >
<title>c10::TensorImpl::TensorImpl (2 samples, 0.01%)</title><rect x="631.7" y="2037" width="0.2" height="15.0" fill="rgb(207,75,30)" rx="2" ry="2" />
<text  x="634.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="565" width="7.5" height="15.0" fill="rgb(212,42,52)" rx="2" ry="2" />
<text  x="64.92" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1173" width="0.2" height="15.0" fill="rgb(233,151,41)" rx="2" ry="2" />
<text  x="459.80" y="1183.5" ></text>
</g>
<g >
<title>at::TensorIterator::binary_op (12 samples, 0.08%)</title><rect x="70.8" y="2005" width="1.0" height="15.0" fill="rgb(212,173,44)" rx="2" ry="2" />
<text  x="73.80" y="2015.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (6 samples, 0.04%)</title><rect x="736.8" y="2037" width="0.5" height="15.0" fill="rgb(211,11,39)" rx="2" ry="2" />
<text  x="739.84" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="341" width="7.5" height="15.0" fill="rgb(247,26,31)" rx="2" ry="2" />
<text  x="64.92" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="885" width="0.2" height="15.0" fill="rgb(219,105,1)" rx="2" ry="2" />
<text  x="459.80" y="895.5" ></text>
</g>
<g >
<title>c10::TensorImpl::~TensorImpl (2 samples, 0.01%)</title><rect x="472.0" y="1925" width="0.1" height="15.0" fill="rgb(248,102,34)" rx="2" ry="2" />
<text  x="474.96" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1685" width="0.4" height="15.0" fill="rgb(219,195,7)" rx="2" ry="2" />
<text  x="446.68" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1685" width="7.5" height="15.0" fill="rgb(246,10,35)" rx="2" ry="2" />
<text  x="64.92" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="469" width="0.2" height="15.0" fill="rgb(221,143,0)" rx="2" ry="2" />
<text  x="1186.24" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="443.4" y="1829" width="0.7" height="15.0" fill="rgb(253,38,46)" rx="2" ry="2" />
<text  x="446.43" y="1839.5" ></text>
</g>
<g >
<title>c10::detail::wrap_kernel_functor_unboxed_&lt;c10::detail::WrapRuntimeKernelFunctor_&lt;at::Tensor  (2 samples, 0.01%)</title><rect x="642.0" y="2037" width="0.1" height="15.0" fill="rgb(225,144,17)" rx="2" ry="2" />
<text  x="644.97" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1637" width="0.8" height="15.0" fill="rgb(213,219,45)" rx="2" ry="2" />
<text  x="1186.64" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;TDbDocument, std::allocator&lt;TDbDocument&gt; &gt;::vector (6 samples, 0.04%)</title><rect x="424.4" y="1989" width="0.5" height="15.0" fill="rgb(234,123,15)" rx="2" ry="2" />
<text  x="427.44" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1253" width="7.5" height="15.0" fill="rgb(212,95,27)" rx="2" ry="2" />
<text  x="64.92" y="1263.5" ></text>
</g>
<g >
<title>at::TypeDefault::transpose_int (3 samples, 0.02%)</title><rect x="633.7" y="1989" width="0.2" height="15.0" fill="rgb(219,146,0)" rx="2" ry="2" />
<text  x="636.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1013" width="0.1" height="15.0" fill="rgb(236,12,27)" rx="2" ry="2" />
<text  x="459.96" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="693" width="0.1" height="15.0" fill="rgb(221,207,47)" rx="2" ry="2" />
<text  x="459.96" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1093" width="0.5" height="15.0" fill="rgb(215,10,46)" rx="2" ry="2" />
<text  x="1185.75" y="1103.5" ></text>
</g>
<g >
<title>c10::FunctionSchema::checkArg (5 samples, 0.03%)</title><rect x="1149.1" y="1973" width="0.4" height="15.0" fill="rgb(215,139,21)" rx="2" ry="2" />
<text  x="1152.09" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="805" width="0.5" height="15.0" fill="rgb(227,130,27)" rx="2" ry="2" />
<text  x="1185.75" y="815.5" ></text>
</g>
<g >
<title>__tls_get_addr (7 samples, 0.05%)</title><rect x="628.4" y="2037" width="0.5" height="15.0" fill="rgb(207,212,12)" rx="2" ry="2" />
<text  x="631.36" y="2047.5" ></text>
</g>
<g >
<title>at::TensorIterator::build (6 samples, 0.04%)</title><rect x="68.7" y="53" width="0.5" height="15.0" fill="rgb(211,39,29)" rx="2" ry="2" />
<text  x="71.68" y="63.5" ></text>
</g>
<g >
<title>__kmp_invoke_microtask (517 samples, 3.57%)</title><rect x="128.3" y="2021" width="42.1" height="15.0" fill="rgb(233,2,6)" rx="2" ry="2" />
<text  x="131.26" y="2031.5" >__k..</text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.03%)</title><rect x="425.8" y="1925" width="0.4" height="15.0" fill="rgb(219,204,23)" rx="2" ry="2" />
<text  x="428.83" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="245" width="0.2" height="15.0" fill="rgb(224,222,8)" rx="2" ry="2" />
<text  x="1186.24" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;torch::autograd::generated::DivBackward0*, void  (2 samples, 0.01%)</title><rect x="721.8" y="2037" width="0.2" height="15.0" fill="rgb(242,161,33)" rx="2" ry="2" />
<text  x="724.85" y="2047.5" ></text>
</g>
<g >
<title>at::native::mm_cpu (4 samples, 0.03%)</title><rect x="74.9" y="2005" width="0.3" height="15.0" fill="rgb(238,103,10)" rx="2" ry="2" />
<text  x="77.88" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (158 samples, 1.09%)</title><rect x="171.9" y="1957" width="12.8" height="15.0" fill="rgb(231,202,14)" rx="2" ry="2" />
<text  x="174.86" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="421" width="0.5" height="15.0" fill="rgb(224,16,22)" rx="2" ry="2" />
<text  x="1185.75" y="431.5" ></text>
</g>
<g >
<title>CleanFileName (2 samples, 0.01%)</title><rect x="170.7" y="2005" width="0.2" height="15.0" fill="rgb(233,66,54)" rx="2" ry="2" />
<text  x="173.72" y="2015.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (2 samples, 0.01%)</title><rect x="1007.8" y="2053" width="0.1" height="15.0" fill="rgb(231,221,14)" rx="2" ry="2" />
<text  x="1010.76" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 0.54%)</title><rect x="1148.6" y="2021" width="6.4" height="15.0" fill="rgb(244,9,24)" rx="2" ry="2" />
<text  x="1151.60" y="2031.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (5 samples, 0.03%)</title><rect x="1186.2" y="2053" width="0.4" height="15.0" fill="rgb(228,39,37)" rx="2" ry="2" />
<text  x="1189.17" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.08%)</title><rect x="1183.5" y="1829" width="0.9" height="15.0" fill="rgb(207,104,12)" rx="2" ry="2" />
<text  x="1186.48" y="1839.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.01%)</title><rect x="632.8" y="1989" width="0.1" height="15.0" fill="rgb(235,227,40)" rx="2" ry="2" />
<text  x="635.76" y="1999.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.06%)</title><rect x="720.5" y="2037" width="0.7" height="15.0" fill="rgb(250,1,10)" rx="2" ry="2" />
<text  x="723.54" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1669" width="0.4" height="15.0" fill="rgb(227,117,17)" rx="2" ry="2" />
<text  x="459.07" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.11%)</title><rect x="456.0" y="1813" width="1.3" height="15.0" fill="rgb(218,139,47)" rx="2" ry="2" />
<text  x="458.98" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (222 samples, 1.53%)</title><rect x="56.2" y="2021" width="18.1" height="15.0" fill="rgb(247,158,45)" rx="2" ry="2" />
<text  x="59.21" y="2031.5" ></text>
</g>
<g >
<title>torch::autograd::SavedVariable::SavedVariable (7 samples, 0.05%)</title><rect x="635.1" y="1989" width="0.6" height="15.0" fill="rgb(243,59,17)" rx="2" ry="2" />
<text  x="638.13" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1973" width="0.5" height="15.0" fill="rgb(249,24,32)" rx="2" ry="2" />
<text  x="1185.75" y="1983.5" ></text>
</g>
<g >
<title>at::TypeDefault::fill__Scalar (2 samples, 0.01%)</title><rect x="67.3" y="53" width="0.2" height="15.0" fill="rgb(210,70,6)" rx="2" ry="2" />
<text  x="70.30" y="63.5" ></text>
</g>
<g >
<title>torch::autograd::generated::TBackward::~TBackward (3 samples, 0.02%)</title><rect x="735.4" y="2037" width="0.2" height="15.0" fill="rgb(211,15,54)" rx="2" ry="2" />
<text  x="738.38" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1109" width="0.2" height="15.0" fill="rgb(247,37,42)" rx="2" ry="2" />
<text  x="459.80" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="85" width="0.2" height="15.0" fill="rgb(246,165,10)" rx="2" ry="2" />
<text  x="1186.24" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="421" width="0.2" height="15.0" fill="rgb(253,33,22)" rx="2" ry="2" />
<text  x="1186.24" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1589" width="0.2" height="15.0" fill="rgb(243,42,35)" rx="2" ry="2" />
<text  x="446.51" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (84 samples, 0.58%)</title><rect x="862.1" y="2053" width="6.9" height="15.0" fill="rgb(221,142,46)" rx="2" ry="2" />
<text  x="865.11" y="2063.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (12 samples, 0.08%)</title><rect x="674.2" y="2037" width="0.9" height="15.0" fill="rgb(244,188,44)" rx="2" ry="2" />
<text  x="677.17" y="2047.5" ></text>
</g>
<g >
<title>c10::TensorOptions::computeDispatchKey (2 samples, 0.01%)</title><rect x="753.3" y="2021" width="0.2" height="15.0" fill="rgb(214,108,11)" rx="2" ry="2" />
<text  x="756.31" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1525" width="0.2" height="15.0" fill="rgb(218,201,30)" rx="2" ry="2" />
<text  x="1186.24" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1301" width="0.5" height="15.0" fill="rgb(244,66,7)" rx="2" ry="2" />
<text  x="1185.75" y="1311.5" ></text>
</g>
<g >
<title>at::Tensor::set_ (13 samples, 0.09%)</title><rect x="472.6" y="1893" width="1.1" height="15.0" fill="rgb(225,102,15)" rx="2" ry="2" />
<text  x="475.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="901" width="0.2" height="15.0" fill="rgb(237,93,10)" rx="2" ry="2" />
<text  x="1186.24" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1941" width="0.5" height="15.0" fill="rgb(226,227,45)" rx="2" ry="2" />
<text  x="1185.75" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="709" width="7.5" height="15.0" fill="rgb(242,116,50)" rx="2" ry="2" />
<text  x="64.92" y="719.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (123 samples, 0.85%)</title><rect x="1057.1" y="2037" width="10.0" height="15.0" fill="rgb(209,143,35)" rx="2" ry="2" />
<text  x="1060.07" y="2047.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (1,594 samples, 11.01%)</title><rect x="869.2" y="2053" width="129.9" height="15.0" fill="rgb(205,186,39)" rx="2" ry="2" />
<text  x="872.20" y="2063.5" >fasttext::Produc..</text>
</g>
<g >
<title>at::native::mm_cpu_out (3 samples, 0.02%)</title><rect x="62.9" y="37" width="0.2" height="15.0" fill="rgb(240,158,43)" rx="2" ry="2" />
<text  x="65.90" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="885" width="0.1" height="15.0" fill="rgb(217,51,4)" rx="2" ry="2" />
<text  x="459.96" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1685" width="0.5" height="15.0" fill="rgb(225,171,12)" rx="2" ry="2" />
<text  x="1185.75" y="1695.5" ></text>
</g>
<g >
<title>DetectLanguage (16 samples, 0.11%)</title><rect x="454.4" y="1957" width="1.3" height="15.0" fill="rgb(242,102,51)" rx="2" ry="2" />
<text  x="457.44" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1045" width="0.2" height="15.0" fill="rgb(215,20,50)" rx="2" ry="2" />
<text  x="1186.24" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="725" width="0.1" height="15.0" fill="rgb(245,43,25)" rx="2" ry="2" />
<text  x="459.96" y="735.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="93.3" y="2021" width="0.2" height="15.0" fill="rgb(211,189,7)" rx="2" ry="2" />
<text  x="96.30" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="450.8" y="1877" width="0.2" height="15.0" fill="rgb(250,68,42)" rx="2" ry="2" />
<text  x="453.85" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="325" width="0.2" height="15.0" fill="rgb(206,189,36)" rx="2" ry="2" />
<text  x="1186.24" y="335.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator== (2 samples, 0.01%)</title><rect x="185.3" y="1973" width="0.2" height="15.0" fill="rgb(209,71,24)" rx="2" ry="2" />
<text  x="188.31" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1333" width="7.5" height="15.0" fill="rgb(237,172,13)" rx="2" ry="2" />
<text  x="64.92" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1317" width="7.5" height="15.0" fill="rgb(243,140,46)" rx="2" ry="2" />
<text  x="64.92" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1349" width="7.5" height="15.0" fill="rgb(214,117,53)" rx="2" ry="2" />
<text  x="64.92" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (4 samples, 0.03%)</title><rect x="731.7" y="2037" width="0.3" height="15.0" fill="rgb(212,165,3)" rx="2" ry="2" />
<text  x="734.71" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (8 samples, 0.06%)</title><rect x="816.7" y="2053" width="0.7" height="15.0" fill="rgb(231,125,23)" rx="2" ry="2" />
<text  x="819.72" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="565" width="0.2" height="15.0" fill="rgb(218,203,36)" rx="2" ry="2" />
<text  x="1186.24" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="773" width="0.5" height="15.0" fill="rgb(208,54,5)" rx="2" ry="2" />
<text  x="1185.75" y="783.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="901" width="7.5" height="15.0" fill="rgb(209,204,46)" rx="2" ry="2" />
<text  x="64.92" y="911.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="309" width="7.5" height="15.0" fill="rgb(231,81,53)" rx="2" ry="2" />
<text  x="64.92" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1493" width="0.7" height="15.0" fill="rgb(206,227,9)" rx="2" ry="2" />
<text  x="459.55" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.22%)</title><rect x="751.2" y="2037" width="2.6" height="15.0" fill="rgb(211,6,28)" rx="2" ry="2" />
<text  x="754.19" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="869" width="0.5" height="15.0" fill="rgb(207,52,21)" rx="2" ry="2" />
<text  x="1185.75" y="879.5" ></text>
</g>
<g >
<title>at::native::t (2 samples, 0.01%)</title><rect x="634.1" y="1989" width="0.2" height="15.0" fill="rgb(237,43,16)" rx="2" ry="2" />
<text  x="637.15" y="1999.5" ></text>
</g>
<g >
<title>mkl_serv_lsame (3 samples, 0.02%)</title><rect x="669.6" y="2037" width="0.2" height="15.0" fill="rgb(216,101,7)" rx="2" ry="2" />
<text  x="672.60" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="443.7" y="1749" width="0.4" height="15.0" fill="rgb(210,106,25)" rx="2" ry="2" />
<text  x="446.68" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="997" width="0.5" height="15.0" fill="rgb(239,29,37)" rx="2" ry="2" />
<text  x="1185.75" y="1007.5" ></text>
</g>
<g >
<title>c10::DispatchKeySet::has (2 samples, 0.01%)</title><rect x="735.2" y="1957" width="0.2" height="15.0" fill="rgb(224,146,35)" rx="2" ry="2" />
<text  x="738.21" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="443.4" y="1813" width="0.7" height="15.0" fill="rgb(240,131,54)" rx="2" ry="2" />
<text  x="446.43" y="1823.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;std::optional&lt;TDbDocument&gt;  (3 samples, 0.02%)</title><rect x="47.6" y="2005" width="0.2" height="15.0" fill="rgb(235,87,4)" rx="2" ry="2" />
<text  x="50.57" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1765" width="0.2" height="15.0" fill="rgb(248,126,13)" rx="2" ry="2" />
<text  x="1186.24" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="277" width="0.7" height="15.0" fill="rgb(244,106,15)" rx="2" ry="2" />
<text  x="1186.72" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="741" width="0.5" height="15.0" fill="rgb(241,54,30)" rx="2" ry="2" />
<text  x="1185.75" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="405" width="0.5" height="15.0" fill="rgb(245,86,36)" rx="2" ry="2" />
<text  x="1185.75" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="277" width="0.5" height="15.0" fill="rgb(215,34,38)" rx="2" ry="2" />
<text  x="1185.75" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="181" width="0.2" height="15.0" fill="rgb(248,166,20)" rx="2" ry="2" />
<text  x="1186.24" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1285" width="0.2" height="15.0" fill="rgb(244,171,40)" rx="2" ry="2" />
<text  x="1186.24" y="1295.5" ></text>
</g>
<g >
<title>at::native::legacy::cpu::_th_set_ (2 samples, 0.01%)</title><rect x="473.4" y="1797" width="0.2" height="15.0" fill="rgb(243,60,19)" rx="2" ry="2" />
<text  x="476.43" y="1807.5" ></text>
</g>
<g >
<title>at::Tensor::tensor_data (2 samples, 0.01%)</title><rect x="640.2" y="1989" width="0.1" height="15.0" fill="rgb(241,110,5)" rx="2" ry="2" />
<text  x="643.18" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="443.7" y="1573" width="0.4" height="15.0" fill="rgb(236,31,23)" rx="2" ry="2" />
<text  x="446.68" y="1583.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (2 samples, 0.01%)</title><rect x="441.1" y="1909" width="0.1" height="15.0" fill="rgb(221,38,34)" rx="2" ry="2" />
<text  x="444.07" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1781" width="0.5" height="15.0" fill="rgb(219,185,47)" rx="2" ry="2" />
<text  x="1185.75" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.03%)</title><rect x="56.2" y="2005" width="0.3" height="15.0" fill="rgb(248,75,0)" rx="2" ry="2" />
<text  x="59.21" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1781" width="0.2" height="15.0" fill="rgb(207,206,0)" rx="2" ry="2" />
<text  x="1186.24" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="1381" width="0.2" height="15.0" fill="rgb(247,8,30)" rx="2" ry="2" />
<text  x="1186.24" y="1391.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (137 samples, 0.95%)</title><rect x="776.3" y="2053" width="11.2" height="15.0" fill="rgb(243,145,35)" rx="2" ry="2" />
<text  x="779.29" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="277" width="7.5" height="15.0" fill="rgb(247,181,49)" rx="2" ry="2" />
<text  x="64.92" y="287.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callUnboxed&lt;at::Tensor, c10::ArrayRef&lt;long&gt;, c10::TensorOptions const&amp;, c10::optional&lt;c10::MemoryFormat&gt; &gt; (3 samples, 0.02%)</title><rect x="473.7" y="1893" width="0.2" height="15.0" fill="rgb(243,153,7)" rx="2" ry="2" />
<text  x="476.67" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="725" width="0.5" height="15.0" fill="rgb(220,14,3)" rx="2" ry="2" />
<text  x="1185.75" y="735.5" ></text>
</g>
<g >
<title>torch::zeros (6 samples, 0.04%)</title><rect x="475.0" y="1909" width="0.5" height="15.0" fill="rgb(236,194,31)" rx="2" ry="2" />
<text  x="477.97" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="722.3" y="2021" width="0.2" height="15.0" fill="rgb(207,11,35)" rx="2" ry="2" />
<text  x="725.34" y="2031.5" ></text>
</g>
<g >
<title>cfree (7 samples, 0.05%)</title><rect x="478.7" y="1941" width="0.6" height="15.0" fill="rgb(205,136,54)" rx="2" ry="2" />
<text  x="481.72" y="1951.5" ></text>
</g>
<g >
<title>at::LegacyTypeDispatch::initForDispatchKeySet (2 samples, 0.01%)</title><rect x="752.9" y="2005" width="0.2" height="15.0" fill="rgb(252,40,2)" rx="2" ry="2" />
<text  x="755.90" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (26 samples, 0.18%)</title><rect x="444.7" y="1973" width="2.2" height="15.0" fill="rgb(247,210,51)" rx="2" ry="2" />
<text  x="447.74" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="443.8" y="1477" width="0.3" height="15.0" fill="rgb(253,77,23)" rx="2" ry="2" />
<text  x="446.84" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="757" width="0.2" height="15.0" fill="rgb(211,152,26)" rx="2" ry="2" />
<text  x="1186.24" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="1183.6" y="1205" width="0.8" height="15.0" fill="rgb(209,177,35)" rx="2" ry="2" />
<text  x="1186.64" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1029" width="0.5" height="15.0" fill="rgb(215,143,9)" rx="2" ry="2" />
<text  x="1185.75" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="453" width="0.7" height="15.0" fill="rgb(239,38,33)" rx="2" ry="2" />
<text  x="1186.72" y="463.5" ></text>
</g>
<g >
<title>at::native::empty_cpu (2 samples, 0.01%)</title><rect x="752.1" y="2005" width="0.1" height="15.0" fill="rgb(244,117,36)" rx="2" ry="2" />
<text  x="755.08" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="837" width="0.7" height="15.0" fill="rgb(214,58,16)" rx="2" ry="2" />
<text  x="1186.72" y="847.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1125" width="7.5" height="15.0" fill="rgb(223,9,39)" rx="2" ry="2" />
<text  x="64.92" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="149" width="0.7" height="15.0" fill="rgb(209,98,31)" rx="2" ry="2" />
<text  x="1186.72" y="159.5" ></text>
</g>
<g >
<title>mkl_serv_cbwr_get (2 samples, 0.01%)</title><rect x="669.4" y="2037" width="0.2" height="15.0" fill="rgb(230,18,9)" rx="2" ry="2" />
<text  x="672.44" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="443.5" y="1621" width="0.2" height="15.0" fill="rgb(231,26,36)" rx="2" ry="2" />
<text  x="446.51" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (137 samples, 0.95%)</title><rect x="765.1" y="2053" width="11.2" height="15.0" fill="rgb(229,38,32)" rx="2" ry="2" />
<text  x="768.13" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1397" width="0.2" height="15.0" fill="rgb(219,162,39)" rx="2" ry="2" />
<text  x="1186.24" y="1407.5" ></text>
</g>
<g >
<title>mkl_blas_avx512_xsgemv (29 samples, 0.20%)</title><rect x="667.1" y="2021" width="2.3" height="15.0" fill="rgb(231,161,53)" rx="2" ry="2" />
<text  x="670.08" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1893" width="0.2" height="15.0" fill="rgb(234,73,6)" rx="2" ry="2" />
<text  x="1186.24" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (22 samples, 0.15%)</title><rect x="182.8" y="1909" width="1.8" height="15.0" fill="rgb(215,164,8)" rx="2" ry="2" />
<text  x="185.79" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="597" width="7.5" height="15.0" fill="rgb(219,184,44)" rx="2" ry="2" />
<text  x="64.92" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1637" width="0.5" height="15.0" fill="rgb(251,63,15)" rx="2" ry="2" />
<text  x="1185.75" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.05%)</title><rect x="632.2" y="1957" width="0.6" height="15.0" fill="rgb(229,161,38)" rx="2" ry="2" />
<text  x="635.19" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1253" width="0.1" height="15.0" fill="rgb(236,22,25)" rx="2" ry="2" />
<text  x="459.96" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="837" width="0.2" height="15.0" fill="rgb(230,30,51)" rx="2" ry="2" />
<text  x="459.80" y="847.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="437" width="7.5" height="15.0" fill="rgb(249,177,18)" rx="2" ry="2" />
<text  x="64.92" y="447.5" ></text>
</g>
<g >
<title>c10::Dispatcher::callUnboxed&lt;at::Tensor, at::Tensor const&amp;, at::Tensor const&amp;&gt; (2 samples, 0.01%)</title><rect x="748.9" y="2053" width="0.2" height="15.0" fill="rgb(243,218,14)" rx="2" ry="2" />
<text  x="751.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="181" width="0.5" height="15.0" fill="rgb(222,139,24)" rx="2" ry="2" />
<text  x="1185.75" y="191.5" ></text>
</g>
<g >
<title>torch::autograd::generated::SqueezeBackward1::~SqueezeBackward1 (2 samples, 0.01%)</title><rect x="1189.7" y="2053" width="0.1" height="15.0" fill="rgb(243,45,31)" rx="2" ry="2" />
<text  x="1192.67" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="821" width="0.5" height="15.0" fill="rgb(244,195,53)" rx="2" ry="2" />
<text  x="1185.75" y="831.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="171.9" y="1941" width="0.2" height="15.0" fill="rgb(237,78,27)" rx="2" ry="2" />
<text  x="174.95" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1237" width="0.2" height="15.0" fill="rgb(250,27,11)" rx="2" ry="2" />
<text  x="1186.24" y="1247.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (2,168 samples, 14.97%)</title><rect x="451.7" y="2005" width="176.7" height="15.0" fill="rgb(213,216,50)" rx="2" ry="2" />
<text  x="454.66" y="2015.5" >std::_Function_handler..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="77.7" y="2005" width="0.2" height="15.0" fill="rgb(233,126,41)" rx="2" ry="2" />
<text  x="80.73" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="1077" width="0.2" height="15.0" fill="rgb(208,62,40)" rx="2" ry="2" />
<text  x="459.80" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1205" width="0.5" height="15.0" fill="rgb(232,210,28)" rx="2" ry="2" />
<text  x="1185.75" y="1215.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.08%)</title><rect x="436.3" y="1925" width="0.9" height="15.0" fill="rgb(234,170,8)" rx="2" ry="2" />
<text  x="439.26" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (3 samples, 0.02%)</title><rect x="171.2" y="1957" width="0.3" height="15.0" fill="rgb(245,5,51)" rx="2" ry="2" />
<text  x="174.21" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1909" width="0.2" height="15.0" fill="rgb(248,43,42)" rx="2" ry="2" />
<text  x="1186.24" y="1919.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (3 samples, 0.02%)</title><rect x="69.9" y="1989" width="0.2" height="15.0" fill="rgb(227,61,12)" rx="2" ry="2" />
<text  x="72.90" y="1999.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDbDocument*, std::vector&lt;TDbDocument, std::allocator&lt;TDbDocument&gt; &gt; &gt;, TDbDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TClusterer::Cluster (13 samples, 0.09%)</title><rect x="423.1" y="1989" width="1.1" height="15.0" fill="rgb(238,218,6)" rx="2" ry="2" />
<text  x="426.14" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="456.1" y="1493" width="0.4" height="15.0" fill="rgb(243,151,47)" rx="2" ry="2" />
<text  x="459.15" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1573" width="7.5" height="15.0" fill="rgb(213,127,53)" rx="2" ry="2" />
<text  x="64.92" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::_M_insert_aux&lt;c10::IValue&gt; (2 samples, 0.01%)</title><rect x="1186.6" y="2053" width="0.1" height="15.0" fill="rgb(208,74,36)" rx="2" ry="2" />
<text  x="1189.58" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;fasttext::entry, std::allocator&lt;fasttext::entry&gt; &gt;::_M_realloc_insert&lt;fasttext::entry const&amp;&gt; (4 samples, 0.03%)</title><rect x="127.0" y="2021" width="0.4" height="15.0" fill="rgb(218,219,49)" rx="2" ry="2" />
<text  x="130.04" y="2031.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.03%)</title><rect x="426.2" y="1925" width="0.3" height="15.0" fill="rgb(250,196,26)" rx="2" ry="2" />
<text  x="429.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.7" y="1477" width="0.1" height="15.0" fill="rgb(218,11,51)" rx="2" ry="2" />
<text  x="446.68" y="1487.5" ></text>
</g>
<g >
<title>TDbDocument::TDbDocument (2 samples, 0.01%)</title><rect x="186.5" y="1957" width="0.1" height="15.0" fill="rgb(227,134,27)" rx="2" ry="2" />
<text  x="189.45" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1589" width="0.5" height="15.0" fill="rgb(254,221,48)" rx="2" ry="2" />
<text  x="1185.75" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.23%)</title><rect x="728.3" y="2021" width="2.7" height="15.0" fill="rgb(244,68,27)" rx="2" ry="2" />
<text  x="731.29" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="456.1" y="1717" width="0.4" height="15.0" fill="rgb(209,222,8)" rx="2" ry="2" />
<text  x="459.07" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1621" width="0.5" height="15.0" fill="rgb(226,20,15)" rx="2" ry="2" />
<text  x="1185.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1845" width="0.2" height="15.0" fill="rgb(230,55,28)" rx="2" ry="2" />
<text  x="1186.24" y="1855.5" ></text>
</g>
<g >
<title>c10::impl::getDeviceGuardImpl (2 samples, 0.01%)</title><rect x="1152.8" y="1893" width="0.1" height="15.0" fill="rgb(239,18,36)" rx="2" ry="2" />
<text  x="1155.75" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1845" width="0.5" height="15.0" fill="rgb(219,189,36)" rx="2" ry="2" />
<text  x="1185.75" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="213" width="0.5" height="15.0" fill="rgb(246,217,42)" rx="2" ry="2" />
<text  x="1185.75" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.06%)</title><rect x="456.6" y="1557" width="0.7" height="15.0" fill="rgb(211,48,10)" rx="2" ry="2" />
<text  x="459.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="821" width="0.2" height="15.0" fill="rgb(235,56,5)" rx="2" ry="2" />
<text  x="459.80" y="831.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="171.7" y="1973" width="0.2" height="15.0" fill="rgb(206,12,50)" rx="2" ry="2" />
<text  x="174.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="456.8" y="629" width="0.2" height="15.0" fill="rgb(218,228,3)" rx="2" ry="2" />
<text  x="459.80" y="639.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="181" width="7.5" height="15.0" fill="rgb(244,79,5)" rx="2" ry="2" />
<text  x="64.92" y="191.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="423.2" y="1957" width="0.2" height="15.0" fill="rgb(208,124,46)" rx="2" ry="2" />
<text  x="426.22" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1237" width="0.1" height="15.0" fill="rgb(253,3,13)" rx="2" ry="2" />
<text  x="459.96" y="1247.5" ></text>
</g>
<g >
<title>c10::SmallVectorImpl&lt;at::OperandInfo&gt;::emplace_back&lt;at::Tensor const&amp;&gt; (2 samples, 0.01%)</title><rect x="69.2" y="53" width="0.1" height="15.0" fill="rgb(239,132,45)" rx="2" ry="2" />
<text  x="72.17" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="309" width="0.5" height="15.0" fill="rgb(232,9,29)" rx="2" ry="2" />
<text  x="1185.75" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="693" width="0.2" height="15.0" fill="rgb(239,174,24)" rx="2" ry="2" />
<text  x="1186.24" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1541" width="0.5" height="15.0" fill="rgb(249,86,20)" rx="2" ry="2" />
<text  x="1185.75" y="1551.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.03%)</title><rect x="80.9" y="2021" width="0.3" height="15.0" fill="rgb(241,158,48)" rx="2" ry="2" />
<text  x="83.91" y="2031.5" ></text>
</g>
<g >
<title>TDbDocument::operator= (2 samples, 0.01%)</title><rect x="423.5" y="1941" width="0.2" height="15.0" fill="rgb(230,64,23)" rx="2" ry="2" />
<text  x="426.55" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="901" width="0.2" height="15.0" fill="rgb(238,115,37)" rx="2" ry="2" />
<text  x="459.80" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="661" width="0.7" height="15.0" fill="rgb(234,57,43)" rx="2" ry="2" />
<text  x="1186.72" y="671.5" ></text>
</g>
<g >
<title>at::TensorIterator::fast_set_up (4 samples, 0.03%)</title><rect x="68.8" y="37" width="0.4" height="15.0" fill="rgb(239,44,3)" rx="2" ry="2" />
<text  x="71.85" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="631.3" y="2005" width="0.2" height="15.0" fill="rgb(243,22,12)" rx="2" ry="2" />
<text  x="634.30" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1781" width="7.5" height="15.0" fill="rgb(250,79,27)" rx="2" ry="2" />
<text  x="64.92" y="1791.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDbDocument*, std::vector&lt;TDbDocument, std::allocator&lt;TDbDocument&gt; &gt; &gt;, TDbDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;TClusterer::Cluster (6 samples, 0.04%)</title><rect x="423.7" y="1957" width="0.5" height="15.0" fill="rgb(209,80,5)" rx="2" ry="2" />
<text  x="426.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="443.7" y="1557" width="0.4" height="15.0" fill="rgb(233,19,18)" rx="2" ry="2" />
<text  x="446.68" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="821" width="7.5" height="15.0" fill="rgb(252,137,44)" rx="2" ry="2" />
<text  x="64.92" y="831.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::squeeze_dim (2 samples, 0.01%)</title><rect x="735.2" y="1989" width="0.2" height="15.0" fill="rgb(244,185,15)" rx="2" ry="2" />
<text  x="738.21" y="1999.5" ></text>
</g>
<g >
<title>c10::impl::ExcludeDispatchKeyGuard::ExcludeDispatchKeyGuard (2 samples, 0.01%)</title><rect x="76.3" y="2021" width="0.1" height="15.0" fill="rgb(235,220,23)" rx="2" ry="2" />
<text  x="79.26" y="2031.5" ></text>
</g>
<g >
<title>c10::Dispatcher::dispatch_ (3 samples, 0.02%)</title><rect x="734.6" y="2005" width="0.3" height="15.0" fill="rgb(212,145,18)" rx="2" ry="2" />
<text  x="737.64" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1733" width="0.4" height="15.0" fill="rgb(217,52,39)" rx="2" ry="2" />
<text  x="459.07" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="1573" width="0.5" height="15.0" fill="rgb(217,182,47)" rx="2" ry="2" />
<text  x="1185.75" y="1583.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (2 samples, 0.01%)</title><rect x="72.3" y="2005" width="0.1" height="15.0" fill="rgb(248,100,35)" rx="2" ry="2" />
<text  x="75.27" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="517" width="7.5" height="15.0" fill="rgb(225,130,42)" rx="2" ry="2" />
<text  x="64.92" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="456.6" y="1637" width="0.7" height="15.0" fill="rgb(247,31,15)" rx="2" ry="2" />
<text  x="459.55" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="734.6" y="2021" width="0.5" height="15.0" fill="rgb(238,0,53)" rx="2" ry="2" />
<text  x="737.64" y="2031.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="450.8" y="1893" width="0.2" height="15.0" fill="rgb(251,221,38)" rx="2" ry="2" />
<text  x="453.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.03%)</title><rect x="1182.8" y="85" width="0.4" height="15.0" fill="rgb(233,96,27)" rx="2" ry="2" />
<text  x="1185.83" y="95.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDbDocument*, __gnu_cxx::__normal_iterator&lt;TDbDocument*, std::vector&lt;TDbDocument, std::allocator&lt;TDbDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;TClusterer::Cluster (2 samples, 0.01%)</title><rect x="423.5" y="1957" width="0.2" height="15.0" fill="rgb(217,218,49)" rx="2" ry="2" />
<text  x="426.55" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (420 samples, 2.90%)</title><rect x="686.3" y="2037" width="34.2" height="15.0" fill="rgb(252,181,43)" rx="2" ry="2" />
<text  x="689.31" y="2047.5" >on..</text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (24 samples, 0.17%)</title><rect x="444.8" y="1941" width="2.0" height="15.0" fill="rgb(214,222,44)" rx="2" ry="2" />
<text  x="447.82" y="1951.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (9 samples, 0.06%)</title><rect x="728.7" y="2005" width="0.7" height="15.0" fill="rgb(208,229,31)" rx="2" ry="2" />
<text  x="731.69" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.06%)</title><rect x="475.5" y="1941" width="0.6" height="15.0" fill="rgb(224,94,53)" rx="2" ry="2" />
<text  x="478.46" y="1951.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (109 samples, 0.75%)</title><rect x="677.4" y="2037" width="8.9" height="15.0" fill="rgb(252,204,32)" rx="2" ry="2" />
<text  x="680.43" y="2047.5" ></text>
</g>
<g >
<title>at::TensorIterator::compute_strides (2 samples, 0.01%)</title><rect x="632.2" y="1893" width="0.2" height="15.0" fill="rgb(215,73,13)" rx="2" ry="2" />
<text  x="635.19" y="1903.5" ></text>
</g>
<g >
<title>caffe2::detail::_New&lt;float&gt; (32 samples, 0.22%)</title><rect x="751.2" y="2053" width="2.6" height="15.0" fill="rgb(214,189,26)" rx="2" ry="2" />
<text  x="754.19" y="2063.5" ></text>
</g>
<g >
<title>torch::jit::GraphExecutorImplBase::run (54 samples, 0.37%)</title><rect x="1150.0" y="1989" width="4.4" height="15.0" fill="rgb(223,108,47)" rx="2" ry="2" />
<text  x="1152.98" y="1999.5" ></text>
</g>
<g >
<title>torch::autograd::VariableType::slice_Tensor (8 samples, 0.06%)</title><rect x="469.8" y="1893" width="0.6" height="15.0" fill="rgb(216,137,15)" rx="2" ry="2" />
<text  x="472.76" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.03%)</title><rect x="1182.8" y="69" width="0.4" height="15.0" fill="rgb(244,95,40)" rx="2" ry="2" />
<text  x="1185.83" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="389" width="0.2" height="15.0" fill="rgb(227,199,12)" rx="2" ry="2" />
<text  x="1186.24" y="399.5" ></text>
</g>
<g >
<title>at::native::legacy::cpu::s__th_addmm_out (2 samples, 0.01%)</title><rect x="67.5" y="53" width="0.1" height="15.0" fill="rgb(240,27,35)" rx="2" ry="2" />
<text  x="70.46" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="437" width="0.2" height="15.0" fill="rgb(217,168,8)" rx="2" ry="2" />
<text  x="1186.24" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.02%)</title><rect x="1180.5" y="2053" width="0.3" height="15.0" fill="rgb(243,178,30)" rx="2" ry="2" />
<text  x="1183.55" y="2063.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (2,897 samples, 20.01%)</title><rect x="186.6" y="1973" width="236.1" height="15.0" fill="rgb(218,174,36)" rx="2" ry="2" />
<text  x="189.62" y="1983.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2 samples, 0.01%)</title><rect x="126.6" y="2021" width="0.2" height="15.0" fill="rgb(219,126,18)" rx="2" ry="2" />
<text  x="129.63" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="456.1" y="1701" width="0.4" height="15.0" fill="rgb(229,206,3)" rx="2" ry="2" />
<text  x="459.07" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (43 samples, 0.30%)</title><rect x="93.5" y="2021" width="3.5" height="15.0" fill="rgb(213,116,43)" rx="2" ry="2" />
<text  x="96.54" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (3 samples, 0.02%)</title><rect x="77.6" y="2021" width="0.3" height="15.0" fill="rgb(252,59,47)" rx="2" ry="2" />
<text  x="80.65" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.06%)</title><rect x="1183.7" y="949" width="0.7" height="15.0" fill="rgb(223,62,43)" rx="2" ry="2" />
<text  x="1186.72" y="959.5" ></text>
</g>
<g >
<title>strlen@plt (19 samples, 0.13%)</title><rect x="1187.9" y="2053" width="1.5" height="15.0" fill="rgb(218,100,50)" rx="2" ry="2" />
<text  x="1190.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="469" width="0.5" height="15.0" fill="rgb(227,71,46)" rx="2" ry="2" />
<text  x="1185.75" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18 samples, 0.12%)</title><rect x="455.8" y="1925" width="1.5" height="15.0" fill="rgb(242,29,51)" rx="2" ry="2" />
<text  x="458.82" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (6 samples, 0.04%)</title><rect x="78.8" y="2021" width="0.5" height="15.0" fill="rgb(227,159,44)" rx="2" ry="2" />
<text  x="81.79" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;c10::IValue, std::allocator&lt;c10::IValue&gt; &gt;::emplace_back&lt;at::Tensor const&amp;&gt; (3 samples, 0.02%)</title><rect x="1186.7" y="2053" width="0.3" height="15.0" fill="rgb(212,144,2)" rx="2" ry="2" />
<text  x="1189.74" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.03%)</title><rect x="428.2" y="1925" width="0.3" height="15.0" fill="rgb(248,122,47)" rx="2" ry="2" />
<text  x="431.19" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (16 samples, 0.11%)</title><rect x="458.7" y="1925" width="1.3" height="15.0" fill="rgb(249,216,5)" rx="2" ry="2" />
<text  x="461.67" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1269" width="0.2" height="15.0" fill="rgb(239,129,45)" rx="2" ry="2" />
<text  x="1186.24" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="501" width="7.5" height="15.0" fill="rgb(210,113,36)" rx="2" ry="2" />
<text  x="64.92" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="457.0" y="1173" width="0.1" height="15.0" fill="rgb(232,129,50)" rx="2" ry="2" />
<text  x="459.96" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1013" width="0.5" height="15.0" fill="rgb(220,74,43)" rx="2" ry="2" />
<text  x="1185.75" y="1023.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2 samples, 0.01%)</title><rect x="1185.3" y="2053" width="0.1" height="15.0" fill="rgb(207,107,34)" rx="2" ry="2" />
<text  x="1188.27" y="2063.5" ></text>
</g>
<g >
<title>TDbDocument::TDbDocument (2 samples, 0.01%)</title><rect x="451.7" y="1989" width="0.1" height="15.0" fill="rgb(215,30,45)" rx="2" ry="2" />
<text  x="454.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.11%)</title><rect x="456.0" y="1877" width="1.3" height="15.0" fill="rgb(239,49,39)" rx="2" ry="2" />
<text  x="458.98" y="1887.5" ></text>
</g>
<g >
<title>torch::autograd::impl::gradient_edge (3 samples, 0.02%)</title><rect x="630.1" y="2021" width="0.2" height="15.0" fill="rgb(240,87,27)" rx="2" ry="2" />
<text  x="633.07" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (3 samples, 0.02%)</title><rect x="449.9" y="1989" width="0.2" height="15.0" fill="rgb(247,156,4)" rx="2" ry="2" />
<text  x="452.87" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="341" width="0.2" height="15.0" fill="rgb(243,48,37)" rx="2" ry="2" />
<text  x="1186.24" y="351.5" ></text>
</g>
<g >
<title>c10::Device::validate (3 samples, 0.02%)</title><rect x="751.5" y="2005" width="0.3" height="15.0" fill="rgb(227,139,43)" rx="2" ry="2" />
<text  x="754.51" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="1557" width="0.5" height="15.0" fill="rgb(228,193,50)" rx="2" ry="2" />
<text  x="1185.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.10%)</title><rect x="1183.2" y="1957" width="1.2" height="15.0" fill="rgb(211,164,27)" rx="2" ry="2" />
<text  x="1186.24" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1183.2" y="1077" width="0.2" height="15.0" fill="rgb(229,49,27)" rx="2" ry="2" />
<text  x="1186.24" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1253" width="0.8" height="15.0" fill="rgb(240,217,39)" rx="2" ry="2" />
<text  x="1186.64" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="456.6" y="1445" width="0.7" height="15.0" fill="rgb(239,48,16)" rx="2" ry="2" />
<text  x="459.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1182.7" y="965" width="0.5" height="15.0" fill="rgb(209,57,25)" rx="2" ry="2" />
<text  x="1185.75" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="443.5" y="1637" width="0.2" height="15.0" fill="rgb(241,205,42)" rx="2" ry="2" />
<text  x="446.51" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.06%)</title><rect x="426.5" y="1925" width="0.6" height="15.0" fill="rgb(247,60,40)" rx="2" ry="2" />
<text  x="429.48" y="1935.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (7 samples, 0.05%)</title><rect x="435.0" y="1941" width="0.6" height="15.0" fill="rgb(237,90,54)" rx="2" ry="2" />
<text  x="438.04" y="1951.5" ></text>
</g>
<g >
<title>at::CPUType::mm (5 samples, 0.03%)</title><rect x="74.9" y="2021" width="0.4" height="15.0" fill="rgb(222,189,48)" rx="2" ry="2" />
<text  x="77.88" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1182.7" y="693" width="0.5" height="15.0" fill="rgb(209,222,10)" rx="2" ry="2" />
<text  x="1185.75" y="703.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="757" width="7.5" height="15.0" fill="rgb(227,116,14)" rx="2" ry="2" />
<text  x="64.92" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="741" width="0.7" height="15.0" fill="rgb(214,120,38)" rx="2" ry="2" />
<text  x="1186.72" y="751.5" ></text>
</g>
<g >
<title>torch::autograd::VariableHooks::tensor_data (2 samples, 0.01%)</title><rect x="633.5" y="1973" width="0.2" height="15.0" fill="rgb(230,27,40)" rx="2" ry="2" />
<text  x="636.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 0.64%)</title><rect x="61.9" y="1221" width="7.5" height="15.0" fill="rgb(208,36,0)" rx="2" ry="2" />
<text  x="64.92" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.06%)</title><rect x="1183.7" y="517" width="0.7" height="15.0" fill="rgb(211,44,2)" rx="2" ry="2" />
<text  x="1186.72" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="517" width="0.2" height="15.0" fill="rgb(232,74,32)" rx="2" ry="2" />
<text  x="1186.24" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="443.7" y="1637" width="0.4" height="15.0" fill="rgb(240,12,20)" rx="2" ry="2" />
<text  x="446.68" y="1647.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (294 samples, 2.03%)</title><rect x="99.4" y="2021" width="24.0" height="15.0" fill="rgb(211,20,13)" rx="2" ry="2" />
<text  x="102.41" y="2031.5" >o..</text>
</g>
<g >
<title>at::TypeDefault::squeeze_dim (2 samples, 0.01%)</title><rect x="629.7" y="2037" width="0.2" height="15.0" fill="rgb(243,121,49)" rx="2" ry="2" />
<text  x="632.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="456.8" y="1093" width="0.2" height="15.0" fill="rgb(239,37,35)" rx="2" ry="2" />
<text  x="459.80" y="1103.5" ></text>
</g>
<g >
<title>at::native::norm_out (6 samples, 0.04%)</title><rect x="1152.2" y="1877" width="0.5" height="15.0" fill="rgb(243,150,42)" rx="2" ry="2" />
<text  x="1155.18" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1183.2" y="677" width="0.2" height="15.0" fill="rgb(245,62,24)" rx="2" ry="2" />
<text  x="1186.24" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.06%)</title><rect x="1183.6" y="1157" width="0.8" height="15.0" fill="rgb(220,65,30)" rx="2" ry="2" />
<text  x="1186.64" y="1167.5" ></text>
</g>
</g>
</svg>
